app_name,test_url,pipedream_component_code
Slack,https://slack.com/api/users.profile.get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    slack: {
      type: ""app"",
      app: ""slack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://slack.com/api/users.profile.get`,
      headers: {
        Authorization: `Bearer ${this.slack.$auth.oauth_access_token}`,
      },
    })
  },
})
"
KVdb,https://kvdb.io/⫷custom_fields.api_key⫸/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    kvdb: {
      type: ""app"",
      app: ""kvdb"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://kvdb.io/${this.kvdb.$auth.api_key}/`,
    })
  },
})
"
Twitter,https://api.twitter.com/1.1/account/verify_credentials.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twitter: {
      type: ""app"",
      app: ""twitter"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.twitter.com/1.1/account/verify_credentials.json`,
    }, {
      token: {
        key: this.twitter.$auth.oauth_access_token,
        secret: this.twitter.$auth.oauth_refresh_token,
      },
      oauthSignerUri: this.twitter.$auth.oauth_signer_uri,
    })
  },
})
"
Twilio SendGrid,https://api.sendgrid.com/v3/user/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendgrid: {
      type: ""app"",
      app: ""sendgrid"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sendgrid.com/v3/user/account`,
      headers: {
        Authorization: `Bearer ${this.sendgrid.$auth.api_key}`,
      },
    })
  },
})
"
Google Drive,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_drive: {
      type: ""app"",
      app: ""google_drive"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.google_drive.$auth.oauth_access_token}`,
      },
    })
  },
})
"
ipdata.co,https://api.ipdata.co?api-key=⫷custom_fields.api_key⫸,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ipdata_co: {
      type: ""app"",
      app: ""ipdata_co"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ipdata.co?api-key=${this.ipdata_co.$auth.api_key}`,
    })
  },
})
"
Twilio,https://api.twilio.com/2010-04-01/Accounts.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twilio: {
      type: ""app"",
      app: ""twilio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.twilio.com/2010-04-01/Accounts.json`,
      auth: {
        username: `${this.twilio.$auth.AccountSid}`,
        password: `${this.twilio.$auth.AuthToken}`,
      },
    })
  },
})
"
GitHub,https://api.github.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    github: {
      type: ""app"",
      app: ""github"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.github.com/user`,
      headers: {
        Authorization: `Bearer ${this.github.$auth.oauth_access_token}`,
        ""X-GitHub-Api-Version"": `2022-11-28`,
      },
    })
  },
})
"
Vercel (OAuth),https://api.vercel.com/www/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vercel: {
      type: ""app"",
      app: ""vercel"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.vercel.com/www/user`,
      headers: {
        Authorization: `Bearer ${this.vercel.$auth.oauth_access_token}`,
      },
      params: {
        teamId: this.vercel.$auth.team_id
      }
    })
  },
})

// For more information on using Vercel's API in your workflow, view their documentation here:
// https://vercel.com/docs/rest-api"
Coda,https://coda.io/apis/v1/whoami,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    coda: {
      type: ""app"",
      app: ""coda"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://coda.io/apis/v1/whoami`,
      headers: {
        Authorization: `Bearer ${this.coda.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Airtable,https://cae0ee5cb6b9ebf1c516808da66b0319.m.pipedream.net,"module.exports = defineComponent({
  props: {
    airtable: {
      type: ""app"",
      app: ""airtable"",
    },
    baseId: {
      type: ""$.airtable.baseId"",
      appProp: ""airtable"",
    },
    tableId: {
      type: ""$.airtable.tableId"",
      baseIdProp: ""baseId"",
    },
  },
  async run({steps, $}) {
    const Airtable = require('airtable');
    const base = new Airtable({apiKey: this.airtable.$auth.api_key}).base(this.baseId);

    const data = []
    
    await base(this.tableId).select({
      // pass optional config parameters here
    }).eachPage(function page(records, fetchNextPage) {
        // This function (`page`) will get called for each page of records.
        records.forEach(function(record) {
            data.push(record._rawJson)
        });

        // To fetch the next page of records, call `fetchNextPage`.
        // If there are more records, `page` will get called again.
        // If there are no more records, `done` will get called.
        fetchNextPage();
    })

    return data
  },
})
"
Shopify,https://{{custom_fields.shop_id}}.myshopify.com/admin/api/2022-10/graphql.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shopify: {
      type: ""app"",
      app: ""shopify"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `{  
        shop { 
          id 
          name
          email 
        } 
      }`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.shopify.$auth.shop_id}.myshopify.com/admin/api/2022-10/graphql.json`,
      headers: {
        ""X-Shopify-Access-Token"": `${this.shopify.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
BitBucket,https://api.bitbucket.org/2.0/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bitbucket: {
      type: ""app"",
      app: ""bitbucket"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bitbucket.org/2.0/user`,
      headers: {
        Authorization: `Bearer ${this.bitbucket.$auth.oauth_access_token}`,
      },
    })
  },
})
"
AWS,test,"module.exports = defineComponent({
  props: {
    aws: {
      type: ""app"",
      app: ""aws"",
    }
  },
  async run({steps, $}) {
    const AWS = require(""aws-sdk"")
    const { accessKeyId, secretAccessKey } = this.aws.$auth
    
    /* Now, pass the accessKeyId and secretAccessKey to the constructor for your desired service. For example:
    
    const dynamodb = new AWS.DynamoDB({
      accessKeyId, 
      secretAccessKey,
      region: 'us-east-1',
    })
    
    */
  },
})
"
Gitlab,https://gitlab.com/api/v4/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gitlab: {
      type: ""app"",
      app: ""gitlab"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://gitlab.com/api/v4/user`,
      headers: {
        Authorization: `Bearer ${this.gitlab.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Asana,https://app.asana.com/api/1.0/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    asana: {
      type: ""app"",
      app: ""asana"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.asana.com/api/1.0/users/me`,
      headers: {
        Authorization: `Bearer ${this.asana.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Coinbase,https://api.coinbase.com/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    coinbase: {
      type: ""app"",
      app: ""coinbase"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.coinbase.com/v2/user`,
      headers: {
        Authorization: `Bearer ${this.coinbase.$auth.oauth_access_token}`,
        ""CB-VERSION"": ""2021-11-16"",
      },
    })
  },
})
"
Atlassian,https://api.atlassian.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    atlassian: {
      type: ""app"",
      app: ""atlassian"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.atlassian.com/me`,
      headers: {
        Authorization: `Bearer ${this.atlassian.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Yahoo! Fantasy Sports,https://api.login.yahoo.com/openid/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    yahoo_fantasy_sports: {
      type: ""app"",
      app: ""yahoo_fantasy_sports"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.login.yahoo.com/openid/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.yahoo_fantasy_sports.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Google,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google: {
      type: ""app"",
      app: ""google"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.google.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Plaid,test,"module.exports = defineComponent({
  props: {
    plaid: {
      type: ""app"",
      app: ""plaid"",
    }
  },
  async run({steps, $}) {
    const { Configuration, PlaidApi } = require('plaid');
    
    const client = new PlaidApi(
      new Configuration({
        basePath: this.plaid.$auth.environment,
        baseOptions: {
          headers: {
            'PLAID-CLIENT-ID': this.plaid.$auth.client_id,
            'PLAID-SECRET': this.plaid.$auth.client_secret,
          },
        },
      })
    );
    
    // Test request
    const request = {
      count: 10,
      offset: 0,
      country_codes: ['US'],
    };
    
    const response = await client.institutionsGet(request);
    return response.data.institutions;
  },
})
"
Amazon,https://api.amazon.com/user/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amazon: {
      type: ""app"",
      app: ""amazon"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.amazon.com/user/profile`,
      headers: {
        Authorization: `Bearer ${this.amazon.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Trello,https://api.trello.com/1/members/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    trello: {
      type: ""app"",
      app: ""trello"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.trello.com/1/members/me`,
    }, {
      token: {
        key: this.trello.$auth.oauth_access_token,
        secret: this.trello.$auth.oauth_refresh_token,
      },
      oauthSignerUri: this.trello.$auth.oauth_signer_uri,
    })
  },
})
"
Wrike,https://{{custom_fields.host}}/api/v4/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wrike: {
      type: ""app"",
      app: ""wrike"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.wrike.$auth.host}/api/v4/contacts`,
      headers: {
        Authorization: `Bearer ${this.wrike.$auth.oauth_access_token}`,
      },
      params: {
        me: `true`,
      },
    })
  },
})
"
Zendesk,https://{{custom_fields.subdomain}}.zendesk.com/api/v2/users/me/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zendesk: {
      type: ""app"",
      app: ""zendesk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.zendesk.$auth.subdomain}.zendesk.com/api/v2/users/me/`,
      headers: {
        Authorization: `Bearer ${this.zendesk.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Stripe,https://api.stripe.com/v1/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    stripe: {
      type: ""app"",
      app: ""stripe"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.stripe.com/v1/accounts`,
      auth: {
        username: `${this.stripe.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Jira,https://api.atlassian.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jira: {
      type: ""app"",
      app: ""jira"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.atlassian.com/me`,
      headers: {
        Authorization: `Bearer ${this.jira.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Confluence,https://api.atlassian.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    confluence: {
      type: ""app"",
      app: ""confluence"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.atlassian.com/me`,
      headers: {
        Authorization: `Bearer ${this.confluence.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Jira Service Desk,https://api.atlassian.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jira_service_desk: {
      type: ""app"",
      app: ""jira_service_desk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.atlassian.com/me`,
      headers: {
        Authorization: `Bearer ${this.jira_service_desk.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Atlassian Data,https://api.atlassian.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    atlassian_data: {
      type: ""app"",
      app: ""atlassian_data"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.atlassian.com/me`,
      headers: {
        Authorization: `Bearer ${this.atlassian_data.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Atlassian Identity,https://api.atlassian.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    atlassian_identity: {
      type: ""app"",
      app: ""atlassian_identity"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.atlassian.com/me`,
      headers: {
        Authorization: `Bearer ${this.atlassian_identity.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Basecamp,https://launchpad.37signals.com/authorization.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    basecamp: {
      type: ""app"",
      app: ""basecamp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://launchpad.37signals.com/authorization.json`,
      headers: {
        Authorization: `Bearer ${this.basecamp.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Facebook Pages,https://graph.facebook.com/me/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    facebook_pages: {
      type: ""app"",
      app: ""facebook_pages"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.facebook.com/me/`,
      headers: {
        Authorization: `Bearer ${auths.facebook.oauth_access_token}`,
      },
    })
  },
})
"
Bitly,https://api-ssl.bitly.com/v4/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bitly: {
      type: ""app"",
      app: ""bitly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api-ssl.bitly.com/v4/user`,
      headers: {
        Authorization: `Bearer ${this.bitly.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Box,https://api.box.com/2.0/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    box: {
      type: ""app"",
      app: ""box"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.box.com/2.0/users/me`,
      headers: {
        Authorization: `Bearer ${this.box.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Dropbox,https://api.dropboxapi.com/2/users/get_account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dropbox: {
      type: ""app"",
      app: ""dropbox"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""account_id"": `${this.dropbox.$auth.oauth_uid}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.dropboxapi.com/2/users/get_account`,
      headers: {
        Authorization: `Bearer ${this.dropbox.$auth.oauth_access_token}`,
      },
      data,
    })
  },
})
"
Linkedin,https://api.linkedin.com/v2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    linkedin: {
      type: ""app"",
      app: ""linkedin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.linkedin.com/v2/me`,
      headers: {
        Authorization: `Bearer ${this.linkedin.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Discord Webhook,https://discord.com/api/users/@me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    discord_webhook: {
      type: ""app"",
      app: ""discord_webhook"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://discord.com/api/users/@me`,
      headers: {
        Authorization: `Bearer ${this.discord_webhook.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Foursquare,https://api.foursquare.com/v2/users/self,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    foursquare: {
      type: ""app"",
      app: ""foursquare"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.foursquare.com/v2/users/self`,
      headers: {
        Authorization: `Bearer ${this.foursquare.$auth.oauth_access_token}`,
      },
      params: {
        oauth_token: `${this.foursquare.$auth.oauth_access_token}`,
        ""v"": `20191001`,
      },
    })
  },
})
"
Paypal,{{custom_fields.app_type}}.paypal.com/v1/identity/oauth2/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    paypal: {
      type: ""app"",
      app: ""paypal"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.paypal.$auth.app_type}.paypal.com/v1/identity/oauth2/userinfo`,
      headers: {
        Authorization: `Bearer ${this.paypal.$auth.oauth_access_token}`,
      },
      params: {
        schema: `paypalv1.1`,
      },
    })
  },
})
"
Stack Exchange,https://api.stackexchange.com/2.2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    stack_exchange: {
      type: ""app"",
      app: ""stack_exchange"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.stackexchange.com/2.2/me`,
      headers: {
        Authorization: `Bearer ${this.stack_exchange.$auth.oauth_access_token}`,
      },
      params: {
        site: `stackoverflow`,
        access_token: `${this.stack_exchange.$auth.oauth_access_token}`,
        key: `qM6Y7e57HJiAO3V7pHSbLw((`,
      },
    })
  },
})
"
Wordpress.com,https://public-api.wordpress.com/rest/v1.1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wordpress_com: {
      type: ""app"",
      app: ""wordpress_com"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://public-api.wordpress.com/rest/v1.1/me`,
      headers: {
        Authorization: `Bearer ${this.wordpress_com.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Figma,https://api.figma.com/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    figma: {
      type: ""app"",
      app: ""figma"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.figma.com/v1/me`,
      headers: {
        Authorization: `Bearer ${this.figma.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Goodreads,https://www.goodreads.com/search.xml,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    goodreads: {
      type: ""app"",
      app: ""goodreads"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.goodreads.com/search.xml`,
      headers: {
        Authorization: `Bearer oauth`,
        ""accept"": `application/json`,
      },
      params: {
        key: `${this.goodreads.$auth.key}`,
        ""q"": `Enders Game`,
      },
    })
  },
})
"
Dribbble,https://api.dribbble.com/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dribbble: {
      type: ""app"",
      app: ""dribbble"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.dribbble.com/v2/user`,
      headers: {
        Authorization: `Bearer ${this.dribbble.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Spotify,https://api.spotify.com/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    spotify: {
      type: ""app"",
      app: ""spotify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.spotify.com/v1/me`,
      headers: {
        Authorization: `Bearer ${this.spotify.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Uber,https://api.uber.com/v1.2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    uber: {
      type: ""app"",
      app: ""uber"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.uber.com/v1.2/me`,
      headers: {
        Authorization: `Bearer ${this.uber.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Twitch,https://api.twitch.tv/helix/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twitch: {
      type: ""app"",
      app: ""twitch"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.twitch.tv/helix/users`,
      headers: {
        Authorization: `Bearer ${this.twitch.$auth.oauth_access_token}`,
        ""Client-ID"": `${this.twitch.$auth.oauth_client_id}`,
      },
    })
  },
})
"
Contacts+,https://api.contactsplus.com/api/v1/account.get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    contacts: {
      type: ""app"",
      app: ""contacts"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.contactsplus.com/api/v1/account.get`,
      headers: {
        Authorization: `Bearer ${this.contacts.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Mailchimp,https://login.mailchimp.com/oauth2/metadata,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailchimp: {
      type: ""app"",
      app: ""mailchimp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://login.mailchimp.com/oauth2/metadata`,
      headers: {
        Authorization: `Bearer ${this.mailchimp.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Acuity Scheduling,https://acuityscheduling.com/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    acuity_scheduling: {
      type: ""app"",
      app: ""acuity_scheduling"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://acuityscheduling.com/api/v1/me`,
      headers: {
        Authorization: `Bearer ${this.acuity_scheduling.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Procore,https://api.procore.com/rest/v1.0/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    procore: {
      type: ""app"",
      app: ""procore"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.procore.com/rest/v1.0/me`,
      headers: {
        Authorization: `Bearer ${this.procore.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Okta,https://{{custom_fields.yourOktaDomain}}/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    okta: {
      type: ""app"",
      app: ""okta"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.okta.$auth.yourOktaDomain}/api/v1/users/me`,
      headers: {
        Authorization: `Bearer ${this.okta.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoom,https://api.zoom.us/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoom: {
      type: ""app"",
      app: ""zoom"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.zoom.us/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.zoom.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Apigee,http://{{custom_fields.org_name}}-test.apigee.net/weather/forecastrss?w=12797282,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    apigee: {
      type: ""app"",
      app: ""apigee"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://${this.apigee.$auth.org_name}-test.apigee.net/weather/forecastrss?w=12797282`,
      headers: {
        Authorization: `Bearer ${this.apigee.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Imgur,https://api.imgur.com/3/account/me/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    imgur: {
      type: ""app"",
      app: ""imgur"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.imgur.com/3/account/me/`,
      headers: {
        Authorization: `Bearer ${this.imgur.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Digital Ocean,https://api.digitalocean.com/v2/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    digital_ocean: {
      type: ""app"",
      app: ""digital_ocean"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.digitalocean.com/v2/account`,
      headers: {
        Authorization: `Bearer ${this.digital_ocean.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Heroku,https://api.heroku.com/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    heroku: {
      type: ""app"",
      app: ""heroku"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.heroku.com/account`,
      headers: {
        Authorization: `Bearer ${this.heroku.$auth.oauth_access_token}`,
        ""accept"": `application/vnd.heroku+json; version=3`,
      },
    })
  },
})
"
NewsAPI,https://newsapi.org/v2/top-headlines,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    newsapi: {
      type: ""app"",
      app: ""newsapi"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://newsapi.org/v2/top-headlines`,
      headers: {
        Authorization: `Bearer ${this.newsapi.$auth.oauth_access_token}`,
      },
      params: {
        country: `us`,
        category: `business`,
        apiKey: `${this.newsapi.$auth.api_key}`,
      },
    })
  },
})
"
Gmail,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gmail: {
      type: ""app"",
      app: ""gmail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.gmail.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Segment,https://api.segment.io/v1/track,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    segment: {
      type: ""app"",
      app: ""segment"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""event"": `PipedreamTestOrder`,
      ""anonymousId"": `019mr8mf4r`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.segment.io/v1/track`,
      auth: {
        username: `${this.segment.$auth.write_key}`,
        password: ``,
      },
      data,
    })
  },
})
"
NASA API,https://api.nasa.gov/planetary/apod,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nasa_api: {
      type: ""app"",
      app: ""nasa_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.nasa.gov/planetary/apod`,
      params: {
        api_key: `${this.nasa_api.$auth.api_key}`,
      },
    })
  },
})
"
Reddit,https://oauth.reddit.com/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    reddit: {
      type: ""app"",
      app: ""reddit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://oauth.reddit.com/api/v1/me`,
      headers: {
        Authorization: `Bearer ${this.reddit.$auth.oauth_access_token}`,
        ""User-Agent"": `pipedream:v0.0.1 (by /u/pipedream-oauth)`,
      },
    })
  },
})
"
Netlify,https://api.netlify.com/api/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    netlify: {
      type: ""app"",
      app: ""netlify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.netlify.com/api/v1/user`,
      headers: {
        Authorization: `Bearer ${this.netlify.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Google Sheets,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_sheets: {
      type: ""app"",
      app: ""google_sheets"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.google_sheets.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Gumroad,https://api.gumroad.com/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gumroad: {
      type: ""app"",
      app: ""gumroad"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.gumroad.com/v2/user`,
      headers: {
        Authorization: `Bearer ${this.gumroad.$auth.oauth_access_token}`,
      },
    })
  },
})
"
AdRoll,https://services.adroll.com/api/v1/user/get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    adroll: {
      type: ""app"",
      app: ""adroll"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://services.adroll.com/api/v1/user/get`,
      headers: {
        Authorization: `Bearer ${this.adroll.$auth.oauth_access_token}`,
      },
      params: {
        apikey: `${this.adroll.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Google (scopes approval test),https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_scopes_approval_test: {
      type: ""app"",
      app: ""google_scopes_approval_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.google_scopes_approval_test.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Microsoft Graph API,https://graph.microsoft.com/v1.0/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    microsoft_graph_api: {
      type: ""app"",
      app: ""microsoft_graph_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.microsoft.com/v1.0/me`,
      headers: {
        Authorization: `Bearer ${this.microsoft_graph_api.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Harvest,https://api.harvestapp.com/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    harvest: {
      type: ""app"",
      app: ""harvest"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.harvestapp.com/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.harvest.$auth.oauth_access_token}`,
        ""Harvest-Account-Id"": `${this.harvest.$auth.account_id}`,
        ""User-Agent"": `Pipedream.com`,
      },
      params: {
        account_id: `${this.harvest.$auth.account_id}`,
      },
    })
  },
})
"
Big Cartel,https://api.bigcartel.com/v1/accounts/{{custom_fields.account_id}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    big_cartel: {
      type: ""app"",
      app: ""big_cartel"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bigcartel.com/v1/accounts/${this.big_cartel.$auth.account_id}`,
      headers: {
        Authorization: `Bearer ${this.big_cartel.$auth.oauth_access_token}`,
        ""Accept"": `application/vnd.api+json`,
        ""Content-type"": `application/vnd.api+json`,
      },
    })
  },
})
"
Webflow,https://api.webflow.com/info,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    webflow: {
      type: ""app"",
      app: ""webflow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.webflow.com/info`,
      headers: {
        Authorization: `Bearer ${this.webflow.$auth.oauth_access_token}`,
        ""accept-version"": `1.0.0`,
      },
    })
  },
})
"
Cloudflare (API key),https://api.cloudflare.com/client/v4/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudflare_api_key: {
      type: ""app"",
      app: ""cloudflare_api_key"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cloudflare.com/client/v4/user`,
      headers: {
        ""X-Auth-Key"": `${this.cloudflare_api_key.$auth.API_Key}`,
        ""X-Auth-Email"": `${this.cloudflare_api_key.$auth.Email}`,
      },
    })
  },
})
"
Cloudflare (API token),https://api.cloudflare.com/client/v4/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudflare_api_token: {
      type: ""app"",
      app: ""cloudflare_api_token"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cloudflare.com/client/v4/user`,
      headers: {
        Authorization: `Bearer ${this.cloudflare_api_token.$auth.API_token}`,
      },
    })
  },
})
"
RocketReach,https://api.rocketreach.co/v1/api/account?api_key=⫷custom_fields.api_key⫸,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rocketreach: {
      type: ""app"",
      app: ""rocketreach"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rocketreach.co/v1/api/account?api_key=${this.rocketreach.$auth.api_key}`,
    })
  },
})
"
TBD,https://www.googleapis.com/gmail/v1/users/me/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tbd: {
      type: ""app"",
      app: ""tbd"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/gmail/v1/users/me/profile`,
    })
  },
})
"
Auth0 (Management API),test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    auth0_management_api: {
      type: ""app"",
      app: ""auth0_management_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.auth0_management_api.$auth.domain}/userinfo`,
      headers: {
        Authorization: `Bearer ${this.auth0_management_api.$auth.oauth_access_token}`,
      },
    })
  },
})
"
CircleCI,https://circleci.com/api/v1.1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    circleci: {
      type: ""app"",
      app: ""circleci"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://circleci.com/api/v1.1/me`,
      params: {
        ""circle-token"": `${this.circleci.$auth.token}`,
      },
    })
  },
})
"
Giphy,api.giphy.com/v1/gifs/random,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    giphy: {
      type: ""app"",
      app: ""giphy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `api.giphy.com/v1/gifs/random`,
      params: {
        api_key: `${this.giphy.$auth.api_key}`,
      },
    })
  },
})
"
Product Hunt,https://api.producthunt.com/v2/api/graphql,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    product_hunt: {
      type: ""app"",
      app: ""product_hunt"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `{ 
        viewer { 
          user { 
            id
            username 
          } 
        } 
      }`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.producthunt.com/v2/api/graphql`,
      headers: {
        Authorization: `Bearer ${this.product_hunt.$auth.oauth_access_token}`,
      },
      data,
    })
  },
})
"
Nylas,https://api.nylas.com/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nylas: {
      type: ""app"",
      app: ""nylas"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.nylas.com/account`,
      headers: {
        Authorization: `Bearer ${this.nylas.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Mailgun,https://api.mailgun.net/v3/domains,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailgun: {
      type: ""app"",
      app: ""mailgun"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.mailgun.$auth.region && this.mailgun.$auth.region === ""EU"" ? ""api.eu"" : ""api""}.mailgun.net/v3/domains`,
      auth: {
        username: `api`,
        password: `${this.mailgun.$auth.api_key}`,
      },
    })
  },
})
"
Linear (API key),https://api.linear.app/graphql,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    linear_app: {
      type: ""app"",
      app: ""linear_app"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `{ 
        user(id: ""me"") {
          id
          email
          name
        }
      }`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.linear.app/graphql`,
      headers: {
        ""Authorization"": `${this.linear_app.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Formstack,https://www.formstack.com/api/v2/form.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    formstack: {
      type: ""app"",
      app: ""formstack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.formstack.com/api/v2/form.json`,
      headers: {
        Authorization: `Bearer ${this.formstack.$auth.oauth_access_token}`,
      },
    })
  },
})
"
MeisterTask,https://www.mindmeister.com/api/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    meistertask: {
      type: ""app"",
      app: ""meistertask"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.mindmeister.com/api/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.meistertask.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Ahrefs,https://apiv2.ahrefs.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ahrefs: {
      type: ""app"",
      app: ""ahrefs"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apiv2.ahrefs.com`,
      params: {
        output: `json`,
        token: `${this.ahrefs.$auth.oauth_access_token}`,
        from: `subscription_info`,
      },
    })
  },
})
"
YouTube (Data API),https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    youtube_data_api: {
      type: ""app"",
      app: ""youtube_data_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.youtube_data_api.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Pipedrive,https://api-proxy.pipedrive.com/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pipedrive: {
      type: ""app"",
      app: ""pipedrive"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api-proxy.pipedrive.com/users/me`,
      headers: {
        Authorization: `Bearer ${this.pipedrive.$auth.oauth_access_token}`,
      },
    })
  },
})
"
PagerDuty,https://api.pagerduty.com/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pagerduty: {
      type: ""app"",
      app: ""pagerduty"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pagerduty.com/users/me`,
      headers: {
        Authorization: `Bearer ${this.pagerduty.$auth.oauth_access_token}`,
        ""Accept"": `application/vnd.pagerduty+json;version=2`,
      },
    })
  },
})
"
Clearbit,https://person.clearbit.com/v1/people/email/alex@alexmaccaw.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clearbit: {
      type: ""app"",
      app: ""clearbit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://person.clearbit.com/v1/people/email/alex@alexmaccaw.com`,
      headers: {
        Authorization: `Bearer ${this.clearbit.$auth.secret_api_key}`,
      },
    })
  },
})
"
Gorgias (API Key),https://⫷custom_fields.domain⫸.gorgias.com/api/users/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gorgias: {
      type: ""app"",
      app: ""gorgias"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.gorgias.$auth.domain}.gorgias.com/api/users/`,
      auth: {
        username: `${this.gorgias.$auth.email}`,
        password: `${this.gorgias.$auth.api_key}`,
      },
    })
  },
})
"
Algorithmia,https://api.algorithmia.com/v1/algo/demo/Hello/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    algorithmia: {
      type: ""app"",
      app: ""algorithmia"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.algorithmia.com/v1/algo/demo/Hello/`,
      headers: {
        ""Authorization"": `Simple ${this.algorithmia.$auth.YOUR_API_KEY}`,
      },
    })
  },
})
"
Sentry,https://sentry.io/api/0/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sentry: {
      type: ""app"",
      app: ""sentry"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://sentry.io/api/0/`,
      headers: {
        Authorization: `Bearer ${this.sentry.$auth.auth_token}`,
      },
    })
  },
})
"
Pushshift Reddit Search,https://api.pushshift.io/reddit/search/submission/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pushshift_reddit_search: {
      type: ""app"",
      app: ""pushshift_reddit_search"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pushshift.io/reddit/search/submission/`,
      params: {
        ""q"": `star wars`,
      },
    })
  },
})
"
Lob,https://api.lob.com/v1/addresses,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lob: {
      type: ""app"",
      app: ""lob"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lob.com/v1/addresses`,
      auth: {
        username: this.lob.$auth.secret_api_key,
        password: ''
      },
    })
  },
})
"
Eventbrite,https://www.eventbriteapi.com/v3/users/me/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    eventbrite: {
      type: ""app"",
      app: ""eventbrite"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.eventbriteapi.com/v3/users/me/`,
      headers: {
        Authorization: `Bearer ${this.eventbrite.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Workboard,https://www.myworkboard.com/wb/apis/user/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    workboard: {
      type: ""app"",
      app: ""workboard"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.myworkboard.com/wb/apis/user/`,
      headers: {
        Authorization: `Bearer ${this.workboard.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Postmark,https://api.postmarkapp.com/server,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    postmark: {
      type: ""app"",
      app: ""postmark"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.postmarkapp.com/server`,
      headers: {
        ""X-Postmark-Server-Token"": `${this.postmark.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Looker,{{custom_fields.looker_base_url}}/api/4.0/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    looker: {
      type: ""app"",
      app: ""looker"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.looker.$auth.looker_base_url}/api/4.0/user`,
      headers: {
        ""Authorization"": `token ${this.looker.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Freelancer,https://www.freelancer.com/api/users/0.1/self/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freelancer: {
      type: ""app"",
      app: ""freelancer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.freelancer.com/api/users/0.1/self/`,
      headers: {
        Authorization: `Bearer ${this.freelancer.$auth.oauth_access_token}`,
        ""freelancer-oauth-v1"": `${this.freelancer.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Vimeo,https://api.vimeo.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vimeo: {
      type: ""app"",
      app: ""vimeo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.vimeo.com/me`,
      headers: {
        Authorization: `Bearer ${this.vimeo.$auth.oauth_access_token}`,
      },
    })
  },
})
"
wit.ai,https://api.wit.ai/message?v=20170307&q=hello,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wit_ai: {
      type: ""app"",
      app: ""wit_ai"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.wit.ai/message?v=20170307&q=hello`,
      headers: {
        Authorization: `Bearer ${this.wit_ai.$auth.app_token}`,
      },
    })
  },
})
"
SWAPI - Star Wars,https://swapi.dev/api/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    swapi: {
      type: ""app"",
      app: ""swapi"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://swapi.dev/api/films/1/`,
    })
  },
})
"
Greenhouse,https://harvest.greenhouse.io/v1/user_roles,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    greenhouse: {
      type: ""app"",
      app: ""greenhouse"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://harvest.greenhouse.io/v1/user_roles`,
      auth: {
        username: `${this.greenhouse.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
OpenCage,https://api.opencagedata.com/geocode/v1/json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    opencage: {
      type: ""app"",
      app: ""opencage"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.opencagedata.com/geocode/v1/json`,
      params: {
        key: `${this.opencage.$auth.api_key}`,
        ""q"": `51.952659%2C+7.632473`,
        pretty: `1`,
        no_annotations: `1`,
      },
    })
  },
})
"
Uptime Robot,https://api.uptimerobot.com/v2/getAlertContacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    uptime_robot: {
      type: ""app"",
      app: ""uptime_robot"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""api_key"": `${this.uptime_robot.$auth.api_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.uptimerobot.com/v2/getAlertContacts`,
      data,
    })
  },
})
"
Linode,https://api.linode.com/v4/account/users/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    linode: {
      type: ""app"",
      app: ""linode"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.linode.com/v4/account/users/`,
      headers: {
        Authorization: `Bearer ${this.linode.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Pushover,https://api.pushover.net/1/messages.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pushover: {
      type: ""app"",
      app: ""pushover"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.pushover.net/1/messages.json`,
      params: {
        token: `${this.pushover.$auth.api_token}`,
        user: `${this.pushover.$auth.user_key}`,
        message: `test`,
      },
    })
  },
})
"
Unity Cloud Build,https://build-api.cloud.unity3d.com/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    unity_cloud_build: {
      type: ""app"",
      app: ""unity_cloud_build"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://build-api.cloud.unity3d.com/api/v1/users/me`,
      auth: {
        username: `${this.unity_cloud_build.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Path of Exile,http://api.pathofexile.com/leagues,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    path_of_exile: {
      type: ""app"",
      app: ""path_of_exile"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.pathofexile.com/leagues`,
    })
  },
})
"
Rockset,https://api.rs2.usw2.rockset.com/v1/orgs/self/users/self,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rockset: {
      type: ""app"",
      app: ""rockset"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rs2.usw2.rockset.com/v1/orgs/self/users/self`,
      headers: {
        ""Authorization"": `ApiKey ${this.rockset.$auth.apikey}`,
      },
    })
  },
})
"
DaData.ru,https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/email,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dadata_ru: {
      type: ""app"",
      app: ""dadata_ru"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `pipedream @`,
    }
    return await axios($, {
      url: `https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/email`,
      headers: {
        ""Authorization"": `Token ${this.dadata_ru.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Discord Bot,https://discord.com/api/users/@me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    discord_bot: {
      type: ""app"",
      app: ""discord_bot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://discord.com/api/users/@me`,
      headers: {
        ""Authorization"": `Bot ${this.discord_bot.$auth.bot_token}`,
      },
    })
  },
})
"
Front,https://api2.frontapp.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    frontapp: {
      type: ""app"",
      app: ""frontapp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api2.frontapp.com/me`,
      headers: {
        Authorization: `Bearer ${this.frontapp.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Dylan Test,https://eni9i4i0m9r2p.x.pipedream.net,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dylan_test: {
      type: ""app"",
      app: ""dylan_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://eni9i4i0m9r2p.x.pipedream.net`,
      auth: {
        username: `${this.dylan_test.$auth.username}`,
        password: ``,
      },
    })
  },
})
"
Ghost.org (Admin API),https://{{custom_fields.admin_domain}}/ghost/api/v3/admin/site,"module.exports = defineComponent({
  props: {
    ghost_org_admin_api: {
      type: ""app"",
      app: ""ghost_org_admin_api"",
    }
  },
  async run({steps, $}) {
    const GhostAdminAPI = require('@tryghost/admin-api');
    const api = new GhostAdminAPI({
        url: this.ghost_org_admin_api.$auth.admin_api_url,
        key: this.ghost_org_admin_api.$auth.admin_api_key,
        version: 'v3'
    });
    return await api.users.browse()
  },
})
"
Ghost.org (Content API),https://⫷custom_fields.admin_domain⫸/ghost/api/v3/content/posts/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ghost_org_content_api: {
      type: ""app"",
      app: ""ghost_org_content_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.ghost_org_content_api.$auth.admin_domain}/ghost/api/v3/content/posts/`,
      params: {
        key: `${this.ghost_org_content_api.$auth.content_api_key}`,
      },
    })
  },
})
"
MySQL,test,"module.exports = defineComponent({
  props: {
    mysql: {
      type: ""app"",
      app: ""mysql"",
    }
  },
  async run({steps, $}) {
    const mysql = require('mysql2/promise');
    
    const { host, port, username, password, database } = this.mysql.$auth
    
    const connection = await mysql.createConnection({
      host,
      port,
      user: username,
      password,
      database,
    });
    
    const [rows, fields] = await connection.execute('SELECT NOW()');
    console.log(rows)
  },
})
"
Puppet Master,test,"module.exports = defineComponent({
  props: {
    puppet_master: {
      type: ""app"",
      app: ""puppet_master"",
    }
  },
  async run({steps, $}) {
    const axios = require('axios')
    
    const config = {
      method: 'POST',
      url: 'https://api.saasify.sh/1/call/transitive-bullshit/puppet-master@a818aeac/screenshot',
      headers: {
        'content-type': 'application/json',
      },
      data: {
        url: ""https://example.com"",
        type: 'png',
        fullPage: true,
      },
      responseType: 'arraybuffer',
    }
    
    const resp = await axios(config)
    // Exports the screenshot data as a base64-encoded string
    this.screenshot = resp.data.toString('base64')
  },
})
"
Browserless,test,"import puppeteer from 'puppeteer-core@14.1.0';

export default defineComponent({
  props: {
    browserless: {
      type: ""app"",
      app: ""browserless"",
    }
  },
  async run({steps, $}) {
    // See the browserless docs for more info:
    // https://www.browserless.io/docs/
    const browser = await puppeteer.connect({ 
      browserWSEndpoint: `wss://chrome.browserless.io?token=${this.browserless.$auth.api_key}` 
    })
    const page = await browser.newPage()
    
    const url = ""https://example.com""
    const type = ""png""
  
    await page.goto(url)
    const screenshot = await page.screenshot()
    
    // export the base64-encoded screenshot for use in future steps,
    // along with the image type and filename
    $.export(""screenshot"", Buffer.from(screenshot, 'binary').toString('base64'))
    $.export(""type"", type)
    $.export(""filename"",`${url.replace(/[&\/\\#, +()$~%.'"":*?<>{}]/g, '_')}-${+new Date()}.${type}`)
    
    await browser.close()
  },
})"
Message Bird,https://rest.messagebird.com/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    message_bird: {
      type: ""app"",
      app: ""message_bird"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.messagebird.com/balance`,
      headers: {
        ""Authorization"": `AccessKey ${this.message_bird.$auth.access_key}`,
      },
    })
  },
})
"
Sendoso,https://app.sendoso.com/api/v3/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendoso: {
      type: ""app"",
      app: ""sendoso"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.sendoso.com/api/v3/me`,
      headers: {
        Authorization: `Bearer ${this.sendoso.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Todoist,https://api.todoist.com/rest/v2/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    todoist: {
      type: ""app"",
      app: ""todoist"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.todoist.com/rest/v2/projects`,
      headers: {
        Authorization: `Bearer ${this.todoist.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Cloud Convert,https://api.cloudconvert.com/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloud_convert: {
      type: ""app"",
      app: ""cloud_convert"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cloudconvert.com/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.cloud_convert.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Affinity,https://api.affinity.co/persons,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    affinity: {
      type: ""app"",
      app: ""affinity"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.affinity.co/persons`,
      auth: {
        username: ``,
        password: `${this.affinity.$auth.api_key}`,
      },
      params: {
        term: `doe`,
      },
    })
  },
})
"
imgbb,https://api.imgbb.com/1/upload,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    imgbb: {
      type: ""app"",
      app: ""imgbb"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.imgbb.com/1/upload`,
      params: {
        key: `${this.imgbb.$auth.api_key}`,
        image: `R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7`,
        name: ``,
      },
    })
  },
})
"
CoinMarketCap,https://⫷custom_fields.environment⫸-api.coinmarketcap.com/v1/key/info,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    coinmarketcap: {
      type: ""app"",
      app: ""coinmarketcap"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.coinmarketcap.$auth.environment}-api.coinmarketcap.com/v1/key/info`,
      headers: {
        ""X-CMC_PRO_API_KEY"": `${this.coinmarketcap.$auth.api_key}`,
      },
    })
  },
})
"
Mercury,https://backend.mercury.co/api/v1/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mercury: {
      type: ""app"",
      app: ""mercury"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://backend.mercury.co/api/v1/accounts`,
      headers: {
        Authorization: `Bearer ${this.mercury.$auth.api_key}`,
      },
    })
  },
})
"
Assembla,https://api.assembla.com/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    assembla: {
      type: ""app"",
      app: ""assembla"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.assembla.com/v1/user`,
      headers: {
        Authorization: `Bearer ${this.assembla.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Avaza,https://api.avaza.com/api/Account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    avaza: {
      type: ""app"",
      app: ""avaza"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.avaza.com/api/Account`,
      headers: {
        Authorization: `Bearer ${this.avaza.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Telstra,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    telstra: {
      type: ""app"",
      app: ""telstra"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://tapi.telstra.com/v2/messages/sms`,
      headers: {
        Authorization: `Bearer ${this.telstra.$auth.oauth_access_token}`,
      },
      data: {
        to: [TO],
        body: [BODY],
      }
    })
  },
})
"
bexio,https://office.bexio.com/api2.php/⫷oauth.uid⫸/company_profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bexio: {
      type: ""app"",
      app: ""bexio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://office.bexio.com/api2.php/${this.bexio.$auth.oauth_uid}/company_profile`,
      headers: {
        Authorization: `Bearer ${this.bexio.$auth.oauth_access_token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
awork,https://api.awork.io/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    awork: {
      type: ""app"",
      app: ""awork"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.awork.io/api/v1/me`,
      headers: {
        Authorization: `Bearer ${this.awork.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Deputy,https://{{custom_fields.endpoint}}/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    deputy: {
      type: ""app"",
      app: ""deputy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.deputy.$auth.endpoint}/api/v1/me`,
      headers: {
        Authorization: `Bearer ${this.deputy.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Contactually,https://api.contactually.com/v2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    contactually: {
      type: ""app"",
      app: ""contactually"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.contactually.com/v2/me`,
      headers: {
        Authorization: `Bearer ${this.contactually.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Binance,https://api.binance.com/api/v3/exchangeInfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    binance: {
      type: ""app"",
      app: ""binance"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.binance.com/api/v3/exchangeInfo`,
    })
  },
})
"
Infobip,https://⫷custom_fields.base_url⫸.api.infobip.com/sms/1/logs,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    infobip: {
      type: ""app"",
      app: ""infobip"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.infobip.$auth.base_url}.api.infobip.com/sms/1/logs`,
      headers: {
        ""Authorization"": `App ${this.infobip.$auth.api_key}`,
      },
    })
  },
})
"
Remove.bg,https://api.remove.bg/v1.0/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    remove_bg: {
      type: ""app"",
      app: ""remove_bg"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.remove.bg/v1.0/account`,
      headers: {
        ""X-API-Key"": `${this.remove_bg.$auth.api_key}`,
      },
    })
  },
})
"
Firebase Admin SDK,test,"module.exports = defineComponent({
  props: {
    firebase_admin_sdk: {
      type: ""app"",
      app: ""firebase_admin_sdk"",
    }
  },
  async run({steps, $}) {
    const admin = require('firebase-admin')
    
    // Enter values for the following parameters below this code step,
    // These get passed to the initializeApp method below.
    const { projectId, clientEmail, privateKey } = this.firebase_admin_sdk.$auth
    
    // Before passing the privateKey to the initializeApp constructor,
    // we have to replace newline characters with literal newlines
    const formattedPrivateKey = privateKey.replace(/\\n/g, '\n')
    
    // See https://firebase.google.com/docs/reference/admin/node/admin.credential.html#cert
    if (!admin.apps.length) {
      admin.initializeApp({
        credential: admin.credential.cert({
          projectId,
          clientEmail,
          privateKey: formattedPrivateKey,
        })
      })
    }
  },
})
"
Google Calendar,https://www.googleapis.com/calendar/v3/calendars/primary,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_calendar: {
      type: ""app"",
      app: ""google_calendar"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/calendar/v3/calendars/primary`,
      headers: {
        Authorization: `Bearer ${this.google_calendar.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Mandrill,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mandrill: {
      type: ""app"",
      app: ""mandrill"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://mandrillapp.com/api/1.0/messages/send.json`,
      data: {
        key: this.mandrill.$auth.api_key,
        message: {
          html: params.html,
          text: params.text,
          subject: params.subject,
          from_email: params.from_email,
          from_name: params.from_name,
          to: [{
            email: params.email,
            name: params.name,
            type: params.type || ""to"",
          }]
        }
      }
    })
  },
})
"
Toggl Track,https://api.track.toggl.com/api/v8/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    toggl: {
      type: ""app"",
      app: ""toggl"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.track.toggl.com/api/v8/me`,
      auth: {
        username: `${this.toggl.$auth.api_token}`,
        password: `api_token`,
      },
    })
  },
})
"
Fullstory,https://api.fullstory.com/operations/v1,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fullstory: {
      type: ""app"",
      app: ""fullstory"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.fullstory.com/operations/v1`,
      headers: {
        ""Authorization"": `Basic ${this.fullstory.$auth.api_key}`,
      },
    })
  },
})
"
Google Analytics,https://analyticsreporting.googleapis.com/v4/reports:batchGet,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_analytics: {
      type: ""app"",
      app: ""google_analytics"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://analyticsreporting.googleapis.com/v4/reports:batchGet`,
      headers: {
        Authorization: `Bearer ${this.google_analytics.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SendinBlue,https://api.sendinblue.com/v3/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendinblue: {
      type: ""app"",
      app: ""sendinblue"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sendinblue.com/v3/account`,
      headers: {
        ""api-key"": `${this.sendinblue.$auth.api_key}`,
        ""content-type"": `application/json`,
      },
    })
  },
})
"
Salesforce (REST API),{{custom_fields.instancetype}}/services/oauth2/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    salesforce_rest_api: {
      type: ""app"",
      app: ""salesforce_rest_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.salesforce_rest_api.$auth.instancetype}/services/oauth2/userinfo`,
      headers: {
        Authorization: `Bearer ${this.salesforce_rest_api.$auth.oauth_access_token}`,
      },
    })
  },
})
"
MSG91,https://api.msg91.com/api/validate.php?authkey=⫷custom_fields.authkey⫸,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    msg91: {
      type: ""app"",
      app: ""msg91"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.msg91.com/api/validate.php?authkey=${this.msg91.$auth.authkey}`,
    })
  },
})
"
Gitea (Oauth2),https://{{custom_fields.gitea_url}}/api/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gitea_oauth2: {
      type: ""app"",
      app: ""gitea_oauth2"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.gitea_oauth2.$auth.gitea_url}/api/v1/user`,
      headers: {
        Authorization: `Bearer ${this.gitea_oauth2.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Gitea,https://{{custom_fields.gitea_url}}/api/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gitea: {
      type: ""app"",
      app: ""gitea"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.gitea.$auth.gitea_url}/api/v1/user`,
      headers: {
        Authorization: `Bearer ${this.gitea.$auth.apiKey}`,
      },
    })
  },
})
"
DO NOT USE: Google Cloud Storage,https://storage.googleapis.com/storage/v1,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    do_not_use_google_cloud_storage: {
      type: ""app"",
      app: ""do_not_use_google_cloud_storage"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://storage.googleapis.com/storage/v1`,
      headers: {
        Authorization: `Bearer ${this.do_not_use_google_cloud_storage.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Waboxapp,https://www.waboxapp.com/api/status/[UID],"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    waboxapp: {
      type: ""app"",
      app: ""waboxapp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://www.waboxapp.com/api/status/[UID]`,
      params: {
        token: `${this.waboxapp.$auth.api_token}`,
      },
    })
  },
})
"
Pushbullet,https://api.pushbullet.com/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pushbullet: {
      type: ""app"",
      app: ""pushbullet"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pushbullet.com/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.pushbullet.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Autopilot,https://api2.autopilothq.com/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    autopilot: {
      type: ""app"",
      app: ""autopilot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api2.autopilothq.com/v1/account`,
      headers: {
        ""autopilotapikey"": `${this.autopilot.$auth.api_key}`,
      },
    })
  },
})
"
Hireflix,https://api.hireflix.com/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hireflix: {
      type: ""app"",
      app: ""hireflix"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `{ 
        user(id: ""me"") {
          id
          name
        }
      }`,
    }
    return await axios($, {
      url: `https://api.hireflix.com/`,
      headers: {
        ""authorization"": `${this.hireflix.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Google Cloud,test,"module.exports = defineComponent({
  props: {
    google_cloud: {
      type: ""app"",
      app: ""google_cloud"",
    }
  },
  async run({steps, $}) {
    // Required workaround to get the @google-cloud/storage package
    // working correctly on Pipedream
    require(""@dylburger/umask"")()
    
    const { Storage } = require('@google-cloud/storage')
    
    const key = JSON.parse(this.google_cloud.$auth.key_json)
     
    // Creates a client from a Google service account key.
    // See https://cloud.google.com/nodejs/docs/reference/storage/1.6.x/global#ClientConfig
    const storage = new Storage({
      projectId: key.project_id,
      credentials: {
        client_email: key.client_email,
        private_key: key.private_key,
      }
    })
    
    // Uncomment this section and rename for your bucket before running this code
    // const bucketName = 'pipedream-test-bucket';
    
    await storage.createBucket(bucketName)
    console.log(`Bucket ${bucketName} created.`)
  },
})
"
ClickUp,https://api.clickup.com/api/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clickup: {
      type: ""app"",
      app: ""clickup"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.clickup.com/api/v2/user`,
      headers: {
        ""content-type"": `application/json`,
        ""Authorization"": `${this.clickup.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Mailerlite,https://connect.mailerlite.com/api/campaigns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailerlite: {
      type: ""app"",
      app: ""mailerlite"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://connect.mailerlite.com/api/campaigns`,
      headers: {
        Authorization: `Bearer ${this.mailerlite.$auth.api_key}`,
      },
    })
  },
})
"
OneSignal (User Auth),https://onesignal.com/api/v1/apps/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    onesignal_user_auth: {
      type: ""app"",
      app: ""onesignal_user_auth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://onesignal.com/api/v1/apps/`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `Basic ZTUwMTQ0ODAtMjQ2Ni00YzY5LWIyNGMtYWUwMGM2MzUyZDM3`,
      },
    })
  },
})
"
Bitwarden,{{custom_fields.base_url}}/public/members,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bitwarden: {
      type: ""app"",
      app: ""bitwarden"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.bitwarden.$auth.base_url}/public/members`,
      headers: {
        Authorization: `Bearer ${this.bitwarden.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SendPulse,https://api.sendpulse.com/senders,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendpulse: {
      type: ""app"",
      app: ""sendpulse"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sendpulse.com/senders`,
      headers: {
        Authorization: `Bearer ${this.sendpulse.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Heap,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    heap: {
      type: ""app"",
      app: ""heap"",
    }
  },
  async run({steps, $}) {
    // From the docs: https://docs.heap.io/reference#track-1
    // ""Requests are limited to 30 requests per 30 seconds per identity per app_id""
    return await axios($, {
      method: ""POST"",
      url: `https://heapanalytics.com/api/track`,
      headers: {
        ""Content-Type"": ""application/json"",
      },
      data: {
        app_id: this.heap.$auth.app_id,
        identity: params.identity,
        event: params.event,
        timestamp: params.timestamp || (new Date()).toISOString(),
        properties: params.properties,
      }
    })
  },
})
"
Google Docs,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_docs: {
      type: ""app"",
      app: ""google_docs"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.google_docs.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Google Slides,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_slides: {
      type: ""app"",
      app: ""google_slides"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.google_slides.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Mautic,{{custom_fields.mautic_url}}/api/users/self,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mautic: {
      type: ""app"",
      app: ""mautic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.mautic.$auth.mautic_url}/api/users/self`,
      headers: {
        Authorization: `Bearer ${this.mautic.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zeplin,https://api.zeplin.dev/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zeplin: {
      type: ""app"",
      app: ""zeplin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.zeplin.dev/v1/users/me`,
      headers: {
        Authorization: `Bearer ${this.zeplin.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Snowflake,test,"import { promisify } from 'util'
import snowflake from 'snowflake-sdk'

export default defineComponent({
  props: {
    snowflake: {
      type: ""app"",
      app: ""snowflake"",
    }
  },
  async run({steps, $}) {
    const connection = snowflake.createConnection(this.snowflake.$auth)
    const connectAsync = promisify(connection.connect)
    await connectAsync()
    
    // util.promisify requires the last argument of the function you pass to 
    // it be the callback function, according to Node convention — see the docs at
    // https://nodejs.org/dist/latest-v8.x/docs/api/util.html#util_util_promisify_original .
    // Since Snowflake's connection.execute function accepts a single argument — 
    // options, an object — using promisify won't work. So we wrap the callback 
    // with a Promise and await it below.
    //
    // Pass the same options object (e.g. sqlText, binds) that you would pass to
    // https://docs.snowflake.com/en/user-guide/nodejs-driver-use.html#executing-statements
    // _except_ for the callback parameter. See example below.
    async function connExecuteAsync(options) {
      return new Promise((resolve, reject) => {
        connection.execute({
          ...options,
          complete: function(err, stmt, rows) {
            if (err) {
              reject(err)
            } else {
              resolve({stmt, rows})
            }
          }
        })
      })
    }
    
    // See https://docs.snowflake.com/en/user-guide/nodejs-driver-use.html#executing-statements
    const { rows } = await connExecuteAsync({
      sqlText: `SELECT CURRENT_TIMESTAMP()`,
    })
    return rows
  },
})"
Harry Potter API,https://www.potterapi.com/v1/sortingHat,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    harry_potter_api: {
      type: ""app"",
      app: ""harry_potter_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.potterapi.com/v1/sortingHat`,
      params: {
        key: `${this.harry_potter_api.$auth.api_key}`,
      },
    })
  },
})
"
Relink - URL Shortener,https://rel.ink/api/links/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    relink_url_shortener: {
      type: ""app"",
      app: ""relink_url_shortener"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""url"": `https://yoururl.com`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://rel.ink/api/links/`,
      data,
    })
  },
})
"
Microsoft Teams,https://graph.microsoft.com/v1.0/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    microsoft_teams: {
      type: ""app"",
      app: ""microsoft_teams"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.microsoft.com/v1.0/me`,
      headers: {
        Authorization: `Bearer ${this.microsoft_teams.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Frappe,⫷custom_fields.base_url⫸/api/method/frappe.auth.get_logged_user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    frappe: {
      type: ""app"",
      app: ""frappe"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.frappe.$auth.base_url}/api/method/frappe.auth.get_logged_user`,
      auth: {
        username: `${this.frappe.$auth.api_key}`,
        password: `${this.frappe.$auth.api_secret}`,
      },
    })
  },
})
"
Crunchbase,https://api.crunchbase.com/v3.1/organizations?user_key=⫷custom_fields.user_key⫸,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    crunchbase: {
      type: ""app"",
      app: ""crunchbase"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.crunchbase.com/v3.1/organizations?user_key=${this.crunchbase.$auth.user_key}`,
    })
  },
})
"
ERPNext,{{custom_fields.base_url}}/api/method/frappe.auth.get_logged_user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    erpnext: {
      type: ""app"",
      app: ""erpnext"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.erpnext.$auth.base_url}/api/method/frappe.auth.get_logged_user`,
      auth: {
        username: `${this.erpnext.$auth.api_key}`,
        password: `${this.erpnext.$auth.api_secret}`,
      },
    })
  },
})
"
DarkSky API,"https://api.darksky.net/forecast/⫷custom_fields.secret_key⫸/37.8267,-122.4233","import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    darksky_api: {
      type: ""app"",
      app: ""darksky_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.darksky.net/forecast/${this.darksky_api.$auth.secret_key}/37.8267,-122.4233`,
    })
  },
})
"
Lifx,https://api.lifx.com/v1/lights/all,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lifx: {
      type: ""app"",
      app: ""lifx"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lifx.com/v1/lights/all`,
      headers: {
        Authorization: `Bearer ${this.lifx.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Docupilot,https://api.docupilot.app/api/v1/templates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    docupilot: {
      type: ""app"",
      app: ""docupilot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.docupilot.app/api/v1/templates`,
      headers: {
        ""apikey"": `${this.docupilot.$auth.api_key}`,
      },
    })
  },
})
"
Shipengine,https://api.shipengine.com/v1/addresses/validate,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shipengine: {
      type: ""app"",
      app: ""shipengine"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.shipengine.com/v1/addresses/validate`,
      headers: {
        ""API-Key"": `${this.shipengine.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
People Data Labs,https://api.peopledatalabs.com/v5/person/enrich,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    people_data_labs: {
      type: ""app"",
      app: ""people_data_labs"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.peopledatalabs.com/v5/person/enrich`,
      params: {
        api_key: `${this.people_data_labs.$auth.api_key}`,
        email: `sean@peopledatalabs.com`,
      },
    })
  },
})
"
Alpha Vantage,https://www.alphavantage.co/query?,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    alpha_vantage: {
      type: ""app"",
      app: ""alpha_vantage"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.alphavantage.co/query?`,
      params: {
        function: `GLOBAL_QUOTE`,
        symbol: `MSFT`,
        apikey: `${this.alpha_vantage.$auth.api_key}`,
      },
    })
  },
})
"
Cisco Webex,https://webexapis.com/v1/people/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cisco_webex: {
      type: ""app"",
      app: ""cisco_webex"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://webexapis.com/v1/people/me`,
      headers: {
        Authorization: `Bearer ${this.cisco_webex.$auth.oauth_access_token}`,
      },
    })
  },
})
"
HubSpot,https://api.hubapi.com/integrations/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hubspot: {
      type: ""app"",
      app: ""hubspot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.hubapi.com/integrations/v1/me`,
      headers: {
        Authorization: `Bearer ${this.hubspot.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Larger.io,https://api.larger.io/v1/search/key/⫷custom_fields.api_key⫸?domain=gandi.net,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    larger_io: {
      type: ""app"",
      app: ""larger_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.larger.io/v1/search/key/${this.larger_io.$auth.api_key}?domain=gandi.net`,
    })
  },
})
"
ShipStation,https://ssapi.shipstation.com/users/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shipstation: {
      type: ""app"",
      app: ""shipstation"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ssapi.shipstation.com/users/`,
      auth: {
        username: `${this.shipstation.$auth.api_key}`,
        password: `${this.shipstation.$auth.api_secret}`,
      },
    })
  },
})
"
Clio,https://app.clio.com/api/v4/users/who_am_i,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clio: {
      type: ""app"",
      app: ""clio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.clio.com/api/v4/users/who_am_i`,
      headers: {
        Authorization: `Bearer ${this.clio.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Jotform,https://{{custom_fields.region}}.jotform.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jotform: {
      type: ""app"",
      app: ""jotform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.jotform.$auth.region}.jotform.com/user`,
      params: {
        apiKey: `${this.jotform.$auth.api_key}`,
      },
    })
  },
})
"
Baremetrics,https://api.baremetrics.com/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    baremetrics: {
      type: ""app"",
      app: ""baremetrics"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.baremetrics.com/v1/account`,
      headers: {
        Authorization: `Bearer ${this.baremetrics.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Beamer,https://api.getbeamer.com/v0/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    beamer: {
      type: ""app"",
      app: ""beamer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.getbeamer.com/v0/ping`,
      headers: {
        ""Beamer-Api-Key"": `${this.beamer.$auth.api_key}`,
      },
    })
  },
})
"
BrandMentions,https://api.brandmentions.com/command.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    brandmentions: {
      type: ""app"",
      app: ""brandmentions"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.brandmentions.com/command.php`,
      params: {
        command: `ListProjects`,
        api_key: `${this.brandmentions.$auth.api_key}`,
      },
    })
  },
})
"
Docusign,https://account.docusign.com/oauth/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    docusign: {
      type: ""app"",
      app: ""docusign"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://account.docusign.com/oauth/userinfo`,
      headers: {
        Authorization: `Bearer ${this.docusign.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Hacker News,http://hn.algolia.com/api/v1/search_by_date?query=pipedream,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hacker_news: {
      type: ""app"",
      app: ""hacker_news"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://hn.algolia.com/api/v1/search_by_date?query=pipedream`,
    })
  },
})
"
BuildKite,https://api.buildkite.com/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    buildkite: {
      type: ""app"",
      app: ""buildkite"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.buildkite.com/v2/user`,
      headers: {
        Authorization: `Bearer ${this.buildkite.$auth.api_token}`,
      },
    })
  },
})
"
Ritekit,https://api.ritekit.com/v1/stats/multiple-hashtags,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ritekit: {
      type: ""app"",
      app: ""ritekit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ritekit.com/v1/stats/multiple-hashtags`,
      params: {
        tags: `php`,
        client_id: `${this.ritekit.$auth.client_id}`,
      },
    })
  },
})
"
Mattermost,https://{{custom_fields.domain}}/api/v4/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mattermost: {
      type: ""app"",
      app: ""mattermost"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.mattermost.$auth.domain}/api/v4/users/me`,
      headers: {
        Authorization: `Bearer ${this.mattermost.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Instagram,https://graph.instagram.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    instagram: {
      type: ""app"",
      app: ""instagram"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.instagram.com/me`,
      params: {
        access_token: `${this.instagram.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Facebook,https://graph.facebook.com/v9.0/me/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    facebook: {
      type: ""app"",
      app: ""facebook"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.facebook.com/v9.0/me/`,
      headers: {
        Authorization: `Bearer ${this.facebook.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Pipedream,https://api.pipedream.com/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pipedream: {
      type: ""app"",
      app: ""pipedream"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pipedream.com/v1/users/me`,
      headers: {
        Authorization: `Bearer ${this.pipedream.$auth.api_key}`,
      },
    })
  },
})
"
Gitter,https://api.gitter.im/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gitter: {
      type: ""app"",
      app: ""gitter"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.gitter.im/v1/user`,
      headers: {
        Authorization: `Bearer ${this.gitter.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Recurly,test,"module.exports = defineComponent({
  props: {
    recurly: {
      type: ""app"",
      app: ""recurly"",
    }
  },
  async run({steps, $}) {
    const recurly = require('recurly')
    const client = new recurly.Client(this.recurly.$auth.api_key)
    return await client.listAccounts()
  },
})
"
Pinboard,https://api.pinboard.in/v1/posts/update,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pinboard: {
      type: ""app"",
      app: ""pinboard"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pinboard.in/v1/posts/update`,
      params: {
        auth_token: `${this.pinboard.$auth.api_token}`,
      },
    })
  },
})
"
Line,https://notify-api.line.me/api/status,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    line: {
      type: ""app"",
      app: ""line"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://notify-api.line.me/api/status`,
      headers: {
        Authorization: `Bearer ${this.line.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SSH (key-based auth),test,"module.exports = defineComponent({
  props: {
    ssh: {
      type: ""app"",
      app: ""ssh"",
    }
  },
  async run({steps, $}) {
    const SSH2Promise = require('ssh2-promise')
    
    const { 
      host, 
      port,
      username, 
      privateKey,
    } = this.ssh.$auth
    
    const ssh = new SSH2Promise({
      host,
      port,
      username,
      privateKey,
    })
    
    await ssh.connect()
    console.log(""Connection established"")
    
    // Replace this with the command you'd like to run
    const resp = await ssh.exec(""whoami"")
    console.log(resp)
    
    await ssh.close()
  },
})
"
Flexie,https://⫷custom_fields.subdomain⫸.flexie.io/api/users/self,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    flexie: {
      type: ""app"",
      app: ""flexie"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.flexie.$auth.subdomain}.flexie.io/api/users/self`,
      params: {
        apikey: `${this.flexie.$auth.api_key}`,
      },
    })
  },
})
"
Instapaper,https://www.instapaper.com/api/authenticate,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    instapaper: {
      type: ""app"",
      app: ""instapaper"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.instapaper.com/api/authenticate`,
      auth: {
        username: `${this.instapaper.$auth.username}`,
        password: `${this.instapaper.$auth.password}`,
      },
    })
  },
})
"
Amazon SES,test,"module.exports = defineComponent({
  props: {
    amazon_ses: {
      type: ""app"",
      app: ""amazon_ses"",
    }
  },
  async run({steps, $}) {
    const AWS = require(""aws-sdk"")
    const { accessKeyId, secretAccessKey } = this.amazon_ses.$auth
    
    const ses = new AWS.SES({
      accessKeyId, 
      secretAccessKey,
      region: 'us-east-1',
    })
    
    const sesParams = {
      Destination: {
        ToAddresses: [""<your email here>""],
      }, 
      Message: {
        Body: {
          Html: {
            Charset: ""UTF-8"", 
            Data: ""<h1>This is a test</h1>"",
          }, 
            Text: {
            Charset: ""UTF-8"", 
            Data: ""This is a test"",
          }
        }, 
        Subject: {
          Charset: ""UTF-8"", 
          Data: ""Test email"",
        }
      },
      Source: ""<your from address here"", 
    };
    
    this.resp = await ses.sendEmail(sesParams).promise()
  },
})
"
Sendfox (OAuth),https://api.sendfox.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendfox_oauth: {
      type: ""app"",
      app: ""sendfox_oauth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sendfox.com/me`,
      headers: {
        Authorization: `Bearer ${this.sendfox_oauth.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Sendfox (Personal Access Token),https://api.sendfox.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendfox_personal_access_token: {
      type: ""app"",
      app: ""sendfox_personal_access_token"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sendfox.com/me`,
      headers: {
        Authorization: `Bearer ${this.sendfox_personal_access_token.$auth.access_token}`,
      },
    })
  },
})
"
Moosend,https://api.moosend.com/v3/lists.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    moosend: {
      type: ""app"",
      app: ""moosend"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.moosend.com/v3/lists.json`,
      params: {
        apikey: `${this.moosend.$auth.api_key}`,
      },
    })
  },
})
"
OpenWeather API,https://api.openweathermap.org/data/2.5/weather,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    openweather_api: {
      type: ""app"",
      app: ""openweather_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.openweathermap.org/data/2.5/weather`,
      params: {
        zip: `20500,us`,
        appid: `${this.openweather_api.$auth.api_key}`,
      },
    })
  },
})
"
Storyblok,https://api.storyblok.com/v1/cdn/stories,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    storyblok: {
      type: ""app"",
      app: ""storyblok"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.storyblok.com/v1/cdn/stories`,
      params: {
        token: `${this.storyblok.$auth.token}`,
      },
    })
  },
})
"
MongoDB,test,"import mongodb from 'mongodb'

export default defineComponent({
  props: {
    mongodb: {
      type: ""app"",
      app: ""mongodb"",
    },
    collection: {
      type: ""string""
    },
    filter: {
      type: ""object""
    }
  },
  async run({steps, $}) {
    const MongoClient = mongodb.MongoClient
    
    const {
      database,
      hostname,
      username,
      password,
    } = this.mongodb.$auth
    
    const url = `mongodb+srv://${username}:${password}@${hostname}/test?retryWrites=true&w=majority`
    const client = await MongoClient.connect(url, { 
      useNewUrlParser: true, 
      useUnifiedTopology: true 
    })
    
    const db = client.db(database)

    const results = await db.collection(this.collection).find(this.filter).toArray();
    $.export('results', results);
    
    await client.close()
  },
})"
Pusher,test,"module.exports = defineComponent({
  props: {
    pusher: {
      type: ""app"",
      app: ""pusher"",
    }
  },
  async run({steps, $}) {
    const Pusher = require('pusher')
    
    const { appId, key, secret, cluster } = this.pusher.$auth
    const pusher = new Pusher({
      appId,
      key,
      secret,
      cluster,
      useTLS: true
    })
    
    await pusher.trigger('my-channel', 'my-event', {
      ""message"": ""hello world""
    })
  },
})
"
Keap (Infusionsoft),https://api.infusionsoft.com/crm/rest/v1/oauth/connect/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    infusionsoft: {
      type: ""app"",
      app: ""infusionsoft"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.infusionsoft.com/crm/rest/v1/oauth/connect/userinfo`,
      headers: {
        Authorization: `Bearer ${this.infusionsoft.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Etsy,https://openapi.etsy.com/v3/application/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    etsy: {
      type: ""app"",
      app: ""etsy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://openapi.etsy.com/v3/application/users/me`,
    })
  },
})
"
Datadog,https://api.datadoghq.com/api/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    datadog: {
      type: ""app"",
      app: ""datadog"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.datadoghq.com/api/v1/user`,
      headers: {
        ""DD-API-KEY"": `${this.datadog.$auth.api_key}`,
        ""DD-APPLICATION-KEY"": `${this.datadog.$auth.application_key}`,
      },
    })
  },
})
"
New Relic,https://api.newrelic.com/v2/users.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    new_relic: {
      type: ""app"",
      app: ""new_relic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.newrelic.com/v2/users.json`,
      headers: {
        ""X-Api-Key"": `${this.new_relic.$auth.api_key}`,
      },
    })
  },
})
"
Intercom,https://api.intercom.io/admins,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    intercom: {
      type: ""app"",
      app: ""intercom"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.intercom.io/admins`,
      headers: {
        Authorization: `Bearer ${this.intercom.$auth.oauth_access_token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Telegram Bot,https://api.telegram.org/bot{{custom_fields.token}}/getMe,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    telegram_bot_api: {
      type: ""app"",
      app: ""telegram_bot_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.telegram.org/bot${this.telegram_bot_api.$auth.token}/getMe`,
    })
  },
})
"
Dev.to,https://dev.to/api/articles/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dev_to: {
      type: ""app"",
      app: ""dev_to"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://dev.to/api/articles/me`,
      headers: {
        ""api-key"": `${this.dev_to.$auth.api_key}`,
      },
    })
  },
})
"
Google Tasks,https://www.googleapis.com/tasks/v1/users/@me/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_tasks: {
      type: ""app"",
      app: ""google_tasks"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/tasks/v1/users/@me/lists`,
      headers: {
        Authorization: `Bearer ${this.google_tasks.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Slack Bot,https://slack.com/api/auth.test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    slack_bot: {
      type: ""app"",
      app: ""slack_bot"",
    },
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://slack.com/api/auth.test`,
      headers: {
        Authorization: `Bearer ${this.slack_bot.$auth.bot_token}`,
      },
      method: 'post',
    })
  },
})
"
Google Dialogflow,test,"module.exports = defineComponent({
  props: {
    google_dialogflow: {
      type: ""app"",
      app: ""google_dialogflow"",
    }
  },
  async run({steps, $}) {
    // Example code from the Dialogflow Node.js library:
    // https://github.com/googleapis/nodejs-dialogflow
    const dialogflow = require('dialogflow')
    const uuid = require('uuid')
    
    // A unique identifier for the given session
    const sessionId = uuid.v4()
    
    const key = JSON.parse(this.google_dialogflow.$auth.key_json)
     
    // Creates a session client from a Google service account key.
    const sessionClient = new dialogflow.SessionsClient({
      projectId: key.project_id,
      credentials: {
        client_email: key.client_email,
        private_key: key.private_key,
      }
    })
    const sessionPath = sessionClient.sessionPath(key.project_id, sessionId)
    
    // The text query request.
    const request = {
      session: sessionPath,
      queryInput: {
        text: {
          // The query to send to the dialogflow agent
          text: 'hello',
          // The language used by the client (en-US)
          languageCode: 'en-US',
        },
      },
    }
    
    // Send request and log result
    const responses = await sessionClient.detectIntent(request)
    console.log('Detected intent')
    const result = responses[0].queryResult
    console.log(`Query: ${result.queryText}`)
    console.log(`Response: ${result.fulfillmentText}`)
    if (result.intent) {
      console.log(`Intent: ${result.intent.displayName}`)
    } else {
      console.log(`No intent matched.`)
    }
  },
})
"
OneSignal (REST API),https://onesignal.com/api/v1/players,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    onesignal_rest_api: {
      type: ""app"",
      app: ""onesignal_rest_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://onesignal.com/api/v1/players`,
      headers: {
        ""Authorization"": `Basic ${this.onesignal_rest_api.$auth.rest_api_key}`,
      },
      params: {
        app_id: `${this.onesignal_rest_api.$auth.app_id}`,
      },
    })
  },
})
"
PostgreSQL,test,"module.exports = defineComponent({
  props: {
    postgresql: {
      type: ""app"",
      app: ""postgresql"",
    }
  },
  async run({steps, $}) {
    const { Client } = require('pg')
    
    const { host, user, password, port, database } = this.postgresql.$auth
    
    const client = new Client({
      host,
      database,
      user,
      password,
      port,
    })
    
    await client.connect()
    this.results = (await client.query(""SELECT NOW()"")).rows
    await client.end()
  },
})
"
Klaviyo,https://a.klaviyo.com/api/v2/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    klaviyo: {
      type: ""app"",
      app: ""klaviyo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://a.klaviyo.com/api/v2/lists`,
      headers: {
        ""Authorization"": `Klaviyo-API-Key ${this.klaviyo.$auth.api_key}`,
        ""revision"": `2022-10-17`,
      },
    })
  },
})
"
Backlog,https://{{custom_fields.suburl}}.backlog.com/api/v2/space,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    backlog: {
      type: ""app"",
      app: ""backlog"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.backlog.$auth.suburl}.backlog.com/api/v2/space`,
      headers: {
        Authorization: `Bearer ${this.backlog.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Backlog (API),https://xx.backlog.com/api/v2/users/myself,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    backlog_api: {
      type: ""app"",
      app: ""backlog_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://xx.backlog.com/api/v2/users/myself`,
      params: {
        apiKey: `${this.backlog_api.$auth.api_key}`,
      },
    })
  },
})
"
Twitter (Tod only),https://api.twitter.com/1.1/account/verify_credentials.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twitter_tod_only: {
      type: ""app"",
      app: ""twitter_tod_only"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.twitter.com/1.1/account/verify_credentials.json`,
    }, {
      token: {
        key: this.twitter_tod_only.$auth.oauth_access_token,
        secret: this.twitter_tod_only.$auth.oauth_refresh_token,
      },
      oauthSignerUri: this.twitter_tod_only.$auth.oauth_signer_uri,
    })
  },
})
"
Xero Accounting,https://api.xero.com/connections,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    xero_accounting_api: {
      type: ""app"",
      app: ""xero_accounting_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.xero.com/connections`,
      headers: {
        Authorization: `Bearer ${this.xero_accounting_api.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Aroflo,https://api.aroflo.com/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    aroflo: {
      type: ""app"",
      app: ""aroflo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.aroflo.com/`,
      headers: {
        ""Accept"": `text/json`,
        ""Authentication"": `HMAC ${this.aroflo.$auth.hmac_key}`,
      },
      params: {
        where: `and|archived|=|false`,
        zone: `users`,
        page: `1`,
      },
    })
  },
})
"
Geocodio,https://api.geocod.io/v1.4/geocode,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    geocodio: {
      type: ""app"",
      app: ""geocodio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.geocod.io/v1.4/geocode`,
      params: {
        api_key: `${this.geocodio.$auth.api_key}`,
        ""q"": `1109+N+Highland+St%2c+Arlington+VA`,
      },
    })
  },
})
"
Medium,https://api.medium.com/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    medium: {
      type: ""app"",
      app: ""medium"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.medium.com/v1/me`,
      headers: {
        Authorization: `Bearer ${this.medium.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Thinkific,https://api.thinkific.com/api/public/v1/courses,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    thinkific: {
      type: ""app"",
      app: ""thinkific"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.thinkific.com/api/public/v1/courses`,
      headers: {
        ""X-Auth-API-Key"": `${this.thinkific.$auth.api_key}`,
        ""X-Auth-Subdomain"": `${this.thinkific.$auth.subdomain}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
ClickFunnels,https://api.clickfunnels.com/api/attributes/funnels.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clickfunnels: {
      type: ""app"",
      app: ""clickfunnels"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.clickfunnels.com/api/attributes/funnels.json`,
      headers: {
        Authorization: `Bearer ${this.clickfunnels.$auth.oauth_access_token}`,
      },
    })
  },
})
"
WooCommerce,https://{{custom_fields.url}}/wp-json/wc/v2/orders,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    woocommerce: {
      type: ""app"",
      app: ""woocommerce"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.woocommerce.$auth.url}/wp-json/wc/v2/orders`,
      auth: {
        username: `${this.woocommerce.$auth.key}`,
        password: `${this.woocommerce.$auth.secret}`,
      },
    })
  },
})
"
Wordpress.org,https://⫷custom_fields.url⫸/wp-json/wp/v2/posts/POST_ID,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wordpress_org: {
      type: ""app"",
      app: ""wordpress_org"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""title"": `New Title`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.wordpress_org.$auth.url}/wp-json/wp/v2/posts/POST_ID`,
      auth: {
        username: `${this.wordpress_org.$auth.username}`,
        password: `${this.wordpress_org.$auth.application_password}`,
      },
      data,
    })
  },
})
"
Google Search Console,https://www.googleapis.com/webmasters/v3/sites,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_search_console: {
      type: ""app"",
      app: ""google_search_console"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/webmasters/v3/sites`,
      headers: {
        Authorization: `Bearer ${this.google_search_console.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoom Admin,https://api.zoom.us/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoom_admin: {
      type: ""app"",
      app: ""zoom_admin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.zoom.us/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.zoom_admin.$auth.oauth_access_token}`,
      },
    })
  },
})
"
monday.com,https://api.monday.com/v2,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    monday: {
      type: ""app"",
      app: ""monday"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `query {
      me {
        is_guest
        join_date
      }
    }`,
    }
    return await axios($, {
      url: `https://api.monday.com/v2`,
      headers: {
        ""Authorization"": `${this.monday.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Amazon Advertising,https://api.amazon.com/user/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amazon_advertising: {
      type: ""app"",
      app: ""amazon_advertising"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.amazon.com/user/profile`,
      headers: {
        Authorization: `Bearer ${this.amazon_advertising.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SSLMate — Cert Spotter API,https://api.certspotter.com/v1/issuances,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sslmate_cert_spotter_api: {
      type: ""app"",
      app: ""sslmate_cert_spotter_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.certspotter.com/v1/issuances`,
      headers: {
        Authorization: `Bearer ${this.sslmate_cert_spotter_api.$auth.api_key}`,
      },
      params: {
        domain: `example.com`,
      },
    })
  },
})
"
LaunchDarkly,https://app.launchdarkly.com/api/v2/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    launchdarkly: {
      type: ""app"",
      app: ""launchdarkly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.launchdarkly.com/api/v2/projects`,
      headers: {
        ""authorization"": `${this.launchdarkly.$auth.access_token}`,
      },
    })
  },
})
"
ActiveCampaign,{{custom_fields.base_url}}/api/3/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    activecampaign: {
      type: ""app"",
      app: ""activecampaign"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.activecampaign.$auth.base_url}/api/3/accounts`,
      headers: {
        ""Api-Token"": `${this.activecampaign.$auth.api_key}`,
      },
    })
  },
})
"
WebinarJam,https://api.webinarjam.com/webinarjam/webinars,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    webinarjam: {
      type: ""app"",
      app: ""webinarjam"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""api_key"": `${this.webinarjam.$auth.api_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.webinarjam.com/webinarjam/webinars`,
      data,
    })
  },
})
"
EverWebinar,https://api.webinarjam.com/everwebinar/webinars,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    everwebinar: {
      type: ""app"",
      app: ""everwebinar"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""api_key"": `${this.everwebinar.$auth.api_key}`,
    }
    return await axios($, {
      url: `https://api.webinarjam.com/everwebinar/webinars`,
      data,
    })
  },
})
"
Launch Darkly (Oauth),https://app.launchdarkly.com/api/v2/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    launch_darkly_oauth: {
      type: ""app"",
      app: ""launch_darkly_oauth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.launchdarkly.com/api/v2/projects`,
      headers: {
        Authorization: `Bearer ${this.launch_darkly_oauth.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SuperSaaS,https://www.supersaas.com/api/schedules.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    supersaas: {
      type: ""app"",
      app: ""supersaas"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.supersaas.com/api/schedules.json`,
      params: {
        account: `${this.supersaas.$auth.account}`,
        api_key: `${this.supersaas.$auth.api_key}`,
      },
    })
  },
})
"
Bubble,{{custom_fields.root_url}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bubble: {
      type: ""app"",
      app: ""bubble"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.bubble.$auth.root_url}`,
      headers: {
        Authorization: `Bearer ${this.bubble.$auth.api_key}`,
      },
    })
  },
})
"
Invoiced,https://api.invoiced.com/invoices,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    invoiced: {
      type: ""app"",
      app: ""invoiced"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.invoiced.com/invoices`,
      auth: {
        username: `${this.invoiced.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Alpaca,https://api.alpaca.markets/v2/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    alpaca: {
      type: ""app"",
      app: ""alpaca"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.alpaca.markets/v2/account`,
      headers: {
        Authorization: `Bearer ${this.alpaca.$auth.oauth_access_token}`,
      },
    })
  },
})
"
8x8 (Wavecell),https://api.wavecell.com/sms/v1/{{custom_fields.subAccountId}}/single,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wavecell: {
      type: ""app"",
      app: ""wavecell"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""destination"": ``,
      ""text"": ``,
      ""source"": ``,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.wavecell.com/sms/v1/${this.wavecell.$auth.subAccountId}/single`,
      headers: {
        Authorization: `Bearer ${this.wavecell.$auth.api_key}`,
      },
      data,
    })
  },
})
"
ServiceNow - OLD,https://⫷custom_fields.suburl⫸.service-now.com/api/now/table/incident,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    servicenow_old: {
      type: ""app"",
      app: ""servicenow_old"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${auths.servicenow.suburl}.service-now.com/api/now/table/incident`,
      headers: {
        Authorization: `Bearer ${auths.servicenow.oauth_access_token}`,
      },
    })
  },
})
"
ServiceNow,https://⫷custom_fields.instance_name⫸.service-now.com/api/now/table/incident,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    servicenow: {
      type: ""app"",
      app: ""servicenow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.servicenow.$auth.instance_name}.service-now.com/api/now/table/incident`,
      headers: {
        Authorization: `Bearer ${this.servicenow.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Chargebee,https://⫷custom_fields.sub_url⫸.chargebee.com/api/v2/subscriptions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chargebee: {
      type: ""app"",
      app: ""chargebee"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.chargebee.$auth.sub_url}.chargebee.com/api/v2/subscriptions`,
      auth: {
        username: `${this.chargebee.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Quickbooks,https://quickbooks.api.intuit.com/v3/company/{{custom_fields.company_id}}/companyinfo/{{custom_fields.company_id}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    quickbooks: {
      type: ""app"",
      app: ""quickbooks"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://quickbooks.api.intuit.com/v3/company/${this.quickbooks.$auth.company_id}/companyinfo/${this.quickbooks.$auth.company_id}`,
      headers: {
        Authorization: `Bearer ${this.quickbooks.$auth.oauth_access_token}`,
        ""accept"": `application/json`,
        ""content-type"": `application/json`,
      },
    })
  },
})
"
Chat API for WhatsApp,https://api.chat-api.com/{{custom_fields.instance_id}}/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chat_api_for_whatsapp: {
      type: ""app"",
      app: ""chat_api_for_whatsapp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.chat-api.com/${this.chat_api_for_whatsapp.$auth.instance_id}/messages?token=${this.chat_api_for_whatsapp.$auth.token}/me`,
      params: {
        token: this.chat_api_for_whatsapp.$auth.api_key
      }
    })
  },
})
"
Datawaves,https://datawaves.io/api/v1.0/projects/⫷custom_fields.project_id⫸/events/test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    datawaves: {
      type: ""app"",
      app: ""datawaves"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""id"": `123`,
      ""product"": `iPhone Charger`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://datawaves.io/api/v1.0/projects/${this.datawaves.$auth.project_id}/events/test`,
      headers: {
        ""Authorization"": `${this.datawaves.$auth.secret_key}`,
      },
      data,
    })
  },
})
"
BunnyCDN,https://bunnycdn.com/api/billing,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bunnycdn: {
      type: ""app"",
      app: ""bunnycdn"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://bunnycdn.com/api/billing`,
      headers: {
        ""AccessKey"": `${this.bunnycdn.$auth.api_key}`,
      },
    })
  },
})
"
HERE,https://weather.ls.hereapi.com/weather/1.0/report.json?apiKey=⫷custom_fields.api_key⫸&product=observation&name=Berlin-Tegel,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    here: {
      type: ""app"",
      app: ""here"",
    }
  },
  async run({steps, $}) {
    // Returns a sample set of weather observations for Berlin
    // See https://developer.here.com/documentation/weather/dev_guide/topics/example-weather-observation.html
    
    return await axios($, {
      url: `https://weather.ls.hereapi.com/weather/1.0/report.json?apiKey=${this.here.$auth.apikey}&product=observation&name=Berlin-Tegel`,
    })
  },
})
"
Feedbin,https://api.feedbin.com/v2/authentication.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    feedbin: {
      type: ""app"",
      app: ""feedbin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.feedbin.com/v2/authentication.json`,
      auth: {
        username: `${this.feedbin.$auth.email}`,
        password: `${this.feedbin.$auth.password}`,
      },
    })
  },
})
"
TextRazor,https://api.textrazor.com/account/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    textrazor: {
      type: ""app"",
      app: ""textrazor"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.textrazor.com/account/`,
      headers: {
        ""X-TextRazor-Key"": `${this.textrazor.$auth.api_key}`,
      },
    })
  },
})
"
Dandelion,https://api.dandelion.eu/datagraph/wikisearch/v1,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dandelion: {
      type: ""app"",
      app: ""dandelion"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.dandelion.eu/datagraph/wikisearch/v1`,
      params: {
        text: `brightroll`,
        lang: `en`,
        token: `${this.dandelion.$auth.token}`,
      },
    })
  },
})
"
Calendly,https://calendly.com/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    calendly: {
      type: ""app"",
      app: ""calendly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://calendly.com/api/v1/users/me`,
      headers: {
        ""X-TOKEN"": `${this.calendly.$auth.api_key}`,
      },
    })
  },
})
"
RSS,test,"module.exports = defineComponent({
  props: {
    rss: {
      type: ""app"",
      app: ""rss"",
    }
  },
  async run({steps, $}) {
    // Retrieve items from a sample feed
    const Parser = require('rss-parser');
    const parser = new Parser();
    
    const stories = []
    
    // Replace with your feed URL
    const url = ""https://pipedream.com/community/latest.rss""
    
    const feed = await parser.parseURL(url);
    const { title, items } = feed
    this.title = title
    
    if (!items.length) {
      $end(""No new stories"")
    }
    
    this.items = items
  },
})
"
Zoom Chatbot,https://api.zoom.us/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoom_chatbot: {
      type: ""app"",
      app: ""zoom_chatbot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.zoom.us/v2/users/me`,
    })
  },
})
"
SFTP (key-based auth),test,"module.exports = defineComponent({
  props: {
    sftp: {
      type: ""app"",
      app: ""sftp"",
    }
  },
  async run({steps, $}) {
    const Client = require('ssh2-sftp-client');
    
    const { 
      host,
      username,
      privateKey,
    } = this.sftp.$auth
    
    const config = {
      host,
      username,
      privateKey,
    }
    
    const sftp = new Client()
    
    await sftp.connect(config)
    this.cwd = await sftp.cwd();
    return await sftp.end();
  },
})
"
Google Cloud Translate,https://translation.googleapis.com/language/translate/v2?key={{custom_fields.api_key}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_cloud_translate: {
      type: ""app"",
      app: ""google_cloud_translate"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""q"": `¡hola mundo!`,
      ""target"": `en`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://translation.googleapis.com/language/translate/v2?key=${this.google_cloud_translate.$auth.api_key}`,
      headers: {
        ""Content-Type"": `application/json`,
        ""charset"": `utf-8`,
      },
      data,
    })
  },
})
"
Twitter (tod2 only),https://api.twitter.com/1.1/account/verify_credentials.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twitter_tod2_only: {
      type: ""app"",
      app: ""twitter_tod2_only"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.twitter.com/1.1/account/verify_credentials.json`,
      params: {
        ""a"": `b`,
      },
    }, {
      token: {
        key: this.twitter_tod2_only.$auth.oauth_access_token,
        secret: this.twitter_tod2_only.$auth.oauth_refresh_token,
      },
      oauthSignerUri: this.twitter_tod2_only.$auth.oauth_signer_uri,
    })
  },
})
"
Shopify (read all orders),https://{{custom_fields.shop_id}}.myshopify.com/admin/api/2021-07/graphql.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shopify_read_all_orders: {
      type: ""app"",
      app: ""shopify_read_all_orders"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `{  
        shop { 
          id 
          name 
        } 
      }`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.shopify_read_all_orders.$auth.shop_id}.myshopify.com/admin/api/2021-07/graphql.json`,
      headers: {
        ""X-Shopify-Access-Token"": `${this.shopify_read_all_orders.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Twitter Developer App,test,"module.exports = defineComponent({
  props: {
    twitter_developer_app: {
      type: ""app"",
      app: ""twitter_developer_app"",
    }
  },
  async run({steps, $}) {
    const Twit = require('twit')
    
    const { api_key, api_secret_key, access_token, access_token_secret } = this.twitter_developer_app.$auth
    
    const T = new Twit({
      consumer_key: api_key,
      consumer_secret: api_secret_key,
      access_token,
      access_token_secret,
      timeout_ms: 60 * 1000,  // optional HTTP request timeout to apply to all requests.
      strictSSL: true,  // optional - requires SSL certificates to be valid.
    })
    
    return await T.get('account/verify_credentials', { skip_status: true })
  },
})
"
Google Apps Script REST API,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_apps_script_rest_api: {
      type: ""app"",
      app: ""google_apps_script_rest_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.google_apps_script_rest_api.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Typeform,https://api.typeform.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    typeform: {
      type: ""app"",
      app: ""typeform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.typeform.com/me`,
      headers: {
        Authorization: `Bearer ${this.typeform.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoho,https://books.zoho.com/api/v3/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho: {
      type: ""app"",
      app: ""zoho"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://books.zoho.com/api/v3/users/me`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoho Books,https://books.{{custom_fields.base_api_uri}}/api/v3/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_books: {
      type: ""app"",
      app: ""zoho_books"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://books.${this.zoho_books.$auth.base_api_uri}/api/v3/users/me`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_books.$auth.oauth_access_token}`,
      },
      params: {
        organization_id: `${this.zoho_books.$auth.organization_id}`,
      },
    })
  },
})
"
Zoho CRM,{{custom_fields.api_domain}}/crm/v2/users?type=CurrentUser,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_crm: {
      type: ""app"",
      app: ""zoho_crm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.zoho_crm.$auth.api_domain}/crm/v2/users?type=CurrentUser`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_crm.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Honeybadger,https://app.honeybadger.io/v2/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    honeybadger: {
      type: ""app"",
      app: ""honeybadger"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.honeybadger.io/v2/projects`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.honeybadger.$auth.api_token}`,
        password: ``,
      },
    })
  },
})
"
Fauna,test,"module.exports = defineComponent({
  props: {
    faunadb: {
      type: ""app"",
      app: ""faunadb"",
    }
  },
  async run({steps, $}) {
    const faunadb = require('faunadb')
    const q = faunadb.query
    
    const client = new faunadb.Client({ secret: this.faunadb.$auth.secret })
    
    // Lists collections in the database tied to your secret key
    const collectionsPaginator = await client.paginate(q.Collections())
    
    this.collections = []
    await collectionsPaginator.each(page => {
      for (const collection of page) {
        this.collections.push(collection.id)
      }
    })
  },
})
"
Algolia,test,"import algoliasearch from ""algoliasearch"";

export default defineComponent({
  props: {
    algolia: {
      type: ""app"",
      app: ""algolia"",
    }
  },
  async run({steps, $}) {
    const client = algoliasearch(this.algolia.$auth.application_id, this.algolia.$auth.api_key);
    return await client.listIndices()
  },
})
"
You Need a Budget,https://api.youneedabudget.com/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    you_need_a_budget: {
      type: ""app"",
      app: ""you_need_a_budget"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.youneedabudget.com/v1/user`,
      headers: {
        Authorization: `Bearer ${this.you_need_a_budget.$auth.oauth_access_token}`,
      },
    })
  },
})
"
RingCentral,{{custom_fields.instancetype}}.ringcentral.com/restapi/v1.0/account/~,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ringcentral: {
      type: ""app"",
      app: ""ringcentral"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.ringcentral.$auth.instancetype}.ringcentral.com/restapi/v1.0/account/~`,
      headers: {
        Authorization: `Bearer ${this.ringcentral.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Strava,https://www.strava.com/api/v3/athlete,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    strava: {
      type: ""app"",
      app: ""strava"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.strava.com/api/v3/athlete`,
      headers: {
        Authorization: `Bearer ${this.strava.$auth.oauth_access_token}`,
      },
    })
  },
})
"
RingCentral (tod),https://platform.devtest.ringcentral.com/restapi/v1.0,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ringcentral_tod: {
      type: ""app"",
      app: ""ringcentral_tod"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://platform.devtest.ringcentral.com/restapi/v1.0`,
    })
  },
})
"
Automizy,https://gateway.automizy.com/v2/smart-lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    automizy: {
      type: ""app"",
      app: ""automizy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://gateway.automizy.com/v2/smart-lists`,
      headers: {
        Authorization: `Bearer ${this.automizy.$auth.api_token}`,
        ""Content-Type"": `application/json`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Botstar,https://api2.botstar.com/broadcast,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    botstar: {
      type: ""app"",
      app: ""botstar"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""messages"": `[{""text"": ""Hello World""}]`,
      ""userId"": `9999999999`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api2.botstar.com/broadcast`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      params: {
        token: `${this.botstar.$auth.access_token}`,
      },
      data,
    })
  },
})
"
SilFer Bots ,https://api.silferbots.co/user/[USER_ID],"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    silfer_bots: {
      type: ""app"",
      app: ""silfer_bots"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.silferbots.co/user/[USER_ID]`,
      headers: {
        ""X-SILFER-ACCESS-TOKEN"": `${this.silfer_bots.$auth.api_key}`,
      },
    })
  },
})
"
Google People (Contacts),https://people.googleapis.com/v1/people/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_contacts: {
      type: ""app"",
      app: ""google_contacts"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://people.googleapis.com/v1/people/me`,
      headers: {
        Authorization: `Bearer ${this.google_contacts.$auth.oauth_access_token}`,
      },
      params: {
        personFields: `names,emailAddresses`,
      },
    })
  },
})
"
San Francisco Open Data - DataSF,https://data.sfgov.org/resource/tvq9-ec9w.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    san_francisco_open_data_datasf: {
      type: ""app"",
      app: ""san_francisco_open_data_datasf"",
    }
  },
  async run({steps, $}) {
    // Below, we fetch a range of COVID-19 case data from DataSF. You can
    // run this to see how the results are displayed on Pipedream, or modify it 
    // in any way to fetch data from another dataset or modify the Socrata 
    // query. See the docs below for Socrata docs and examples.
    
    // COVID-19 Cases Summarized by Date, Transmission and Case Disposition
    // https://dev.socrata.com/foundry/data.sfgov.org/tvq9-ec9w
    
    return await axios($, {
      url: `https://data.sfgov.org/resource/tvq9-ec9w.json`,
      headers: {
        ""X-App-Token"": `${this.san_francisco_open_data_datasf.$auth.app_token}`,
      },
      params: {
        ""$where"": `date between '2020-05-18T00:00:00' and '2020-05-20T00:00:00'`,
      },
    })
  },
})
"
SmugMug,https://api.smugmug.com/api/v2!authuser,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smugmug: {
      type: ""app"",
      app: ""smugmug"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.smugmug.com/api/v2!authuser`,
      headers: {
        ""Accept"": `application/json`,
      },
    }, {
      token: {
        key: this.smugmug.$auth.oauth_access_token,
        secret: this.smugmug.$auth.oauth_refresh_token,
      },
      oauthSignerUri: this.smugmug.$auth.oauth_signer_uri,
    })
  },
})
"
Blogger,https://www.googleapis.com/blogger/v3/users/self,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    blogger: {
      type: ""app"",
      app: ""blogger"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/blogger/v3/users/self`,
      headers: {
        Authorization: `Bearer ${this.blogger.$auth.oauth_access_token}`,
      },
    })
  },
})
"
BigCommerce,https://api.bigcommerce.com/stores/{{custom_fields.store_hash}}/v3/catalog/summary,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bigcommerce: {
      type: ""app"",
      app: ""bigcommerce"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bigcommerce.com/stores/${this.bigcommerce.$auth.store_hash}/v3/catalog/summary`,
      headers: {
        ""X-Auth-Token"": `${this.bigcommerce.$auth.access_token}`,
      },
    })
  },
})
"
Dan Test,https://slack.com/api/users.profile.get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dan_test: {
      type: ""app"",
      app: ""dan_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://slack.com/api/users.profile.get`,
      headers: {
        Authorization: `Bearer ${this.dan_test.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Raindrop,https://api.raindrop.io/rest/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    raindrop: {
      type: ""app"",
      app: ""raindrop"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.raindrop.io/rest/v1/user`,
      headers: {
        Authorization: `Bearer ${this.raindrop.$auth.oauth_access_token}`,
      },
    })
  },
})
"
IBM Cloud - Speech to Text,⫷custom_fields.instance_url⫸/v1/synthesize,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ibm_cloud_speech_to_text: {
      type: ""app"",
      app: ""ibm_cloud_speech_to_text"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""text"": `hello world`,
    }
    return await axios($, {
      method: ""post"",
      url: `${this.ibm_cloud_speech_to_text.$auth.instance_url}/v1/synthesize`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Accept"": `audio/wav`,
      },
      auth: {
        username: `apikey`,
        password: `${this.ibm_cloud_speech_to_text.$auth.api_key}`,
      },
      data,
    })
  },
})
"
DEAD (DO NOT USE),https://⫷custom_fields.ip_address⫸:8123/api,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    home_assisstant: {
      type: ""app"",
      app: ""home_assisstant"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.home_assisstant.$auth.ip_address}:8123/api`,
      headers: {
        Authorization: `Bearer ${this.home_assisstant.$auth.token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Home Assistant,https://⫷custom_fields.hostname⫸/api,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    home_assistant: {
      type: ""app"",
      app: ""home_assistant"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.home_assistant.$auth.hostname}/api`,
      headers: {
        Authorization: `Bearer ${this.home_assistant.$auth.token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Faros,https://api.faros.ai/v0/admin/user/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    faros: {
      type: ""app"",
      app: ""faros"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.faros.ai/v0/admin/user/me`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `${this.faros.$auth.api_key}`,
      },
    })
  },
})
"
Chargify,https://⫷custom_fields.subdomain⫸.chargify.com/subscriptions.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chargify: {
      type: ""app"",
      app: ""chargify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.chargify.$auth.subdomain}.chargify.com/subscriptions.json`,
      headers: {
        ""content-type"": `application/json`,
        ""accept"": `application/json`,
      },
      auth: {
        username: `${this.chargify.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Getform,https://api.getform.io/v1/forms/[FORM_ID]?token={{custom_fields.api_token}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    getform: {
      type: ""app"",
      app: ""getform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.getform.io/v1/forms/[FORM_ID]?token=${this.getform.$auth.api_token}`,
    })
  },
})
"
MonkeyLearn,`https://api.monkeylearn.com/v3/classifiers/cl_pi3C7JiL/classify/`,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    monkeylearn: {
      type: ""app"",
      app: ""monkeylearn"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""data"": [
        ""This is a great tool!"",
      ]
    }
    
    return await axios($, {
      method: ""post"",
      url: `https://api.monkeylearn.com/v3/classifiers/cl_pi3C7JiL/classify/`,
      headers: {
        ""Authorization"": `Token ${this.monkeylearn.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Datanews,`http://api.datanews.io/v1/headlines`,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    datanews: {
      type: ""app"",
      app: ""datanews"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.datanews.io/v1/headlines`,
      headers: {
        Authorization: `Bearer ${this.datanews.$auth.api_key}`,
      },
    })
  },
})
"
Full Contact,`https://api.fullcontact.com/v3/person.enrich`,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    full_contact: {
      type: ""app"",
      app: ""full_contact"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""email"": `marc@salesforce.com`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.fullcontact.com/v3/person.enrich`,
      headers: {
        Authorization: `Bearer ${this.full_contact.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Transloadit,`https://api2.transloadit.com/templates?signature=${custom_fields.auth_key}`,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    transloadit: {
      type: ""app"",
      app: ""transloadit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api2.transloadit.com/templates?signature=${this.transloadit.$auth.auth_key}`,
      params: {
        page: ``,
        pagesize: ``,
      },
    })
  },
})
"
Customer.io,https://track.customer.io/api/v1/accounts/region,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    customer_io: {
      type: ""app"",
      app: ""customer_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://track.customer.io/api/v1/accounts/region`,
      auth: {
        username: `${this.customer_io.$auth.site_id}`,
        password: `${this.customer_io.$auth.api_key}`,
      },
    })
  },
})
"
What Converts,`https://app.whatconverts.com/api/v1/leads`,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    what_converts: {
      type: ""app"",
      app: ""what_converts"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.whatconverts.com/api/v1/leads`,
      auth: {
        username: `${this.what_converts.$auth.token}`,
        password: `${this.what_converts.$auth.secret}`,
      },
    })
  },
})
"
Twist,https://api.twist.com/api/v3/users/get_session_user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twist: {
      type: ""app"",
      app: ""twist"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.twist.com/api/v3/users/get_session_user`,
      headers: {
        Authorization: `Bearer ${this.twist.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Splitwise,https://www.splitwise.com/api/v3.0/get_current_user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    splitwise: {
      type: ""app"",
      app: ""splitwise"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.splitwise.com/api/v3.0/get_current_user`,
      headers: {
        Authorization: `Bearer ${this.splitwise.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Travis CI,https://api.travis-ci.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    travis_ci: {
      type: ""app"",
      app: ""travis_ci"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.travis-ci.com/user`,
      headers: {
        ""Travis-API-Version"": `3`,
        ""Authorization"": `token ${this.travis_ci.$auth.api_key}`,
      },
    })
  },
})
"
IFTTT,https://connect.ifttt.com//v2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ifttt: {
      type: ""app"",
      app: ""ifttt"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://connect.ifttt.com//v2/me`,
      headers: {
        ""IFTTT-Service-Key"": `${this.ifttt.$auth.ifttt_Service_Key}`,
      },
    })
  },
})
"
Microsoft Azure Rest API,https://management.azure.com/providers/Microsoft.Authorization/operations?api-version=2021-01-01-preview,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    microsoft_azure: {
      type: ""app"",
      app: ""microsoft_azure"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://management.azure.com/providers/Microsoft.Authorization/operations?api-version=2021-01-01-preview`,
      headers: {
        Authorization: `Bearer ${this.microsoft_azure.$auth.oauth_access_token}`,
        ""Content-type"": `application/json`,
      },
    })
  },
})
"
DO NOT USE,https://api.openai.com/v1/engines/davinci/completions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pravin_openai: {
      type: ""app"",
      app: ""pravin_openai"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""prompt"": `This is a test`,
      ""max_tokens"": `5`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.openai.com/v1/engines/davinci/completions`,
      headers: {
        Authorization: `Bearer ${this.pravin_openai.$auth.secret_key}`,
      },
      data,
    })
  },
})
"
Plivo,https://api.plivo.com/v1/Account/{{custom_fields.auth_id}}/Message/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    plivo: {
      type: ""app"",
      app: ""plivo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.plivo.com/v1/Account/${this.plivo.$auth.auth_id}/Message/`,
      auth: {
        username: `${this.plivo.$auth.auth_id}`,
        password: `${this.plivo.$auth.auth_token}`,
      },
    })
  },
})
"
Simvoly,https://{{custom_fields.subdomain}}.simvoly.com/api/site/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    simvoly: {
      type: ""app"",
      app: ""simvoly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.simvoly.$auth.subdomain}.simvoly.com/api/site/contacts`,
      headers: {
        Authorization: `Bearer ${this.simvoly.$auth.api_key}`,
      },
    })
  },
})
"
ServerAvatar,https://api.serveravatar.com/teams,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    serveravatar: {
      type: ""app"",
      app: ""serveravatar"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.serveravatar.com/teams`,
      headers: {
        Authorization: `Bearer ${this.serveravatar.$auth.api_key}`,
      },
    })
  },
})
"
OpenAI,https://api.openai.com/v1/engines,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    openai: {
      type: ""app"",
      app: ""openai"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.openai.com/v1/engines`,
      headers: {
        Authorization: `Bearer ${this.openai.$auth.api_key}`,
      },
    })
  },
})
"
Moneybird,https://moneybird.com/api/v2/{{custom_fields.administration_id}}/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    moneybird: {
      type: ""app"",
      app: ""moneybird"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://moneybird.com/api/v2/${this.moneybird.$auth.administration_id}/users`,
      headers: {
        Authorization: `Bearer ${this.moneybird.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Microsoft Dynamics 365 Business Central API,https://graph.microsoft.com/beta/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dynamics_365_business_central_api: {
      type: ""app"",
      app: ""dynamics_365_business_central_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.microsoft.com/beta/me`,
      headers: {
        Authorization: `Bearer ${this.dynamics_365_business_central_api.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Square,https://connect.squareup.com/v2/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    square: {
      type: ""app"",
      app: ""square"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://connect.squareup.com/v2/customers`,
      headers: {
        Authorization: `Bearer ${this.square.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Rev.ai,https://api.rev.ai/speechtotext/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rev_ai: {
      type: ""app"",
      app: ""rev_ai"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rev.ai/speechtotext/v1/account`,
      headers: {
        Authorization: `Bearer ${this.rev_ai.$auth.access_token}`,
      },
    })
  },
})
"
Discord Messages,https://discord.com/api/users/@me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    discord_messages: {
      type: ""app"",
      app: ""discord_messages"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://discord.com/api/users/@me`,
      headers: {
        Authorization: `Bearer ${this.discord_messages.$auth.oauth_access_token}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Discourse,https://{{custom_fields.domain}}/admin/users/list/active.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    discourse: {
      type: ""app"",
      app: ""discourse"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.discourse.$auth.domain}/admin/users/list/active.json`,
      headers: {
        ""Api-Username"": `${this.discourse.$auth.api_username}`,
        ""Api-Key"": `${this.discourse.$auth.api_key}`,
      },
    })
  },
})
"
ConvertKit,https://api.convertkit.com/v3/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    convertkit: {
      type: ""app"",
      app: ""convertkit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.convertkit.com/v3/account`,
      params: {
        api_key: `${this.convertkit.$auth.api_key}`,
        api_secret: `${this.convertkit.$auth.api_secret}`,
      },
    })
  },
})
"
Kaggle,https://www.kaggle.com/api/v1/datasets/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    kaggle: {
      type: ""app"",
      app: ""kaggle"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.kaggle.com/api/v1/datasets/list`,
      auth: {
        username: `${this.kaggle.$auth.username}`,
        password: `${this.kaggle.$auth.api_key}`,
      },
      params: {
        """": ``,
      },
    })
  },
})
"
Fibery,https://{{custom_fields.account_name}}.fibery.io/api/commands,"module.exports = defineComponent({
  props: {
    fibery: {
      type: ""app"",
      app: ""fibery"",
    }
  },
  async run({steps, $}) {
    return (await require(""@pipedream/platform"").axios($, {
      method: ""post"",
      url: `https://${this.fibery.$auth.account_name}.fibery.io/api/commands`,
      headers: {
        ""Authorization"": `Token ${this.fibery.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data: [
        {
          ""command"": ""fibery.entity/query"",
          ""args"": {
            ""query"": {
              ""q/from"": ""fibery/user"",
              ""q/select"": [""fibery/id"", ""user/name""],
              ""q/limit"": 1
            }
          }
        }
      ],
    }))[0]
  },
})
"
Telnyx,https://api.telnyx.com/v2/available_phone_numbers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    telnyx: {
      type: ""app"",
      app: ""telnyx"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.telnyx.com/v2/available_phone_numbers`,
      headers: {
        Authorization: `Bearer ${this.telnyx.$auth.api_key}`,
      },
    })
  },
})
"
ClickSend SMS,https://rest.clicksend.com/v3/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clicksend: {
      type: ""app"",
      app: ""clicksend"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.clicksend.com/v3/account`,
      auth: {
        username: `${this.clicksend.$auth.username}`,
        password: `${this.clicksend.$auth.api_key}`,
      },
    })
  },
})
"
Cloudinary,https://api.cloudinary.com/v1_1/{{custom_fields.cloud_name}}/resources/image,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudinary: {
      type: ""app"",
      app: ""cloudinary"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cloudinary.com/v1_1/${this.cloudinary.$auth.cloud_name}/resources/image`,
      auth: {
        username: `${this.cloudinary.$auth.api_key}`,
        password: `${this.cloudinary.$auth.api_secret}`,
      },
    })
  },
})
"
Discord Messages Non Manager,https://discord.com/api/users/@me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    discord_messages_non_manager: {
      type: ""app"",
      app: ""discord_messages_non_manager"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://discord.com/api/users/@me`,
      headers: {
        Authorization: `Bearer ${this.discord_messages_non_manager.$auth.oauth_access_token}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Cobalt,https://cobalt-api.cobaltgp.com/v0/status,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cobalt: {
      type: ""app"",
      app: ""cobalt"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://cobalt-api.cobaltgp.com/v0/companies`,
      headers: {
        ""Authorization"": `${this.cobalt.$auth.api_key}`,
      },
    })
  },
})
"
Calendly (OAuth),https://api.calendly.com/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    calendly_v2: {
      type: ""app"",
      app: ""calendly_v2"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.calendly.com/users/me`,
      headers: {
        Authorization: `Bearer ${this.calendly_v2.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Discord,https://discord.com/api/users/@me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    discord: {
      type: ""app"",
      app: ""discord"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://discord.com/api/users/@me`,
      headers: {
        Authorization: `Bearer ${this.discord.$auth.oauth_access_token}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Datarobot,https://app.datarobot.com/api/v2/projects/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    datarobot: {
      type: ""app"",
      app: ""datarobot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.datarobot.com/api/v2/projects/`,
      headers: {
        Authorization: `Bearer ${this.datarobot.$auth.api_key}`,
      },
    })
  },
})
"
Drip,https://api.getdrip.com/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    drip: {
      type: ""app"",
      app: ""drip"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.getdrip.com/v2/user`,
      headers: {
        Authorization: `Bearer ${this.drip.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Thanks.io,https://api.thanks.io/api/v2/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    thanks_io: {
      type: ""app"",
      app: ""thanks_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.thanks.io/api/v2/ping`,
      headers: {
        Authorization: `Bearer ${this.thanks_io.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Teamwork,{{custom_fields.domain}}/me.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    teamwork: {
      type: ""app"",
      app: ""teamwork"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.teamwork.$auth.domain}/me.json`,
      headers: {
        Authorization: `Bearer ${this.teamwork.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Lawmatics,https://api.lawmatics.com/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lawmatics: {
      type: ""app"",
      app: ""lawmatics"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lawmatics.com/v1/users`,
      headers: {
        Authorization: `Bearer ${this.lawmatics.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Quipu,https://getquipu.com/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    quipu: {
      type: ""app"",
      app: ""quipu"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://getquipu.com/contacts`,
      headers: {
        Authorization: `Bearer ${this.quipu.$auth.oauth_access_token}`,
        ""Accept"": `application/vnd.quipu.v1+json`,
      },
    })
  },
})
"
Adversus,https://api.adversus.dk/v1/organization,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    adversus: {
      type: ""app"",
      app: ""adversus"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.adversus.dk/v1/organization`,
      auth: {
        username: `${this.adversus.$auth.email}`,
        password: `${this.adversus.$auth.password}`,
      },
    })
  },
})
"
HTTP / Webhook,https://pokeapi.co/api/v2/pokemon/charizard,"// To use any npm package on Pipedream, just import it
import axios from ""axios""

export default defineComponent({
  async run({ steps, $ }) {
    const { data } = await axios({
      method: ""GET"",
      url: ""https://pokeapi.co/api/v2/pokemon/charizard"",
    })
    return data.species
  },
})
"
RedisLabs,https://api.redislabs.com/v1/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    redislabs: {
      type: ""app"",
      app: ""redislabs"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.redislabs.com/v1/`,
      headers: {
        ""x-api-key"": `${this.redislabs.$auth.apiKey}`,
        ""x-api-secret-key"": `${this.redislabs.$auth.apiSecretKey}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Invoice Ninja,{{custom_fields.domain}}/api/v1/clients,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    invoice_ninja: {
      type: ""app"",
      app: ""invoice_ninja"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.invoice_ninja.$auth.domain}/api/v1/clients`,
      headers: {
        ""X-Ninja-Token"": `${this.invoice_ninja.$auth.api_token}`,
      },
    })
  },
})
"
Yotpo - Reviews & Ratings,https://developers.yotpo.com/v2/{{custom_fields.app_key}}/orders?access_token={{oauth.access_token}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    yotpo: {
      type: ""app"",
      app: ""yotpo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://developers.yotpo.com/v2/${this.yotpo.$auth.app_key}/orders?access_token=${this.yotpo.$auth.oauth_access_token}`,
      headers: {
        Authorization: `Bearer ${this.yotpo.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SFTP (password-based auth),test,"module.exports = defineComponent({
  props: {
    sftp_password_based_auth: {
      type: ""app"",
      app: ""sftp_password_based_auth"",
    }
  },
  async run({steps, $}) {
    const Client = require('ssh2-sftp-client');
    
    const { 
      host,
      username,
      password,
    } = this.sftp_password_based_auth.$auth
    
    const config = {
      host,
      username,
      password,
    }
    
    const sftp = new Client()
    
    await sftp.connect(config)
    this.cwd = await sftp.cwd();
    return await sftp.end();
  },
})
"
SSH (password-based auth),test,"module.exports = defineComponent({
  props: {
    ssh_password_based_auth: {
      type: ""app"",
      app: ""ssh_password_based_auth"",
    }
  },
  async run({steps, $}) {
    const SSH2Promise = require('ssh2-promise')
    
    const { 
      host, 
      port,
      username, 
      password,
    } = this.ssh_password_based_auth.$auth
    
    const ssh = new SSH2Promise({
      host,
      port,
      username,
      password,
    })
    
    await ssh.connect()
    console.log(""Connection established"")
    
    // Replace this with the command you'd like to run
    const resp = await ssh.exec(""whoami"")
    console.log(resp)
    
    await ssh.close()
  },
})
"
Pizzly,test,"module.exports = defineComponent({
  props: {
    pizzly: {
      type: ""app"",
      app: ""pizzly"",
    }
  },
  async run({steps, $}) {
    const fetch = require('node-fetch')
    
    const { host, secretKey } = this.pizzly.$auth
    const authentication = 'Basic ' + Buffer.from(secretKey + ':').toString('base64')
    
    // Make a test API request to Pizzly. Should return a success message
    return await (await fetch(`https://${host}/api/`, { headers: { ""Authorization"": authentication } })).json()
  },
})
"
RingCentral (dan),https://platform.devtest.ringcentral.com/restapi/v1.0,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ringcentraltest1: {
      type: ""app"",
      app: ""ringcentraltest1"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://platform.devtest.ringcentral.com/restapi/v1.0`,
      headers: {
        Authorization: `Bearer ${this.ringcentraltest1.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Thrivecart,https://thrivecart.com/api/external/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    thrivecart: {
      type: ""app"",
      app: ""thrivecart"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://thrivecart.com/api/external/ping`,
      headers: {
        Authorization: `Bearer ${this.thrivecart.$auth.api_key}`,
      },
    })
  },
})
"
Formspree,https://formspree.io/api/0/forms/{{custom_fields.hash_id}}/submissions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    formspree: {
      type: ""app"",
      app: ""formspree"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://formspree.io/api/0/forms/${this.formspree.$auth.hash_id}/submissions`,
      headers: {
        Authorization: `Bearer ${this.formspree.$auth.api_key}`,
      },
    })
  },
})
"
Abstract - IP Geolocation API,https://ipgeolocation.abstractapi.com/v1/?api_key={{custom_fields.api_key}}&ip_address=75.111.82.152,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    abstract_ip_geo: {
      type: ""app"",
      app: ""abstract_ip_geo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ipgeolocation.abstractapi.com/v1/?api_key=${this.abstract_ip_geo.$auth.api_key}&ip_address=75.111.82.152`,
    })
  },
})
"
Pipefy,https://api.pipefy.com/graphql,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pipefy: {
      type: ""app"",
      app: ""pipefy"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `{ me { name } }`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.pipefy.com/graphql`,
      headers: {
        Authorization: `Bearer ${this.pipefy.$auth.token}`,
      },
      data,
    })
  },
})
"
Slack v2 test,https://slack.com/api/users.profile.get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    slack_v2_test: {
      type: ""app"",
      app: ""slack_v2_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://slack.com/api/users.profile.get`,
    })
  },
})
"
YouTube (Analytics API),https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    youtube_analytics_api: {
      type: ""app"",
      app: ""youtube_analytics_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.youtube_analytics_api.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Memberstack,https://api.memberstack.com/v1/members,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    memberstack: {
      type: ""app"",
      app: ""memberstack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.memberstack.com/v1/members`,
      headers: {
        ""X-API-KEY"": `${this.memberstack.$auth[""X-API-KEY""]}`,
      },
    })
  },
})
"
Keen,https://api.keen.io/3.0/projects/{{custom_fields.projectId}}/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    keen: {
      type: ""app"",
      app: ""keen"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.keen.io/3.0/projects/${this.keen.$auth.projectId}/events`,
      params: {
        api_key: `${this.keen.$auth.apiKey}`,
      },
    })
  },
})
"
Loggly (Send Data),https://logs-01.loggly.com/inputs/{{custom_fields.token}}/tag/pipedream-test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    loggly_send_data: {
      type: ""app"",
      app: ""loggly_send_data"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""hello"": `world`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://logs-01.loggly.com/inputs/${this.loggly_send_data.$auth.token}/tag/pipedream-test`,
      params: {
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Mixpanel,https://api.mixpanel.com/track#live-event,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mixpanel: {
      type: ""app"",
      app: ""mixpanel"",
    }
  },
  async run({steps, $}) {
    const data = `data={
      ""event"": ""Pipedream test event"",
      ""properties"": {
        ""token"": ""${this.mixpanel.$auth.token}""
      }
    }`
    
    return await axios($, {
      method: ""post"",
      url: `https://api.mixpanel.com/track#live-event`,
      headers: {
        ""Content-Type"": `application/x-www-form-urlencoded`,
      },
      data,
    })
  },
})
"
Delighted,test,"module.exports = defineComponent({
  props: {
    delighted: {
      type: ""app"",
      app: ""delighted"",
    }
  },
  async run({steps, $}) {
    const delighted = require('delighted')(this.delighted.$auth.api_key)
    
    return await delighted.metrics.retrieve()
  },
})
"
InfluxDB Cloud,test,"module.exports = defineComponent({
  props: {
    influxdb_cloud: {
      type: ""app"",
      app: ""influxdb_cloud"",
    }
  },
  async run({steps, $}) {
    const {InfluxDB} = require('@influxdata/influxdb-client')
    const {HealthAPI} = require('@influxdata/influxdb-client-apis')
    
    // See the Node.js client docs at
    // https://github.com/influxdata/influxdb-client-js
    const influxDB = new InfluxDB(this.influxdb_cloud.$auth.
    const healthAPI = new HealthAPI(influxDB)
    
    // Execute a health check to test our credentials
    return await healthAPI.getHealth()
  },
})
"
Sumo Logic,https://api.{{custom_fields.deployment}}.sumologic.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sumo_logic: {
      type: ""app"",
      app: ""sumo_logic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.${this.sumo_logic.$auth.deployment}.sumologic.com/api/v1/users`,
      auth: {
        username: `${this.sumo_logic.$auth.accessId}`,
        password: `${this.sumo_logic.$auth.accessKey}`,
      },
    })
  },
})
"
Google Classroom,https://classroom.googleapis.com/v1/userProfiles/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_classroom: {
      type: ""app"",
      app: ""google_classroom"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://classroom.googleapis.com/v1/userProfiles/me`,
      headers: {
        Authorization: `Bearer ${this.google_classroom.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Google Photos,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_photos: {
      type: ""app"",
      app: ""google_photos"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.google_photos.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoho Mail,https://mail.{{custom_fields.base_api_uri}}/api/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_mail: {
      type: ""app"",
      app: ""zoho_mail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://mail.${this.zoho_mail.$auth.base_api_uri}/api/accounts`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_mail.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoho Creator,https://creator.{{custom_fields.base_api_uri}}/api/v2/applications,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_creator: {
      type: ""app"",
      app: ""zoho_creator"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://creator.${this.zoho_creator.$auth.base_api_uri}/api/v2/applications`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_creator.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Contentful (Content Management),https://api.contentful.com/spaces,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    contentful: {
      type: ""app"",
      app: ""contentful"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.contentful.com/spaces`,
      headers: {
        Authorization: `Bearer ${this.contentful.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Bannerbear,https://api.bannerbear.com/v2/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bannerbear: {
      type: ""app"",
      app: ""bannerbear"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bannerbear.com/v2/account`,
      headers: {
        Authorization: `Bearer ${this.bannerbear.$auth.api_key}`,
      },
    })
  },
})
"
Rocket Chat,https://{{custom_fields.domain}}/api/v1/permissions.listAll,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rocket_chat: {
      type: ""app"",
      app: ""rocket_chat"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.rocket_chat.$auth.domain}/api/v1/permissions.listAll`,
      headers: {
        ""X-Auth-Token"": `${this.rocket_chat.$auth[""X-Auth-Token""]}`,
        ""X-User-Id"": `${this.rocket_chat.$auth[""X-User-Id""]}`,
      },
    })
  },
})
"
Vend,https://{{custom_fields.domain_prefix}}.vendhq.com/api/2.0/security_events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vend: {
      type: ""app"",
      app: ""vend"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.vend.$auth.domain_prefix}.vendhq.com/api/2.0/security_events`,
      headers: {
        Authorization: `Bearer ${this.vend.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Yahoo! Finance,https://apidojo-yahoo-finance-v1.p.rapidapi.com/auto-complete,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    yahoo_finance_by_apidojo: {
      type: ""app"",
      app: ""yahoo_finance_by_apidojo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apidojo-yahoo-finance-v1.p.rapidapi.com/auto-complete`,
      headers: {
        ""X-RapidAPI-Key"": `${this.yahoo_finance_by_apidojo.$auth[""X-RapidAPI-Key""]}`,
        ""X-RapidAPI-Host"": `apidojo-yahoo-finance-v1.p.rapidapi.com`,
      },
      params: {
        ""q"": `tesla`,
        region: `US`,
      },
    })
  },
})
"
Bruzu,https://img.bruzu.com/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bruzu: {
      type: ""app"",
      app: ""bruzu"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://img.bruzu.com/`,
      params: {
        template: `15`,
        ""top.text"": `Reminder`,
        ""middle.text"": `This%2520too%2520shall%2520pass`,
        ""bottom.text"": `OK`,
        """": ``,
        """": ``,
      },
    })
  },
})
"
Rebrandly,https://api.rebrandly.com/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rebrandly: {
      type: ""app"",
      app: ""rebrandly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rebrandly.com/v1/account`,
      headers: {
        Authorization: `Bearer ${this.rebrandly.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Pocket,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pocket: {
      type: ""app"",
      app: ""pocket"",
    }
  },
  async run({steps, $}) {
    const pocketReq = {
      method: ""post"",
      url: ""/v3/add"",
      data: {
        url: ""https://pipedream.com"",
        title: ""What a great website!"",
        access_token: this.pocket.$auth.oauth_access_token,
      },
    }
    // proxy pocket request
    return await axios($, {
      url: ""https://enkogw2a5epb176.m.pipedream.net"",
      params: {
        http_respond: 1,
      },
      data: pocketReq,
    })
  },
})
"
Blackbaud,https://api.sky.blackbaud.com/webhook/v1/subscriptions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    blackbaud: {
      type: ""app"",
      app: ""blackbaud"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sky.blackbaud.com/webhook/v1/subscriptions`,
      headers: {
        Authorization: `Bearer ${this.blackbaud.$auth.oauth_access_token}`,
        ""Bb-Api-Subscription-Key"": `${this.blackbaud.$auth.bb_api_subscription_key}`,
      },
    })
  },
})
"
Phrase,https://api.phrase.com/v2/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    phrase: {
      type: ""app"",
      app: ""phrase"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.phrase.com/v2/projects`,
      headers: {
        ""Authorization"": `token ${this.phrase.$auth.access_token}`,
      },
    })
  },
})
"
Contentful (GraphQL Content),https://graphql.contentful.com/content/v1/spaces/[SPACE]/environments/[ENVIRONMENT],"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    contentful_graphql: {
      type: ""app"",
      app: ""contentful_graphql"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graphql.contentful.com/content/v1/spaces/[SPACE]/environments/[ENVIRONMENT]`,
      headers: {
        Authorization: `Bearer ${this.contentful_graphql.$auth.access_token}`,
      },
      params: {
        query: `query($preview: Boolean){
      assetCollection(preview: $preview){
        items{
          title
        }
      }
    }`,
      },
    })
  },
})
"
Printful,https://api.printful.com/store,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    printful: {
      type: ""app"",
      app: ""printful"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.printful.com/store`,
      auth: {
        username: `${this.printful.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Polly,https://app.polly.ai/api/workflows.trigger,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    polly: {
      type: ""app"",
      app: ""polly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://app.polly.ai/api/workflows.trigger`,
      params: {
        ""X-API-TOKEN"": `${this.polly.$auth.api_key}`,
      },
    })
  },
})
"
Zoho Projects,https://projectsapi.{{custom_fields.region}}/restapi/portals/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_projects: {
      type: ""app"",
      app: ""zoho_projects"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://projectsapi.${this.zoho_projects.$auth.region}/restapi/portals/`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_projects.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoho WorkDrive,https://workdrive.{{custom_fields.base_api_uri}}/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_workdrive: {
      type: ""app"",
      app: ""zoho_workdrive"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://workdrive.${this.zoho_workdrive.$auth.base_api_uri}/api/v1/users/me`,
      headers: {
        Authorization: `Bearer ${this.zoho_workdrive.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoho Inventory,https://inventory.{{custom_fields.base_api_uri}}/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_inventory: {
      type: ""app"",
      app: ""zoho_inventory"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://inventory.${this.zoho_inventory.$auth.base_api_uri}/api/v1/users/me`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_inventory.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Quickbooks Sandbox,https://sandbox-quickbooks.api.intuit.com/v3/company/{{custom_fields.company_id}}/companyinfo/{{custom_fields.company_id}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    quickbooks_sandbox: {
      type: ""app"",
      app: ""quickbooks_sandbox"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://sandbox-quickbooks.api.intuit.com/v3/company/${this.quickbooks_sandbox.$auth.company_id}/companyinfo/${this.quickbooks_sandbox.$auth.company_id}`,
      headers: {
        Authorization: `Bearer ${this.quickbooks_sandbox.$auth.oauth_access_token}`,
        ""accept"": `application/json`,
        ""content-type"": `application/json`,
      },
    })
  },
})
"
Textlocal,https://api.txtlocal.com/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    textlocal: {
      type: ""app"",
      app: ""textlocal"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.txtlocal.com/balance`,
      params: {
        apiKey: `${this.textlocal.$auth.api_key}`,
      },
    })
  },
})
"
SurveyMonkey,https://api.surveymonkey.com/v3/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    survey_monkey: {
      type: ""app"",
      app: ""survey_monkey"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.surveymonkey.com/v3/users/me`,
      headers: {
        Authorization: `Bearer ${this.survey_monkey.$auth.oauth_access_token}`,
      },
    })
  },
})
"
GoCanvas,https://www.gocanvas.com/apiv2/forms.xml,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gocanvas: {
      type: ""app"",
      app: ""gocanvas"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""username"": `${this.gocanvas.$auth.username}`,
    }
    return await axios($, {
      url: `https://www.gocanvas.com/apiv2/forms.xml`,
      headers: {
        Authorization: `Bearer ${this.gocanvas.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Modern Treasury,https://app.moderntreasury.com/api/api_keys/current,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    modern_treasury: {
      type: ""app"",
      app: ""modern_treasury"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.moderntreasury.com/api/api_keys/current`,
      auth: {
        username: `${this.modern_treasury.$auth.organization_id}`,
        password: `${this.modern_treasury.$auth.api_key}`,
      },
    })
  },
})
"
Drift,https://driftapi.com/users/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    drift: {
      type: ""app"",
      app: ""drift"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://driftapi.com/users/list`,
      headers: {
        Authorization: `Bearer ${this.drift.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Notarize,https://api.notarize.com/v1/transactions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    notarize: {
      type: ""app"",
      app: ""notarize"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.notarize.com/v1/transactions`,
      headers: {
        ""ApiKey"": `${this.notarize.$auth.api_key}`,
      },
    })
  },
})
"
Middesk,https://api.middesk.com/v1/webhooks,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    middesk: {
      type: ""app"",
      app: ""middesk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.middesk.com/v1/webhooks`,
      auth: {
        username: `${this.middesk.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Let's Enhance,https://api.letsenhance.ai/v1.95/op/upscale,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    let_s_enhance: {
      type: ""app"",
      app: ""let_s_enhance"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.letsenhance.ai/v1.95/op/upscale`,
      headers: {
        ""x-api-key"": `${this.let_s_enhance.$auth.api_key}`,
      },
      params: {
        url: `https://res-5.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco/tnorenk8asjwdh1o8iuu`,
      },
    })
  },
})
"
Orbit,https://app.orbit.love/api/v1/workspaces,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    orbit: {
      type: ""app"",
      app: ""orbit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.orbit.love/api/v1/workspaces`,
      headers: {
        Authorization: `Bearer ${this.orbit.$auth.api_token}`,
      },
    })
  },
})
"
Hellosign,https://api.hellosign.com/v3/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hellosign: {
      type: ""app"",
      app: ""hellosign"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.hellosign.com/v3/account`,
      headers: {
        Authorization: `Bearer ${this.hellosign.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Outreach,https://api.outreach.io/api/v2/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    outreach: {
      type: ""app"",
      app: ""outreach"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.outreach.io/api/v2/accounts`,
      headers: {
        Authorization: `Bearer ${this.outreach.$auth.oauth_access_token}`,
        ""Content-Type"": `application/vnd.api+json`,
      },
    })
  },
})
"
Prerender.io,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    prerender: {
      type: ""app"",
      app: ""prerender"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.prerender.io/recache`,
      method: `post`,
      data: {
        prerenderToken: this.prerender.$auth.token,
        url: ""http://www.example.com/url/to/recache""
      },
    })
  },
})
"
Google Ads,https://googleads.googleapis.com/v11/customers:listAccessibleCustomers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_ads: {
      type: ""app"",
      app: ""google_ads"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://googleads.googleapis.com/v11/customers:listAccessibleCustomers`,
      headers: {
        Authorization: `Bearer ${this.google_ads.$auth.oauth_access_token}`,
        ""developer-token"": `9UO_iIhSLYBlGSklTp2sug`,
      },
    })
  },
})
"
Freshdesk,https://{{custom_fields.domain}}.freshdesk.com/api/v2/tickets,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freshdesk: {
      type: ""app"",
      app: ""freshdesk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.freshdesk.$auth.domain}.freshdesk.com/api/v2/tickets`,
      auth: {
        username: `${this.freshdesk.$auth.api_key}:X`,
        password: ``,
      },
    })
  },
})
"
Hunter,https://api.hunter.io/v2/domain-search,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hunter: {
      type: ""app"",
      app: ""hunter"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.hunter.io/v2/domain-search`,
      params: {
        api_key: `${this.hunter.$auth.api_key}`,
        domain: `stripe.com`,
      },
    })
  },
})
"
Groove,https://api.groovehq.com/v1/agents,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    groove: {
      type: ""app"",
      app: ""groove"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.groovehq.com/v1/agents`,
      headers: {
        Authorization: `Bearer ${this.groove.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Revel Systems,https://{{custom_fields.subdomain}}.revelup.com/resources/OrderItem,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    revel_systems: {
      type: ""app"",
      app: ""revel_systems"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.revel_systems.$auth.subdomain}.revelup.com/resources/OrderItem`,
      headers: {
        ""API-AUTHENTICATION"": `${this.revel_systems.$auth.api_key}:${this.revel_systems.$auth.api_secret}`,
      },
    })
  },
})
"
UserVoice,https://{{custom_fields.subdomain}}.uservoice.com/api/v2/admin/users/current,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    uservoice: {
      type: ""app"",
      app: ""uservoice"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.uservoice.$auth.subdomain}.uservoice.com/api/v2/admin/users/current`,
      headers: {
        Authorization: `Bearer ${this.uservoice.$auth.access_token}`,
      },
    })
  },
})
"
Mastadon (mstdn.social),https://mstdn.social/api/v1/apps/verify_credentials,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mastadon: {
      type: ""app"",
      app: ""mastadon"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://mstdn.social/api/v1/apps/verify_credentials`,
      headers: {
        Authorization: `Bearer ${this.mastadon.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Adalo,https://api.adalo.com/v0/apps/[APP_ID]/collections/[COLLECTION_ID],"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    adalo: {
      type: ""app"",
      app: ""adalo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.adalo.com/v0/apps/[APP_ID]/collections/[COLLECTION_ID]`,
      headers: {
        Authorization: `Bearer ${this.adalo.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Camlytics,https://cloud.camlytics.com/service/api/v1/channels,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    camlytics: {
      type: ""app"",
      app: ""camlytics"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://cloud.camlytics.com/service/api/v1/channels`,
      headers: {
        ""X-Key"": ``,
        ""X-Sign"": ``,
      },
    })
  },
})
"
GetResponse,https://api.getresponse.com/v3/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    getresponse: {
      type: ""app"",
      app: ""getresponse"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.getresponse.com/v3/accounts`,
      headers: {
        ""X-Auth-Token"": `api-key ${this.getresponse.$auth.api_key}`,
      },
    })
  },
})
"
Amadeus,https://test.api.amadeus.com/v1/shopping/flight-destinations?origin=PAR&maxPrice=200,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amadeus: {
      type: ""app"",
      app: ""amadeus"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://test.api.amadeus.com/v1/shopping/flight-destinations?origin=PAR&maxPrice=200`,
      headers: {
        Authorization: `Bearer ${this.amadeus.$auth.oauth_access_token}`,
      },
    })
  },
})
"
ReCharge,https://api.rechargeapps.com/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    recharge: {
      type: ""app"",
      app: ""recharge"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rechargeapps.com/customers`,
      headers: {
        ""X-Recharge-Access-Token"": `${this.recharge.$auth.api_key}`,
      },
    })
  },
})
"
Shortcut (formerly Clubhouse.io),https://api.clubhouse.io/api/v3/member,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shortcut: {
      type: ""app"",
      app: ""shortcut"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.clubhouse.io/api/v3/member`,
      headers: {
        Authorization: `Bearer ${this.shortcut.$auth.api_key}`,
        ""Clubhouse-Token"": `${this.shortcut.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
RemoteLock,https://api.remotelock.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    remotelock: {
      type: ""app"",
      app: ""remotelock"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.remotelock.com/user`,
      headers: {
        Authorization: `Bearer ${this.remotelock.$auth.oauth_access_token}`,
        ""Accept"": `application/vnd.lockstate.v1+json`,
      },
    })
  },
})
"
Microsoft OneDrive,https://graph.microsoft.com/v1.0/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    microsoft_onedrive: {
      type: ""app"",
      app: ""microsoft_onedrive"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.microsoft.com/v1.0/me`,
      headers: {
        Authorization: `Bearer ${this.microsoft_onedrive.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Lusha,https://api.lusha.com/person,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lusha: {
      type: ""app"",
      app: ""lusha"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lusha.com/person`,
      headers: {
        ""api_key"": `${this.lusha.$auth.api_key}`,
      },
      params: {
        firstName: `Rob`,
        lastName: `Taylor`,
        company: `intercom`,
      },
    })
  },
})
"
Neverbounce,https://api.neverbounce.com/v4/single/check,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    neverbounce: {
      type: ""app"",
      app: ""neverbounce"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.neverbounce.com/v4/single/check`,
      params: {
        key: `${this.neverbounce.$auth.api_key}`,
        email: `demo@test.com`,
      },
    })
  },
})
"
Ometria,https://api.ometria.com/v2/orders,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ometria: {
      type: ""app"",
      app: ""ometria"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ometria.com/v2/orders`,
      headers: {
        ""X-Ometria-Auth"": `${this.ometria.$auth.api_key}`,
      },
    })
  },
})
"
Streamlabs,https://streamlabs.com/api/v1.0/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    streamlabs: {
      type: ""app"",
      app: ""streamlabs"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://streamlabs.com/api/v1.0/user`,
      params: {
        access_token: `${this.streamlabs.$auth.oauth_access_token}`,
      },
    })
  },
})
"
"10,000ft by Smartsheet ",https://api.10000ft.com/api/v1/users ,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    _10000ft: {
      type: ""app"",
      app: ""_10000ft"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.10000ft.com/api/v1/users `,
      headers: {
        ""auth"": `${this._10000ft.$auth.token}`,
      },
      params: {
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Accuranker,https://app.accuranker.com/api/v4/accounts/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    accuranker: {
      type: ""app"",
      app: ""accuranker"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.accuranker.com/api/v4/accounts/`,
      headers: {
        Authorization: `Bearer ${this.accuranker.$auth.oauth_access_token}`,
      },
      params: {
        fields: `id`,
      },
    })
  },
})
"
Smartsheet,https://api.smartsheet.com/2.0/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smartsheet: {
      type: ""app"",
      app: ""smartsheet"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.smartsheet.com/2.0/users/me`,
      headers: {
        Authorization: `Bearer ${this.smartsheet.$auth.oauth_access_token}`,
      },
    })
  },
})
"
pCloud,https://{{custom_fields.hostname}}/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pcloud: {
      type: ""app"",
      app: ""pcloud"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.pcloud.$auth.hostname}/userinfo`,
      headers: {
        Authorization: `Bearer ${this.pcloud.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Rasa,https://api.rasa.io/v1/tokens,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rasa: {
      type: ""app"",
      app: ""rasa"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""key"": `${this.rasa.$auth.key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.rasa.io/v1/tokens`,
      headers: {
        ""accept"": `application/json`,
        ""Content-type"": `application/json`,
      },
      auth: {
        username: `${this.rasa.$auth.username}`,
        password: `${this.rasa.$auth.password}`,
      },
      data,
    })
  },
})
"
Clockify,https://api.clockify.me/api/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clockify: {
      type: ""app"",
      app: ""clockify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.clockify.me/api/v1/user`,
      headers: {
        ""X-Api-Key"": `${this.clockify.$auth.api_key}`,
        ""content-type"": `application/json`,
      },
    })
  },
})
"
Trengo,https://app.trengo.eu/api/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    trengo: {
      type: ""app"",
      app: ""trengo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.trengo.eu/api/v2/users`,
      headers: {
        Authorization: `Bearer ${this.trengo.$auth.access_token}`,
      },
    })
  },
})
"
Zerys,https://api.zerys.com/v1/content/getcontent,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zerys: {
      type: ""app"",
      app: ""zerys"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.zerys.com/v1/content/getcontent`,
      headers: {
        Authorization: `Bearer ${this.zerys.$auth.oauth_access_token}`,
        ""Title_id"": ``,
      },
    })
  },
})
"
Polygon,https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2020-06-01/2020-06-17,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    polygon: {
      type: ""app"",
      app: ""polygon"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2020-06-01/2020-06-17`,
      params: {
        apiKey: `${this.polygon.$auth.api_key}`,
      },
    })
  },
})
"
Headless Testing,https://api.headlesstesting.com/api/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    headless_testing: {
      type: ""app"",
      app: ""headless_testing"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.headlesstesting.com/api/v1/user`,
      params: {
        token: `${this.headless_testing.$auth.api_key}`,
      },
    })
  },
})
"
Marketplacer,{{custom_fields.api_endpoint}}/client/adverts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    marketplacer: {
      type: ""app"",
      app: ""marketplacer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.marketplacer.$auth.api_endpoint}/client/adverts`,
      headers: {
        Authorization: `Bearer ${this.marketplacer.$auth.api_key}`,
      },
    })
  },
})
"
Placekey,https://api.placekey.io/v1/placekey,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    placekey: {
      type: ""app"",
      app: ""placekey"",
    }
  },
  async run({steps, $}) {
    const data = {
      query: {
        city: [CITY],
        region: [REGION],
        street_address: [STREET_ADDRESS],
        postal_code: [POSTAL_CODE],
        iso_country_code: [ISO_COUNTRY_CODE]  
      },
      options: {
        strict_name_match: false,
      },
    }
    
    return await axios($, {
      method: ""post"",
      url: `https://api.placekey.io/v1/placekey`,
      headers: {
        ""apikey"": `${this.placekey.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Withings,https://wbsapi.withings.net/measure,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    withings: {
      type: ""app"",
      app: ""withings"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://wbsapi.withings.net/measure`,
      headers: {
        Authorization: `Bearer ${this.withings.$auth.oauth_access_token}`,
      },
      params: {
        action: `getmeas`,
      },
    })
  },
})
"
Linkish,https://api.linkish.io/save-link,"module.exports = defineComponent({
  props: {
    linkish: {
      type: ""app"",
      app: ""linkish"",
    }
  },
  async run({steps, $}) {
    const axios = require('axios');
    let access_token = """";
    
    // Card details
    let type = ""link"", // either ""link"" or ""text""
    		url = ""https://www.youtube.com/watch?v=dQw4w9WgXcQ"", // required if ""type"" is ""link""
    		title = """", // card title, if empty it will be scraped from ""url""
    		description = """", // card description, if empty it will be scraped from ""url""
    		thumbnail = """", // preview image URL, if empty it will be scraped from ""url""
    		parent = """", // collections[index].id recieved from get-collection API
    		tags = []; // an array of strings, items can also have comma separated strings
    
    // Get access token based on the linkish API key
    return await axios({
    	method  : ""POST"", 
    	url: ""https://api.linkish.io/get-token"",
    	data : JSON.stringify({
    		""api_key"": this.linkish.$auth.api_key
    	}),
    	headers: {
    		""Content-Type"": ""application/json"",
    		""Accept"": ""application/json"",
    	}
    }).then(async (response) => {
    
    	// Get collections based on the access token
    	access_token = response.data.token;
    	return await axios({
    		method  : ""GET"",
    		url: ""https://api.linkish.io/get-collections"",
    		headers: {
    			""Authorization"": `Bearer ${access_token}`,
    		}
    	})
    
    }).then((response) => {
    
    	// Return the data as the step export
    	return response.data;
    
    }).then(async (collections) => {
    
    	// Change parent collection ID here or keep it empty for adding links to root collection
    	parent = collections[0].id;
    
    	// Save link in linkish dashboard
    	return await axios({
    		method  : ""POST"",
    		url: ""https://api.linkish.io/save-link"",
    		data : JSON.stringify({
    			""type"": type,
    			""url"": url,
    			""title"": title,
    			""desc"": description,
    			""thumbnail"": thumbnail,
    			""parent"": parent,
    			""tags"": tags,
    		}),
    		headers: {
    			""Authorization"": `Bearer ${access_token}`,
    			""Content-Type"": ""application/json"",
    			""Accept"": ""application/json"",
    		}
    	})
    
    }).then((response) => {
    
    	// Return the data as the step export
    	return response.data
    
    })
  },
})
"
Payhere,https://{{custom_fields.environment}}.payhere.co/api/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    payhere: {
      type: ""app"",
      app: ""payhere"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.payhere.$auth.environment}.payhere.co/api/v1/user`,
      headers: {
        Authorization: `Bearer ${this.payhere.$auth.api_key}`,
      },
    })
  },
})
"
Revue,https://www.getrevue.co/api/v2/accounts/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    revue: {
      type: ""app"",
      app: ""revue"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.getrevue.co/api/v2/accounts/me`,
      headers: {
        ""Authorization"": `Token ${this.revue.$auth.api_key}`,
      },
    })
  },
})
"
Returnly,https://api.returnly.com/returns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    returnly: {
      type: ""app"",
      app: ""returnly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.returnly.com/returns`,
      headers: {
        ""X-Api-Token"": `${this.returnly.$auth.api_key}`,
      },
      params: {
        include: `return_line_items,shipping_labels,instant_refund_voucher`,
        status: `refunded`,
      },
    })
  },
})
"
LoyaltyLion,https://api.loyaltylion.com/v2/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    loyaltylion: {
      type: ""app"",
      app: ""loyaltylion"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.loyaltylion.com/v2/customers`,
      headers: {
        Authorization: `Bearer ${this.loyaltylion.$auth.oauth_access_token}`,
      },
      params: {
        since_id: `0`,
        limit: `2`,
      },
    })
  },
})
"
Fitbit,https://api.fitbit.com/1/user/-/profile.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fitbit: {
      type: ""app"",
      app: ""fitbit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.fitbit.com/1/user/-/profile.json`,
      headers: {
        Authorization: `Bearer ${this.fitbit.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Acquire,https://{{custom_fields.account_id}}.acquire.io/api/v1/account/department,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    acquire: {
      type: ""app"",
      app: ""acquire"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.acquire.$auth.account_id}.acquire.io/api/v1/account/department`,
      headers: {
        Authorization: `Bearer ${this.acquire.$auth.api_key}`,
      },
    })
  },
})
"
Directus,{{custom_fields.api_host}}/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    directus: {
      type: ""app"",
      app: ""directus"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.directus.$auth.api_host}/users/me`,
      headers: {
        Authorization: `Bearer ${this.directus.$auth.access_token}`,
      },
    })
  },
})
"
YouTube (Data API) - Custom App,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    youtube_data_api_custom_app: {
      type: ""app"",
      app: ""youtube_data_api_custom_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.youtube_data_api_custom_app.$auth.oauth_access_token}`,
      },
    })
  },
})
"
YouTube (Analytics API) - Custom App,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    youtube_analytics_api_custom_app: {
      type: ""app"",
      app: ""youtube_analytics_api_custom_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.youtube_analytics_api_custom_app.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Paymo,https://app.paymoapp.com/api/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    paymo: {
      type: ""app"",
      app: ""paymo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.paymoapp.com/api/me`,
      auth: {
        username: `${this.paymo.$auth.api_key}`,
        password: `random`,
      },
    })
  },
})
"
PageSpeed Insights,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pagespeed_insights: {
      type: ""app"",
      app: ""pagespeed_insights"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/pagespeedonline/v5/runPagespeed`,
      params: {
        key: custom_fields.api_key,
        url: ""https://developers.google.com""
      }
    })
  },
})
"
BigCommerce2,https://api.bigcommerce.com/stores/{{custom_fields.store_hash}}/v3/catalog/summary,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bc: {
      type: ""app"",
      app: ""bc"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bigcommerce.com/stores/${this.bc.$auth.store_hash}/v3/catalog/summary`,
      headers: {
        ""X-Auth-Token"": `${this.bc.$auth.access_token}`,
      },
    })
  },
})
"
Canvas,https://{{custom_fields.domain}}/api/v1/users/self,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    canvas: {
      type: ""app"",
      app: ""canvas"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.canvas.$auth.domain}/api/v1/users/self`,
      headers: {
        Authorization: `Bearer ${this.canvas.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Alchemer,https://api.alchemer.com/v5/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    alchemer: {
      type: ""app"",
      app: ""alchemer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.alchemer.com/v5/account`,
      params: {
        api_token: `${this.alchemer.$auth.api_key}`,
        api_token_secret: `${this.alchemer.$auth.api_secret}`,
      },
    })
  },
})
"
AWeber,https://api.aweber.com/1.0/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    aweber: {
      type: ""app"",
      app: ""aweber"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.aweber.com/1.0/accounts`,
      headers: {
        Authorization: `Bearer ${this.aweber.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Podio,https://api.podio.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    podio: {
      type: ""app"",
      app: ""podio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.podio.com/user`,
      headers: {
        Authorization: `Bearer ${this.podio.$auth.oauth_access_token}`,
      },
    })
  },
})
"
lemlist,https://api.lemlist.com/api/team,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lemlist: {
      type: ""app"",
      app: ""lemlist"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lemlist.com/api/team`,
      auth: {
        username: ``,
        password: `${this.lemlist.$auth.api_key}`,
      },
    })
  },
})
"
Purple Sonar,https://api-public.purplesonar.com/api/v1/enrich/domain/google.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sonar: {
      type: ""app"",
      app: ""sonar"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api-public.purplesonar.com/api/v1/enrich/domain/google.com`,
      headers: {
        Authorization: `Bearer ${this.sonar.$auth.api_key}`,
      },
    })
  },
})
"
ChartMogul,https://api.chartmogul.com/v1/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chartmogul: {
      type: ""app"",
      app: ""chartmogul"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.chartmogul.com/v1/ping`,
      auth: {
        username: `${this.chartmogul.$auth.account_token}`,
        password: `${this.chartmogul.$auth.secret_key}`,
      },
    })
  },
})
"
Apiary,https://api.apiary.io/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    apiary: {
      type: ""app"",
      app: ""apiary"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.apiary.io/me`,
      headers: {
        Authorization: `Bearer ${this.apiary.$auth.token}`,
      },
    })
  },
})
"
Snov,https://api.snov.io/v1/get-balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    snov: {
      type: ""app"",
      app: ""snov"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.snov.io/v1/get-balance`,
      headers: {
        Authorization: `Bearer ${this.snov.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Coinranking,https://api.coinranking.com/v2/coins,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    coinranking: {
      type: ""app"",
      app: ""coinranking"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.coinranking.com/v2/coins`,
      headers: {
        ""x-access-token"": `${this.coinranking.$auth.api_key}`,
      },
    })
  },
})
"
Helium (Console),https://console.helium.com/api/v1/devices,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    helium: {
      type: ""app"",
      app: ""helium"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://console.helium.com/api/v1/devices`,
      headers: {
        ""key"": `${this.helium.$auth.api_key}`,
      },
    })
  },
})
"
Frame.io,https://api.frame.io/v2/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    frame: {
      type: ""app"",
      app: ""frame"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.frame.io/v2/accounts`,
      headers: {
        Authorization: `Bearer ${this.frame.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Outgrow,https://api.outgrow.co/api/v1/get_cal/{{custom_fields.api_key}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    outgrow: {
      type: ""app"",
      app: ""outgrow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.outgrow.co/api/v1/get_cal/${this.outgrow.$auth.api_key}`,
    })
  },
})
"
easyDNS,https://rest.easydns.net/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    easydns: {
      type: ""app"",
      app: ""easydns"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.easydns.net/user`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.easydns.$auth.Token}`,
        password: `${this.easydns.$auth.Key}`,
      },
    })
  },
})
"
Bandwidth,https://dashboard.bandwidth.com/api/accounts/{{custom_fields.accountId}}/applications,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bandwidth: {
      type: ""app"",
      app: ""bandwidth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://dashboard.bandwidth.com/api/accounts/${this.bandwidth.$auth.accountId}/applications`,
      auth: {
        username: `${this.bandwidth.$auth.username}`,
        password: `${this.bandwidth.$auth.password}`,
      },
    })
  },
})
"
Copper,https://api.prosperworks.com/developer_api/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    copper: {
      type: ""app"",
      app: ""copper"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.prosperworks.com/developer_api/v1/account`,
      headers: {
        ""X-PW-AccessToken"": `${this.copper.$auth.api_key}`,
        ""X-PW-Application"": `developer_api`,
        ""X-PW-UserEmail"": `${this.copper.$auth.email}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Escrow.com,https://api.escrow.com/2017-09-01/customer/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    escrow: {
      type: ""app"",
      app: ""escrow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.escrow.com/2017-09-01/customer/me`,
      auth: {
        username: `${this.escrow.$auth.email}`,
        password: `${this.escrow.$auth.api_key}`,
      },
    })
  },
})
"
Zeta (Boomtrain),https://events.api.boomtrain.com/events/recent/{{custom_fields.site_id}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    boomtrain: {
      type: ""app"",
      app: ""boomtrain"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://events.api.boomtrain.com/events/recent/${this.boomtrain.$auth.site_id}`,
      headers: {
        Authorization: `Bearer ${this.boomtrain.$auth.id_token}`,
      },
      params: {
        count: `10`,
      },
    })
  },
})
"
Mailersend,https://api.mailersend.com/v1/domains,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailersend: {
      type: ""app"",
      app: ""mailersend"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mailersend.com/v1/domains`,
      headers: {
        Authorization: `Bearer ${this.mailersend.$auth.api_token}`,
      },
    })
  },
})
"
Placekey test,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    placekey_test: {
      type: ""app"",
      app: ""placekey_test"",
    }
  },
  async run({steps, $}) {
    const data = {
      query: {
        location_name: params.location_name,
        street_address: params.street_address,
        city: params.city,
        region: params.region,
        street_address: params.street_address,
        postal_code: params.postal_code,
        latitude: params.latitude,
        longitude: params.longitude,
        iso_country_code: params.iso_country_code
      },
      options: {
        strict_name_match: params.strict_name_match
      },
    }
    return await axios($, {
      method: ""POST"",
      url: `https://api.placekey.io/v1/placekey`,
      headers: {
        ""apikey"": `${auths.placekey.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Draftable,https://api.draftable.com/v1/comparisons/[ACCOUNT_ID]/[IDENTIFIER],"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    draftable: {
      type: ""app"",
      app: ""draftable"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.draftable.com/v1/comparisons/[ACCOUNT_ID]/[IDENTIFIER]`,
      headers: {
        ""Authorization"": `Token ${this.draftable.$auth.token}`,
      },
    })
  },
})
"
Benzinga,https://api.benzinga.com/api/v2/news,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    benzinga: {
      type: ""app"",
      app: ""benzinga"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.benzinga.com/api/v2/news`,
      headers: {
        ""accept"": `application/json`,
      },
      params: {
        token: `${this.benzinga.$auth.api_key}`,
      },
    })
  },
})
"
Oracle Cloud,https://usageapi.{{custom_fields.region}}.oci.oraclecloud.com/20280428/usage,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    oracle_cloud: {
      type: ""app"",
      app: ""oracle_cloud"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://usageapi.${this.oracle_cloud.$auth.region}.oci.oraclecloud.com/20280428/usage`,
      headers: {
        ""(request-target)"": ``,
        ""host"": ``,
        ""date"": ``,
      },
    })
  },
})
"
Locate,https://{{custom_fields.subdomain}}.locateinv.com/salesordertype,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    locate: {
      type: ""app"",
      app: ""locate"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.locate.$auth.subdomain}.locateinv.com/salesordertype`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.locate.$auth.api_key}`,
        password: `${this.locate.$auth.api_key}`,
      },
    })
  },
})
"
GoHighLevel,https://rest.gohighlevel.com/v1/calendars/teams,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gohighlevel: {
      type: ""app"",
      app: ""gohighlevel"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.gohighlevel.com/v1/calendars/teams`,
      headers: {
        Authorization: `Bearer ${this.gohighlevel.$auth.api_key}`,
      },
    })
  },
})
"
Baserow,https://api.baserow.io/api/database/rows/table/[TABLE_ID]/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    baserow: {
      type: ""app"",
      app: ""baserow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.baserow.io/api/database/rows/table/[TABLE_ID]/`,
      headers: {
        ""Authorization"": `Token ${this.baserow.$auth.token}`,
      },
    })
  },
})
"
Impression,https://mobile.impression.cloud/api/uat/GetRoles,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    impression: {
      type: ""app"",
      app: ""impression"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""extension"": `docx`,
      ""doc"": `string`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://mobile.impression.cloud/api/uat/GetRoles`,
      headers: {
        ""x-api-key"": `${this.impression.$auth.api_key}`,
        ""accept"": `application/json`,
      },
      data,
    })
  },
})
"
Insightly,https://api.{{custom_fields.pod}}.insightly.com/v3.1/Contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    insightly: {
      type: ""app"",
      app: ""insightly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.${this.insightly.$auth.pod}.insightly.com/v3.1/Contacts`,
      auth: {
        username: `${this.insightly.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Close,https://api.close.com/api/v1/me/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    close: {
      type: ""app"",
      app: ""close"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.close.com/api/v1/me/`,
      auth: {
        username: `${this.close.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Interseller,http://interseller.io/api/team/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    interseller: {
      type: ""app"",
      app: ""interseller"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://interseller.io/api/team/users`,
      headers: {
        ""X-API-Key"": `${this.interseller.$auth.api_key}`,
      },
    })
  },
})
"
Segment OAuth,https://platform.segmentapis.com/v1beta/catalog/sources,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    segment_oauth: {
      type: ""app"",
      app: ""segment_oauth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://platform.segmentapis.com/v1beta/catalog/sources`,
      headers: {
        Authorization: `Bearer ${this.segment_oauth.$auth.oauth_access_token}`,
        ""content-type"": `copy-body`,
      },
    })
  },
})
"
Ably,https://rest.ably.io/channels/rest-example/messages,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ably: {
      type: ""app"",
      app: ""ably"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.ably.io/channels/rest-example/messages`,
      auth: {
        username: `${this.ably.$auth.api_key_initial}`,
        password: `${this.ably.$auth.api_key_remaining}`,
      },
    })
  },
})
"
Yotpo - Loyalty & Referrals,https://loyalty.yotpo.com/api/v2/campaigns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    yotpo_loyalty_referrals: {
      type: ""app"",
      app: ""yotpo_loyalty_referrals"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://loyalty.yotpo.com/api/v2/campaigns`,
      headers: {
        ""Content-Type"": `application/json`,
        ""x-guid"": `${this.yotpo_loyalty_referrals.$auth.guid}`,
        ""x-api-key"": `${this.yotpo_loyalty_referrals.$auth.api_key}`,
      },
    })
  },
})
"
Symbl.ai,https://api.symbl.ai/v1/manage/trackers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    symbl_ai: {
      type: ""app"",
      app: ""symbl_ai"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.symbl.ai/v1/manage/trackers`,
      headers: {
        Authorization: `Bearer ${this.symbl_ai.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Notion,https://api.notion.com/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    notion: {
      type: ""app"",
      app: ""notion"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.notion.com/v1/users/me`,
      headers: {
        Authorization: `Bearer ${this.notion.$auth.oauth_access_token}`,
        ""Notion-Version"": `2021-08-16`,
      },
    })
  },
})
"
Snipcart,https://app.snipcart.com/api/orders,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    snipcart: {
      type: ""app"",
      app: ""snipcart"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.snipcart.com/api/orders`,
      auth: {
        username: `${this.snipcart.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Zenkit,https://zenkit.com/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zenkit: {
      type: ""app"",
      app: ""zenkit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://zenkit.com/api/v1/users/me`,
      headers: {
        Authorization: `Bearer ${this.zenkit.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Highrise,https://{{custom_fields.subdomain}}.highrisehq.com/people/1.xml,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    highrise: {
      type: ""app"",
      app: ""highrise"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.highrise.$auth.subdomain}.highrisehq.com/people/1.xml`,
      auth: {
        username: `${this.highrise.$auth.token}`,
        password: ``,
      },
    })
  },
})
"
Ongage,https://api.ongage.net/api/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ongage: {
      type: ""app"",
      app: ""ongage"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ongage.net/api/lists`,
      headers: {
        ""x_username"": `${this.ongage.$auth.x_username}`,
        ""x_password"": `${this.ongage.$auth.x_password}`,
        ""x_account_code"": `${this.ongage.$auth.x_account_code}`,
      },
    })
  },
})
"
Capsule,https://api.capsulecrm.com/api/v2/users/current,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    capsule: {
      type: ""app"",
      app: ""capsule"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.capsulecrm.com/api/v2/users/current`,
      headers: {
        Authorization: `Bearer ${this.capsule.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Guilded,https://www.guilded.gg/api/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    guilded: {
      type: ""app"",
      app: ""guilded"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.guilded.gg/api/me`,
      headers: {
        ""cookie"": `2120c4a1a1fabcb7e77e0f45a30db44a1f549ac363fd82a44615c81f79137838b5a9d391ae1946a875bfda2ce215e7.0e2e0249372e65c6aa8fcd116aefa476.29fd947760ef6736dd74dd0cece334580115db8238276e9fe26a7faec58942ef`,
      },
    })
  },
})
"
Itemize,https://sandbox.proapi.itemize.com/api/enterprise/v1/accounts/[ACCOUNT-ID],"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    itemize: {
      type: ""app"",
      app: ""itemize"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://sandbox.proapi.itemize.com/api/enterprise/v1/accounts/[ACCOUNT-ID]`,
      auth: {
        username: `${this.itemize.$auth.api_token}`,
        password: ``,
      },
    })
  },
})
"
Agenty,https://api.agenty.com/v1/team,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    agenty: {
      type: ""app"",
      app: ""agenty"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.agenty.com/v1/team`,
      params: {
        apikey: `${this.agenty.$auth.api_key}`,
      },
    })
  },
})
"
Cloudmersive,https://api.cloudmersive.com/validate/email/address/syntaxOnly,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudmersive: {
      type: ""app"",
      app: ""cloudmersive"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""value"": `support@cloudmersive.com`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.cloudmersive.com/validate/email/address/syntaxOnly`,
      headers: {
        ""Apikey"": `${this.cloudmersive.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Cliniko,https://api.{{custom_fields.shard}}.cliniko.com/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cliniko: {
      type: ""app"",
      app: ""cliniko"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.${this.cliniko.$auth.shard}.cliniko.com/v1/users`,
      headers: {
        ""User-Agent"": `Pipedream (support@pipedream.com)`,
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.cliniko.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
nocodb,https://{{custom_fields.domain}}/user/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nocodb: {
      type: ""app"",
      app: ""nocodb"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.nocodb.$auth.domain}/user/me`,
      headers: {
        ""accept"": `application/json`,
        ""xc-auth"": `${this.nocodb.$auth.api_key}`,
      },
    })
  },
})
"
Podio - Custom App,https://api.podio.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    podio_custom_app: {
      type: ""app"",
      app: ""podio_custom_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.podio.com/user`,
      headers: {
        Authorization: `Bearer ${this.podio_custom_app.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Short.io,https://api.short.io/api/domains,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    short: {
      type: ""app"",
      app: ""short"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.short.io/api/domains`,
      headers: {
        ""Accept"": `application/json`,
        ""Authorization"": `${this.short.$auth.secret_key}`,
      },
    })
  },
})
"
Blizzard Battle.net,https://{{custom_fields.region}}.api.blizzard.com/d3/data/item-type?locale=fr_FR,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    battle_net: {
      type: ""app"",
      app: ""battle_net"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.battle_net.$auth.region}.api.blizzard.com/d3/data/item-type?locale=fr_FR`,
      headers: {
        Authorization: `Bearer ${this.battle_net.$auth.oauth_access_token}`,
      },
    })
  },
})
"
DEAR Systems,https://inventory.dearsystems.com/ExternalApi/v2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dear: {
      type: ""app"",
      app: ""dear"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://inventory.dearsystems.com/ExternalApi/v2/me`,
      headers: {
        ""api-auth-accountid"": `${this.dear.$auth.account_id}`,
        ""api-auth-applicationkey"": `${this.dear.$auth.application_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
commercetools,{{custom_fields.api_host}}{{custom_fields.projectKey}}/stores,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    commercetools: {
      type: ""app"",
      app: ""commercetools"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.commercetools.$auth.api_host}${this.commercetools.$auth.projectKey}/stores`,
      headers: {
        Authorization: `Bearer ${this.commercetools.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SwagUp,https://api.swagup.com/api/v1/profiles/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    swagup: {
      type: ""app"",
      app: ""swagup"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.swagup.com/api/v1/profiles/`,
      headers: {
        Authorization: `Bearer ${this.swagup.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Samsung SmartThings,https://api.smartthings.com/v1/devices,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smartthings: {
      type: ""app"",
      app: ""smartthings"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.smartthings.com/v1/devices`,
      headers: {
        Authorization: `Bearer ${this.smartthings.$auth.token}`,
      },
    })
  },
})
"
Gift Up!,https://api.giftup.app/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gift_up: {
      type: ""app"",
      app: ""gift_up"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.giftup.app/ping`,
      headers: {
        Authorization: `Bearer ${this.gift_up.$auth.api_key}`,
      },
    })
  },
})
"
ApiFlash,https://api.apiflash.com/v1/urltoimage,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    apiflash: {
      type: ""app"",
      app: ""apiflash"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.apiflash.com/v1/urltoimage`,
      params: {
        access_key: `${this.apiflash.$auth.access_key}`,
        url: `https://google.com`,
      },
    })
  },
})
"
Ticktick,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ticktick: {
      type: ""app"",
      app: ""ticktick"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""title"": `Example task from Pipedream`,
    }
    const message = ""Uncomment the code in order to make authenticated requests to Ticktick""
    return message
    // return await axios($, {
    //   method: ""post"",
    //   url: `https://api.ticktick.com/open/v1/task`,
    //   headers: {
    //     Authorization: `Bearer ${this.ticktick.$auth.oauth_access_token}`,
    //   },
    //   data,
    // })
  },
})
"
Supabase,https://${auths.supabase.subdomain}.supabase.co/rest/v1/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    supabase: {
      type: ""app"",
      app: ""supabase"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.supabase.$auth.subdomain}.supabase.co/rest/v1/`,
      headers: {
        Authorization: `Bearer ${this.supabase.$auth.service_key}`,
        ""apikey"": `${this.supabase.$auth.service_key}`,
      },
    })
  },
})
"
Pexels,https://api.pexels.com/v1/search?query=people,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pexels: {
      type: ""app"",
      app: ""pexels"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pexels.com/v1/search?query=people`,
      headers: {
        ""Authorization"": `${this.pexels.$auth.api_key}`,
      },
    })
  },
})
"
Unsplash,https://api.unsplash.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    unsplash: {
      type: ""app"",
      app: ""unsplash"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.unsplash.com/me`,
      headers: {
        Authorization: `Bearer ${this.unsplash.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Tinybird,https://api.tinybird.co/v0/tokens,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tinybird: {
      type: ""app"",
      app: ""tinybird"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.tinybird.co/v0/tokens`,
      headers: {
        Authorization: `Bearer ${this.tinybird.$auth.token}`,
      },
    })
  },
})
"
Zoho Docs,https://apidocs.zoho.com/files/v1/files,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_docs: {
      type: ""app"",
      app: ""zoho_docs"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apidocs.zoho.com/files/v1/files`,
      headers: {
        Authorization: `Bearer ${this.zoho_docs.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoho Creator Test,https://creator.{{custom_fields.base_api_uri}}/api/v2/{{custom_fields.account_owner_name}}/applications,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_creator_test: {
      type: ""app"",
      app: ""zoho_creator_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://creator.${this.zoho_creator_test.$auth.base_api_uri}/api/v2/${this.zoho_creator_test.$auth.account_owner_name}/applications`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_creator_test.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Wise,https://api.transferwise.tech/v1/profiles,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wise: {
      type: ""app"",
      app: ""wise"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.transferwise.tech/v1/profiles`,
      headers: {
        Authorization: `Bearer ${this.wise.$auth.api_token}`,
      },
    })
  },
})
"
Knack,https://api.knack.com/v1/objects/object_1/records,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    knack: {
      type: ""app"",
      app: ""knack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.knack.com/v1/objects/object_1/records`,
      headers: {
        ""X-Knack-Application-Id"": `${this.knack.$auth.application_id}`,
        ""X-Knack-REST-API-KEY"": `${this.knack.$auth.api_key}`,
        ""content-type"": `application/json`,
      },
    })
  },
})
"
CompanyCam,https://api.companycam.com/v2/users/current,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    companycam: {
      type: ""app"",
      app: ""companycam"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.companycam.com/v2/users/current`,
      headers: {
        Authorization: `Bearer ${this.companycam.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Ringba,https://api.ringba.com/v2/ringbaaccounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ringba: {
      type: ""app"",
      app: ""ringba"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ringba.com/v2/ringbaaccounts`,
      headers: {
        Authorization: `Bearer ${this.ringba.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Pushsafer,https://www.pushsafer.com/api,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pushsafer: {
      type: ""app"",
      app: ""pushsafer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.pushsafer.com/api`,
      params: {
        ""k"": `${this.pushsafer.$auth.private_key}`,
        ""d"": `${this.pushsafer.$auth.device}`,
        ""m"": `Message / text of the push notification`,
      },
    })
  },
})
"
Reply," https://api.reply.io/v1/people","import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    reply: {
      type: ""app"",
      app: ""reply"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: ` https://api.reply.io/v1/people`,
      params: {
        apiKey: `${this.reply.$auth.api_key}`,
      },
    })
  },
})
"
Help Scout,https://api.helpscout.net/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    help_scout: {
      type: ""app"",
      app: ""help_scout"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.helpscout.net/v2/users/me`,
      headers: {
        Authorization: `Bearer ${auths.helpscout.oauth_access_token}`,
      },
    })
  },
})
"
Gemini,https://api.gemini.com/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gemini: {
      type: ""app"",
      app: ""gemini"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.gemini.com/v1/account`,
      headers: {
        Authorization: `Bearer ${this.gemini.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Gemini Public,https://api.gemini.com/v1/symbols,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gemini_public: {
      type: ""app"",
      app: ""gemini_public"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.gemini.com/v1/symbols`,
    })
  },
})
"
Brex,https://platform.brexapis.com/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    brex: {
      type: ""app"",
      app: ""brex"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://platform.brexapis.com/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.brex.$auth.oauth_access_token}`,
      },
    })
  },
})
"
UiPath,https://cloud.uipath.com/{{custom_fields.account_logical_name}}/{{custom_fields.tenant_name}}/orchestrator_/odata/Users/UiPath.Server.Configuration.OData.GetCurrentUser,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    uipath: {
      type: ""app"",
      app: ""uipath"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://cloud.uipath.com/${this.uipath.$auth.account_logical_name}/${this.uipath.$auth.tenant_name}/orchestrator_/odata/Users/UiPath.Server.Configuration.OData.GetCurrentUser`,
      headers: {
        Authorization: `Bearer ${this.uipath.$auth.oauth_access_token}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Microsoft Teams Admin,https://graph.microsoft.com/v1.0/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    microsoft_teams_admin: {
      type: ""app"",
      app: ""microsoft_teams_admin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.microsoft.com/v1.0/me`,
      headers: {
        Authorization: `Bearer ${this.microsoft_teams_admin.$auth.oauth_access_token}`,
      },
    })
  },
})
"
TinyURL,https://api.tinyurl.com/create/,"module.exports = defineComponent({
  props: {
    tinyurl: {
      type: ""app"",
      app: ""tinyurl"",
    }
  },
  async run({steps, $}) {
    return (await require(""@pipedream/platform"").axios($, {
      url: `https://api.tinyurl.com/create/`,
      method: `post`,
      headers: {
        Authorization: `Bearer ${this.tinyurl.$auth.api_token}`,
      },
      data: {
        url: `ftp://www.example.com/my-really-long-link-that-I-need-to-shorten/84378949`,
      }
    })).data
  },
})"
Cryptowatch,https://api.cryptowat.ch/markets/kraken/btceur/price,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cryptowatch: {
      type: ""app"",
      app: ""cryptowatch"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cryptowat.ch/markets/kraken/btceur/price`,
      headers: {
        ""X-CW-API-Key"": `${this.cryptowatch.$auth.api_key}`,
      },
    })
  },
})
"
Microsoft Outlook,https://graph.microsoft.com/v1.0/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    microsoft_outlook: {
      type: ""app"",
      app: ""microsoft_outlook"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.microsoft.com/v1.0/me`,
      headers: {
        Authorization: `Bearer ${this.microsoft_outlook.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Microsoft 365,https://graph.microsoft.com/v1.0/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    microsoft_365: {
      type: ""app"",
      app: ""microsoft_365"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.microsoft.com/v1.0/me`,
      headers: {
        Authorization: `Bearer ${this.microsoft_365.$auth.oauth_access_token}`,
      },
    })
  },
})
"
TinyPNG,https://api.tinify.com/shrink,"module.exports = defineComponent({
  props: {
    tinypng: {
      type: ""app"",
      app: ""tinypng"",
    }
  },
  async run({steps, $}) {
    const results = await require(""@pipedream/platform"").axios($, {
      method: ""post"",
      url: `https://api.tinify.com/shrink`,
      auth: {
        username: `api:${this.tinypng.$auth.api_key}`,
        password: ``,
      },
      data: {
        ""source"": {
          ""url"": ""https://tinypng.com/images/panda-happy.png""
        }
      },
    })

    const retVal = results.output
    retVal.original_image_metadata = results.input 
    return retVal
  },
})"
Open Notify,http://api.open-notify.org/iss-now.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    open_notify: {
      type: ""app"",
      app: ""open_notify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.open-notify.org/iss-now.json`,
    })
  },
})
"
SharpSpring,https://api.sharpspring.com/pubapi/v1/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sharpspring: {
      type: ""app"",
      app: ""sharpspring"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""method"": `getLead`,
      ""params"": `{
        ""id"":""<a lead id>""
      }`,
      ""id"": `<your request ID>`,
    }
    return await axios($, {
      url: `https://api.sharpspring.com/pubapi/v1/`,
      params: {
        accountID: `${this.sharpspring.$auth.account_id}`,
        secretKey: `${this.sharpspring.$auth.secret_key}`,
      },
      data,
    })
  },
})
"
PokéAPI,https://pokeapi.co/api/v2/pokemon/ditto,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pokeapi: {
      type: ""app"",
      app: ""pokeapi"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pokeapi.co/api/v2/pokemon/ditto`,
    })
  },
})
"
PandaDoc,https://api.pandadoc.com/public/v1/forms,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pandadoc: {
      type: ""app"",
      app: ""pandadoc"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pandadoc.com/public/v1/forms`,
      headers: {
        Authorization: `Bearer ${this.pandadoc.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Ramp,https://api.ramp.com/developer/v1/business,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ramp: {
      type: ""app"",
      app: ""ramp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ramp.com/developer/v1/business`,
      headers: {
        Authorization: `Bearer ${this.ramp.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Accelo,https://{{custom_fields.hostname}}.api.accelo.com/api/v0/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    accelo: {
      type: ""app"",
      app: ""accelo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.accelo.$auth.hostname}.api.accelo.com/api/v0/user`,
      headers: {
        Authorization: `Bearer ${this.accelo.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Threads,https://trythreads.com/api/public/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    threads: {
      type: ""app"",
      app: ""threads"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://trythreads.com/api/public/ping`,
      headers: {
        Authorization: `Bearer ${this.threads.$auth.api_key}`,
      },
    })
  },
})
"
Statuspage,https://api.statuspage.io/v1/pages,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    statuspage: {
      type: ""app"",
      app: ""statuspage"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.statuspage.io/v1/pages`,
      headers: {
        ""Authorization"": `OAuth ${this.statuspage.$auth.api_key}`,
      },
    })
  },
})
"
Process Street,https://public-api.process.st/checklists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    process_street: {
      type: ""app"",
      app: ""process_street"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://public-api.process.st/checklists`,
      headers: {
        ""X-API-KEY"": `${this.process_street.$auth.api_key}`,
      },
    })
  },
})
"
Danny - Test,https://api.twilio.com/2010-04-01/Accounts/{{custom_fields.accountSid}}.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    danny_twilio_test: {
      type: ""app"",
      app: ""danny_twilio_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.twilio.com/2010-04-01/Accounts/${this.danny_twilio_test.$auth.accountSid}.json`,
      auth: {
        username: `${this.danny_twilio_test.$auth.accountSid}`,
        password: `${this.danny_twilio_test.$auth.authToken}`,
      },
    })
  },
})
"
Danny test -- Peloton,https://api.onepeloton.com/auth/login,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    danny_test_peloton: {
      type: ""app"",
      app: ""danny_test_peloton"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""username_or_email"": `${this.danny_test_peloton.$auth.username_or_email}`,
      ""password"": `${this.danny_test_peloton.$auth.password}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.onepeloton.com/auth/login`,
      data,
    })
  },
})
"
Tilda,http://api.tildacdn.info/v1/getprojectslist/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tilda: {
      type: ""app"",
      app: ""tilda"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.tildacdn.info/v1/getprojectslist/`,
      params: {
        publickey: `${this.tilda.$auth.public_key}`,
        secretkey: `${this.tilda.$auth.secret_key}`,
      },
    })
  },
})
"
Freshstatus,https://public-api.freshstatus.io/api/v1/services/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freshstatus: {
      type: ""app"",
      app: ""freshstatus"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://public-api.freshstatus.io/api/v1/services/`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.freshstatus.$auth.username}`,
        password: `${this.freshstatus.$auth.subdomain}`,
      },
    })
  },
})
"
Generated Photos,https://api.generated.photos/api/v1/faces?per_page=1,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    generated_photos: {
      type: ""app"",
      app: ""generated_photos"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.generated.photos/api/v1/faces?per_page=1`,
      params: {
        api_key: `${this.generated_photos.$auth.api_key}`,
      },
    })
  },
})
"
tjtestoldnameslug,https://example.com/tj-test4,"export default defineComponent({
  props: {
    tjtestnewnameslug: {
      type: ""app"",
      app: ""tjtestnewnameslug"",
    }
  },
  async run({steps, $}) {
    puts 'hello world!!!!hi'
  },
})
"
Aidaform,https://api.aidaform.com/v1/forms,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    aidaform: {
      type: ""app"",
      app: ""aidaform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.aidaform.com/v1/forms`,
      headers: {
        Authorization: `Bearer ${this.aidaform.$auth.api_key}`,
      },
      params: {
        accept: `application/json`,
      },
    })
  },
})
"
Gusto,{{custom_fields.environment}}/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gusto: {
      type: ""app"",
      app: ""gusto"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.gusto.$auth.environment}/v1/me`,
      headers: {
        Authorization: `Bearer ${this.gusto.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Tumblr,https://api.tumblr.com/v2/blog/good.tumblr.com/info,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tumblr: {
      type: ""app"",
      app: ""tumblr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.tumblr.com/v2/blog/good.tumblr.com/info`,
      params: {
        api_key: `${this.tumblr.$auth.api_key}`,
      },
    })
  },
})
"
Brex (Staging),https://platform.staging.brexapps.com/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    brex_staging: {
      type: ""app"",
      app: ""brex_staging"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://platform.staging.brexapps.com/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.brex_staging.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Jotform-Test,http://api.jotform.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jotform_test: {
      type: ""app"",
      app: ""jotform_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://${this.jotform_test.$auth.region && this.jotform_test.$auth.region === ""eu"" ? ""eu-api"" : ""api""}.jotform.com/user`,
      params: {
        apiKey: `${this.jotform_test.$auth.api_key}`,
      },
    })
  },
})
"
Bridge,https://api.bridgeapi.io/v2/banks,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bridge: {
      type: ""app"",
      app: ""bridge"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bridgeapi.io/v2/banks`,
      headers: {
        ""Client-Id"": `${this.bridge.$auth.client_id}`,
        ""Client-Secret"": `${this.bridge.$auth.client_secret}`,
        ""Bridge-Version"": `2021-06-01`,
      },
    })
  },
})
"
Padlet,https://www.padlet.com/api/0.9/users/public_profile.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    padlet: {
      type: ""app"",
      app: ""padlet"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.padlet.com/api/0.9/users/public_profile.json`,
      headers: {
        ""Content-type"": `application/json`,
        ""App-Id"": `${this.padlet.$auth.app_id}`,
      },
      params: {
        username: `[USERNAME]`,
      },
    })
  },
})
"
Better Proposals,https://api.betterproposals.io/settings/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    better_proposals: {
      type: ""app"",
      app: ""better_proposals"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.betterproposals.io/settings/`,
      headers: {
        ""Bptoken"": `${this.better_proposals.$auth.api_key}`,
      },
    })
  },
})
"
Active Trail,https://webapi.mymarketing.co.il/api/account/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    active_trail: {
      type: ""app"",
      app: ""active_trail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://webapi.mymarketing.co.il/api/account/balance`,
      headers: {
        ""Authorization"": `${this.active_trail.$auth.access_token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
BombBomb,https://api.bombbomb.com/v2/webhooks,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bombbomb: {
      type: ""app"",
      app: ""bombbomb"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bombbomb.com/v2/webhooks`,
      headers: {
        Authorization: `Bearer ${this.bombbomb.$auth.oauth_access_token}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
ChuckNorris.io,https://api.chucknorris.io/jokes/random,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chucknorris: {
      type: ""app"",
      app: ""chucknorris"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.chucknorris.io/jokes/random`,
    })
  },
})
"
Biztera,https://biztera.com/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    biztera: {
      type: ""app"",
      app: ""biztera"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://biztera.com/api/v1/me`,
      headers: {
        Authorization: `Bearer ${this.biztera.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Eversign,https://api.eversign.com/api/business,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    eversign: {
      type: ""app"",
      app: ""eversign"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.eversign.com/api/business`,
      headers: {
        Authorization: `Bearer ${this.eversign.$auth.oauth_access_token}`,
      },
    })
  },
})
"
RapidAPI,https://rapidapi.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rapidapi: {
      type: ""app"",
      app: ""rapidapi"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rapidapi.com`,
    })
  },
})
"
Jotform -- test,https://api.jotform.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jotform_test_two: {
      type: ""app"",
      app: ""jotform_test_two"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.jotform.com/user`,
      params: {
        apiKey: `${this.jotform_test_two.$auth.api_key}`,
      },
    })
  },
})
"
Mailmodo,https://api.mailmodo.com/api/v1/campaigns?type=CONTACT_LIST,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailmodo: {
      type: ""app"",
      app: ""mailmodo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mailmodo.com/api/v1/campaigns?type=CONTACT_LIST`,
      headers: {
        ""Content-Type"": `application/json`,
        ""mmApiKey"": `${this.mailmodo.$auth.api_key}`,
      },
    })
  },
})
"
RescueTime,https://www.rescuetime.com/api/oauth/data,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rescuetime: {
      type: ""app"",
      app: ""rescuetime"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.rescuetime.com/api/oauth/data`,
      params: {
        access_token: `${this.rescuetime.$auth.oauth_access_token}`,
        perspective: `interval`,
        restrict_kind: `productivity`,
        interval: `hour`,
        restrict_begin: `2018-01-01`,
        restrict_end: `2018-01-31`,
        format: `json`,
      },
    })
  },
})
"
Basin,https://usebasin.com/api/v1/submissions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    basin: {
      type: ""app"",
      app: ""basin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://usebasin.com/api/v1/submissions`,
      params: {
        api_token: `${this.basin.$auth.api_key}`,
      },
    })
  },
})
"
Freshping,https://api.freshping.io/api/v1/checks/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freshping: {
      type: ""app"",
      app: ""freshping"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.freshping.io/api/v1/checks/`,
      auth: {
        username: `${this.freshping.$auth.api_key}`,
        password: `${this.freshping.$auth.subdomain}`,
      },
    })
  },
})
"
AeroLeads,https://aeroleads.com/apis/details,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    aeroleads: {
      type: ""app"",
      app: ""aeroleads"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://aeroleads.com/apis/details`,
      params: {
        api_key: `${this.aeroleads.$auth.api_key}`,
        first_name: `pushkar`,
        last_name: `gaikwad`,
        company_url: `inboundio.com`,
      },
    })
  },
})
"
Aha,https://{{custom_fields.subdomain}}.aha.io/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    aha: {
      type: ""app"",
      app: ""aha"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.aha.$auth.subdomain}.aha.io/api/v1/me`,
      headers: {
        Authorization: `Bearer ${this.aha.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Apify,https://api.apify.com/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    apify: {
      type: ""app"",
      app: ""apify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.apify.com/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.apify.$auth.api_token}`,
      },
    })
  },
})
"
Benchmark Email,https://clientapi.benchmarkemail.com/Client/ProfileDetails,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    benchmark_email: {
      type: ""app"",
      app: ""benchmark_email"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://clientapi.benchmarkemail.com/Client/ProfileDetails`,
      headers: {
        ""AuthToken"": `${this.benchmark_email.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
BugHerd,https://www.bugherd.com/api_v2/organization.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bugherd: {
      type: ""app"",
      app: ""bugherd"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.bugherd.com/api_v2/organization.json`,
      auth: {
        username: `${this.bugherd.$auth.api_key}`,
        password: `x`,
      },
    })
  },
})
"
Breeze,https://api.breeze.pm/me.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    breeze: {
      type: ""app"",
      app: ""breeze"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.breeze.pm/me.json`,
      params: {
        api_token: `${this.breeze.$auth.api_token}`,
      },
    })
  },
})
"
Canny,https://canny.io/api/v1/boards/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    canny: {
      type: ""app"",
      app: ""canny"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://canny.io/api/v1/boards/list`,
      params: {
        apiKey: `${this.canny.$auth.api_key}`,
      },
    })
  },
})
"
CastingWords,https://castingwords.com/store/API4/prepay_balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    castingwords: {
      type: ""app"",
      app: ""castingwords"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://castingwords.com/store/API4/prepay_balance`,
      params: {
        api_key: `${this.castingwords.$auth.api_key}`,
      },
    })
  },
})
"
Chatforma,https://api.pro.chatforma.com/public/v1/auth-test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chatforma: {
      type: ""app"",
      app: ""chatforma"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pro.chatforma.com/public/v1/auth-test`,
      params: {
        api_key: `${this.chatforma.$auth.api_key}`,
      },
    })
  },
})
"
chatra,https://app.chatra.io/api/messages/XGDsxHtLppJTJ3vZk,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chatra: {
      type: ""app"",
      app: ""chatra"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.chatra.io/api/messages/XGDsxHtLppJTJ3vZk`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `Chatra.Simple ${this.chatra.$auth.public_key}:${this.chatra.$auth.secret_key}`,
      },
    })
  },
})
"
Cincopa,https://api.cincopa.com/v2/ping.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cincopa: {
      type: ""app"",
      app: ""cincopa"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cincopa.com/v2/ping.json`,
      params: {
        api_token: `${this.cincopa.$auth.api_token}`,
      },
    })
  },
})
"
Cliengo,https://api.cliengo.com/1.0/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cliengo: {
      type: ""app"",
      app: ""cliengo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cliengo.com/1.0/account`,
      params: {
        api_key: `${this.cliengo.$auth.api_key}`,
      },
    })
  },
})
"
ClinchPad,https://www.clinchpad.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clinchpad: {
      type: ""app"",
      app: ""clinchpad"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.clinchpad.com/api/v1/users`,
      auth: {
        username: `api-key`,
        password: `${this.clinchpad.$auth.api_key}`,
      },
    })
  },
})
"
Corsizio,https://api.corsizio.com/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    corsizio: {
      type: ""app"",
      app: ""corsizio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.corsizio.com/v1/account`,
      headers: {
        Authorization: `Bearer ${this.corsizio.$auth.api_secret_key}`,
      },
    })
  },
})
"
Cyberimpact,https://api.cyberimpact.com/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cyberimpact: {
      type: ""app"",
      app: ""cyberimpact"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cyberimpact.com/ping`,
      headers: {
        Authorization: `Bearer ${this.cyberimpact.$auth.api_token}`,
      },
    })
  },
})
"
DataScope,https://www.mydatascope.com/api/external/answers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    datascope: {
      type: ""app"",
      app: ""datascope"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.mydatascope.com/api/external/answers`,
      headers: {
        ""Authorization"": `${this.datascope.$auth.api_key}`,
      },
    })
  },
})
"
Docparser,https://api.docparser.com/v1/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    docparser: {
      type: ""app"",
      app: ""docparser"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.docparser.com/v1/ping`,
      auth: {
        username: `${this.docparser.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Parseur,https://api.parseur.com/parser,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    parseur: {
      type: ""app"",
      app: ""parseur"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.parseur.com/parser`,
      headers: {
        ""Authorization"": `Token ${this.parseur.$auth.api_token}`,
      },
    })
  },
})
"
elmah.io,https://api.elmah.io/v3/logs,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    elmah_io: {
      type: ""app"",
      app: ""elmah_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.elmah.io/v3/logs`,
      params: {
        api_key: `${this.elmah_io.$auth.api_key}`,
      },
    })
  },
})
"
RescueTime2,https://www.rescuetime.com/api/oauth/data,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rescuetime2: {
      type: ""app"",
      app: ""rescuetime2"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.rescuetime.com/api/oauth/data`,
      params: {
        access_token: `${this.rescuetime2.$auth.oauth_access_token}`,
        perspective: `interval`,
        restrict_kind: `productivity`,
        interval: `hour`,
        restrict_begin: `2018-01-01`,
        restrict_end: `2018-01-31`,
        format: `json`,
        scopes: `time_data`,
      },
    })
  },
})
"
Eventzilla,https://www.eventzillaapi.net/api/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    eventzilla: {
      type: ""app"",
      app: ""eventzilla"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.eventzillaapi.net/api/v2/users`,
      headers: {
        ""x-api-key"": `${this.eventzilla.$auth.api_key}`,
      },
    })
  },
})
"
Everhour,https://api.everhour.com/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    everhour: {
      type: ""app"",
      app: ""everhour"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.everhour.com/users/me`,
      headers: {
        ""Content-Type"": `application/json`,
        ""X-Api-Key"": `${this.everhour.$auth.api_token}`,
      },
    })
  },
})
"
Feedier,https://api.feedier.com/v1/carriers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    feedier: {
      type: ""app"",
      app: ""feedier"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.feedier.com/v1/carriers`,
      headers: {
        Authorization: `Bearer ${this.feedier.$auth.api_private_key}`,
        ""Accept"": `application/json`,
        ""Cache-Control"": `no-cache`,
      },
    })
  },
})
"
Focuster,https://next.focuster.com/api/v1/actions.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    focuster: {
      type: ""app"",
      app: ""focuster"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://next.focuster.com/api/v1/actions.json`,
      params: {
        api_key: `${this.focuster.$auth.api_key}`,
      },
    })
  },
})
"
Follow Up Boss,https://api.followupboss.com/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    follow_up_boss: {
      type: ""app"",
      app: ""follow_up_boss"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.followupboss.com/v1/me`,
      auth: {
        username: `${this.follow_up_boss.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Followup,https://api.followup.cc/v1/reminders.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    followup: {
      type: ""app"",
      app: ""followup"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.followup.cc/v1/reminders.json`,
      params: {
        api_key: `${this.followup.$auth.api_key}`,
      },
    })
  },
})
"
Formcarry,https://formcarry.com/api/form/{{form_id}}/submissions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    formcarry: {
      type: ""app"",
      app: ""formcarry"",
    },
    form_id: {
      type: ""string"",
      label: ""Form ID"",
      description: `Paste the ID of the form you'd like to access.`
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://formcarry.com/api/form/${this.form_id}/submissions`,
      params: {
        api_key: `${this.formcarry.$auth.api_key}`,
      },
    })
  },
})"
FraudLabs Pro,https://api.fraudlabspro.com/v1/order/screen,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fraudlabs_pro: {
      type: ""app"",
      app: ""fraudlabs_pro"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.fraudlabspro.com/v1/order/screen`,
      params: {
        key: `${this.fraudlabs_pro.$auth.api_key}`,
        ip: `[ip_address]`,
      },
    })
  },
})
"
E-goi,https://api.egoiapp.com/my-account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    e_goi: {
      type: ""app"",
      app: ""e_goi"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.egoiapp.com/my-account`,
      headers: {
        ""Apikey"": `${this.e_goi.$auth.api_key}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
GoSquared,https://api.gosquared.com/account/v1/sites,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gosquared: {
      type: ""app"",
      app: ""gosquared"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.gosquared.com/account/v1/sites`,
      params: {
        api_key: `${this.gosquared.$auth.api_key}`,
      },
    })
  },
})
"
HappyFox Chat,https://api.happyfoxchat.com/v1/agents,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    happyfox_chat: {
      type: ""app"",
      app: ""happyfox_chat"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.happyfoxchat.com/v1/agents`,
      headers: {
        Authorization: `Bearer ${this.happyfox_chat.$auth.api_token}`,
      },
    })
  },
})
"
HotspotSystem,https://api.hotspotsystem.com/v2.0/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hotspotsystem: {
      type: ""app"",
      app: ""hotspotsystem"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.hotspotsystem.com/v2.0/me`,
      headers: {
        ""sn-apikey"": `${this.hotspotsystem.$auth.api_key}`,
      },
    })
  },
})
"
Iterate,https://iteratehq.com/api/v1/surveys,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    iterate: {
      type: ""app"",
      app: ""iterate"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://iteratehq.com/api/v1/surveys`,
      params: {
        access_token: `${this.iterate.$auth.api_key}`,
      },
    })
  },
})
"
JVZoo,https://api.jvzoo.com/v2.0,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jvzoo: {
      type: ""app"",
      app: ""jvzoo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.jvzoo.com/v2.0`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.jvzoo.$auth.api_key}`,
        password: `x`,
      },
    })
  },
})
"
KanbanFlow,https://kanbanflow.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    kanbanflow: {
      type: ""app"",
      app: ""kanbanflow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://kanbanflow.com/api/v1/users`,
      params: {
        apiToken: `${this.kanbanflow.$auth.api_token}`,
      },
    })
  },
})
"
Landbot,https://api.landbot.io/v1/agents/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    landbot: {
      type: ""app"",
      app: ""landbot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.landbot.io/v1/agents/`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `Token ${this.landbot.$auth.api_token}`,
      },
    })
  },
})
"
Amara,https://amara.org/api/users/teams/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amara: {
      type: ""app"",
      app: ""amara"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://amara.org/api/users/teams/`,
      headers: {
        ""X-api-key"": `${this.amara.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
OCRSpace,https://api.ocr.space/parse/imageurl,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ocrspace: {
      type: ""app"",
      app: ""ocrspace"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ocr.space/parse/imageurl`,
      params: {
        apikey: `${this.ocrspace.$auth.apikey}`,
        url: `image_url_goes_here`,
      },
    })
  },
})
"
Leadfeeder,https://api.leadfeeder.com/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    leadfeeder: {
      type: ""app"",
      app: ""leadfeeder"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.leadfeeder.com/accounts`,
      headers: {
        ""Authorization"": `Token ${this.leadfeeder.$auth.api_token}`,
      },
    })
  },
})
"
LIME Go,https://api.lime-go.com/v1/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lime_go: {
      type: ""app"",
      app: ""lime_go"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lime-go.com/v1/ping`,
      headers: {
        ""Authorization"": `go-api: ${this.lime_go.$auth.api_key}`,
      },
    })
  },
})
"
eSignatures.io,https://esignatures.io/api/contracts/contract_id_goes_here,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    esignatures_io: {
      type: ""app"",
      app: ""esignatures_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://esignatures.io/api/contracts/contract_id_goes_here`,
      auth: {
        username: `${this.esignatures_io.$auth.api_token}`,
        password: ``,
      },
    })
  },
})
"
Magnetic,https://app.magnetichq.com/Magnetic/rest/coreAPI/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    magnetic: {
      type: ""app"",
      app: ""magnetic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.magnetichq.com/Magnetic/rest/coreAPI/users`,
      params: {
        token: `${this.magnetic.$auth.token}`,
      },
    })
  },
})
"
ServiceM8,https://api.servicem8.com/api_1.0/staff.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    servicem8: {
      type: ""app"",
      app: ""servicem8"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.servicem8.com/api_1.0/staff.json`,
      headers: {
        Authorization: `Bearer ${this.servicem8.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Megaventory,https://api.megaventory.com/v2017a/json/reply/ProductGet?APIKEY={{custom_fields.api_key}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    megaventory: {
      type: ""app"",
      app: ""megaventory"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.megaventory.com/v2017a/json/reply/ProductGet?APIKEY=${this.megaventory.$auth.api_key}`,
      headers: {
        ""Authorization"": `Token token=${this.megaventory.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Mojo Helpdesk,https://app.mojohelpdesk.com/api/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mojo_helpdesk: {
      type: ""app"",
      app: ""mojo_helpdesk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.mojohelpdesk.com/api/v2/users`,
      params: {
        access_key: `${this.mojo_helpdesk.$auth.access_key}`,
      },
    })
  },
})
"
MoonClerk,https://api.moonclerk.com/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    moonclerk: {
      type: ""app"",
      app: ""moonclerk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.moonclerk.com/customers`,
      headers: {
        ""Authorization"": `Token token=${this.moonclerk.$auth.api_key}`,
        ""Accept"": `application/vnd.moonclerk+json;version=1`,
      },
    })
  },
})
"
Moskit,https://api.moskitcrm.com/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    moskit: {
      type: ""app"",
      app: ""moskit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.moskitcrm.com/v2/users`,
      headers: {
        ""apikey"": `${this.moskit.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
FreeAgent,https://api.freeagent.com/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freeagent: {
      type: ""app"",
      app: ""freeagent"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.freeagent.com/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.freeagent.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Totango,https://api.totango.com/api/v1/search/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    totango: {
      type: ""app"",
      app: ""totango"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `{""terms"":[],""count"":1000,""offset"":0,""fields"":[],""scope"":""all""}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.totango.com/api/v1/search/users`,
      headers: {
        ""app-token"": `${this.totango.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Nicereply,https://api.nicereply.com/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nicereply: {
      type: ""app"",
      app: ""nicereply"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.nicereply.com/v1/users`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: ``,
        password: `${this.nicereply.$auth.private_key}`,
      },
    })
  },
})
"
Noticeable,https://api.noticeable.io/graphql,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    noticeable: {
      type: ""app"",
      app: ""noticeable"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.noticeable.io/graphql`,
      headers: {
        ""Authorization"": `Apikey ${this.noticeable.$auth.api_key}`,
      },
      params: {
        //Replace the query below with your own
        query: `query { organization { projects(first: 10) { pageInfo { hasNextPage } edges {
             node { name posts(last: 10) { edges { node { title permalink } } } } } } } }`,
      },
    })
  },
})
"
Pivotal Tracker,https://www.pivotaltracker.com/services/v5/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pivotal_tracker: {
      type: ""app"",
      app: ""pivotal_tracker"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.pivotaltracker.com/services/v5/me`,
      headers: {
        ""X-TrackerToken"": `${this.pivotal_tracker.$auth.api_token}`,
      },
    })
  },
})
"
Planyo Online Booking,https://www.planyo.com/rest/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    planyo_online_booking: {
      type: ""app"",
      app: ""planyo_online_booking"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.planyo.com/rest/`,
      params: {
        method: `get_site_info`,
        api_key: `${this.planyo_online_booking.$auth.api_key}`,
      },
    })
  },
})
"
Pointagram,https://app.pointagram.com/server/externalapi.php/list_players,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pointagram: {
      type: ""app"",
      app: ""pointagram"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.pointagram.com/server/externalapi.php/list_players`,
      headers: {
        ""api_key"": `${this.pointagram.$auth.api_key}`,
        ""api_user"": `${this.pointagram.$auth.api_user}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
bit.io,https://api.bit.io/api/v1beta/repos,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bit_io: {
      type: ""app"",
      app: ""bit_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bit.io/api/v1beta/repos`,
      headers: {
        Authorization: `Bearer ${this.bit_io.$auth.api_key}`,
      },
    })
  },
})
"
PDF.co,https://api.pdf.co/v1/account/credit/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pdf_co: {
      type: ""app"",
      app: ""pdf_co"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pdf.co/v1/account/credit/balance`,
      headers: {
        ""x-api-key"": `${this.pdf_co.$auth.api_key}`,
      },
    })
  },
})
"
PractiTest,https://api.practitest.com/api/v2/users.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    practitest: {
      type: ""app"",
      app: ""practitest"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.practitest.com/api/v2/users.json`,
      auth: {
        username: `any`,
        password: `${this.practitest.$auth.api_token}`,
      },
    })
  },
})
"
ProdPad,https://api.prodpad.com/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    prodpad: {
      type: ""app"",
      app: ""prodpad"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.prodpad.com/v1/users`,
      headers: {
        Authorization: `Bearer ${this.prodpad.$auth.api_key}`,
      },
    })
  },
})
"
Raven Tools,https://api.raventools.com/api,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    raven_tools: {
      type: ""app"",
      app: ""raven_tools"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.raventools.com/api`,
      params: {
        key: `${this.raven_tools.$auth.api_key}`,
        method: `profile_info`,
        format: `json`,
      },
    })
  },
})
"
RepairShopr,https://{{custom_fields.subdomain}}.repairshopr.com/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    repairshopr: {
      type: ""app"",
      app: ""repairshopr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.repairshopr.$auth.subdomain}.repairshopr.com/api/v1/me`,
      auth: {
        username: ``,
        password: ``,
      },
      params: {
        api_key: `${this.repairshopr.$auth.api_key}`,
      },
    })
  },
})
"
Rev,https://www.rev.com/api/v1/orders,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rev: {
      type: ""app"",
      app: ""rev"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.rev.com/api/v1/orders`,
      headers: {
        ""Authorization"": `Rev ${this.rev.$auth.client_api_key}:${this.rev.$auth.user_api_key}`,
      },
    })
  },
})
"
Riddle Quiz Maker,https://www.riddle.com/api/v2/riddle/get/types,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    riddle_quiz_maker: {
      type: ""app"",
      app: ""riddle_quiz_maker"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.riddle.com/api/v2/riddle/get/types`,
      headers: {
        ""Authorization"": `Bearer ${this.riddle_quiz_maker.$auth.api_token}`,
        ""Key"": `${this.riddle_quiz_maker.$auth.api_key}`,
      },
    })
  },
})
"
Roll,https://api.rollhq.com/graphql,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    roll: {
      type: ""app"",
      app: ""roll"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rollhq.com/graphql`,
      headers: {
        Authorization: `Bearer ${this.roll.$auth.api_access_token}`,
      },
      params: {
        query: `query{
      project {ProjectId ProjectTitle}
    }`,
      },
    })
  },
})
"
Salesflare,https://api.salesflare.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    salesflare: {
      type: ""app"",
      app: ""salesflare"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.salesflare.com/me`,
      headers: {
        Authorization: `Bearer ${this.salesflare.$auth.api_key}`,
      },
    })
  },
})
"
Sendicate,https://api.sendicate.net/v1/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendicate: {
      type: ""app"",
      app: ""sendicate"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sendicate.net/v1/lists`,
      headers: {
        ""Authorization"": `token ${this.sendicate.$auth.api_token}`,
        ""Content-Type"": `application/json`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Sendloop,https://{{custom_fields.account}}.sendloop.com/api/v3/Account.Info.Get/json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendloop: {
      type: ""app"",
      app: ""sendloop"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""APIKey"": `${this.sendloop.$auth.api_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.sendloop.$auth.account}.sendloop.com/api/v3/Account.Info.Get/json`,
      data,
    })
  },
})
"
shipcloud,https://api.shipcloud.io/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shipcloud: {
      type: ""app"",
      app: ""shipcloud"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.shipcloud.io/v1/me`,
      auth: {
        username: `${this.shipcloud.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Simplesat,https://api.simplesat.io/api/answers/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    simplesat: {
      type: ""app"",
      app: ""simplesat"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.simplesat.io/api/answers/`,
      headers: {
        ""X-Simplesat-Token"": `${this.simplesat.$auth.api_key}`,
      },
    })
  },
})
"
Smoove,https://rest.smoove.io/v1/Lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smoove: {
      type: ""app"",
      app: ""smoove"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.smoove.io/v1/Lists`,
      headers: {
        Authorization: `Bearer ${this.smoove.$auth.api_key}`,
      },
    })
  },
})
"
Snappy,https://app.besnappy.com/api/v1/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    snappy: {
      type: ""app"",
      app: ""snappy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.besnappy.com/api/v1/accounts`,
      auth: {
        username: `${this.snappy.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Stormboard,https://api.stormboard.com/users/test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    stormboard: {
      type: ""app"",
      app: ""stormboard"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.stormboard.com/users/test`,
      headers: {
        ""X-API-Key"": `${this.stormboard.$auth.api_key}`,
      },
    })
  },
})
"
Streak,https://www.streak.com/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    streak: {
      type: ""app"",
      app: ""streak"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.streak.com/api/v1/users/me`,
      auth: {
        username: `${this.streak.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Surveybot,https://surveybot.io/api/v1/surveys,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    surveybot: {
      type: ""app"",
      app: ""surveybot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://surveybot.io/api/v1/surveys`,
      headers: {
        ""X-Api-Key"": `${this.surveybot.$auth.api_key}`,
      },
    })
  },
})
"
Akeneo,https://{{custom_fields.host}}/api/rest/v1,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    akeneo: {
      type: ""app"",
      app: ""akeneo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.akeneo.$auth.host}/api/rest/v1`,
      headers: {
        Authorization: `Bearer ${this.akeneo.$auth.oauth_access_token}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
ChannelAdvisor,https://api.channeladvisor.com/oauth2/identity,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    channeladvisor: {
      type: ""app"",
      app: ""channeladvisor"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.channeladvisor.com/oauth2/identity`,
      headers: {
        Authorization: `Bearer ${this.channeladvisor.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Confection,https://transmission.confection.io/{{custom_fields.account_id}}/account/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    confection: {
      type: ""app"",
      app: ""confection"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""key"": `${this.confection.$auth.secret_key}`,
    }
    return await axios($, {
      url: `https://transmission.confection.io/${this.confection.$auth.account_id}/account/`,
      data,
    })
  },
})
"
Teamgate,https://api.teamgate.com/v4/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    teamgate: {
      type: ""app"",
      app: ""teamgate"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.teamgate.com/v4/users`,
      headers: {
        ""X-App-Key"": `${this.teamgate.$auth.app_key}`,
        ""X-Auth-Token"": `${this.teamgate.$auth.auth_token}`,
      },
    })
  },
})
"
Temi,https://api.temi.com/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    temi: {
      type: ""app"",
      app: ""temi"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.temi.com/v1/account`,
      headers: {
        Authorization: `Bearer ${this.temi.$auth.api_key}`,
      },
    })
  },
})
"
TextIt,https://textit.in/api/v2/org.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    textit: {
      type: ""app"",
      app: ""textit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://textit.in/api/v2/org.json`,
      headers: {
        ""Authorization"": `Token ${this.textit.$auth.api_key}`,
      },
    })
  },
})
"
TimeCamp,https://www.timecamp.com/third_party/api/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    timecamp: {
      type: ""app"",
      app: ""timecamp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.timecamp.com/third_party/api/me`,
      headers: {
        ""Authorization"": `${this.timecamp.$auth.api_token}`,
      },
    })
  },
})
"
Timekit,https://api.timekit.io/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    timekit: {
      type: ""app"",
      app: ""timekit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.timekit.io/v2/users`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: ``,
        password: `${this.timekit.$auth.api_key}`,
      },
    })
  },
})
"
TransForm,https://transform.alphasoftware.com/transformAPIVersion1.a5svc/getUsersInTransformAccount,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    transform: {
      type: ""app"",
      app: ""transform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://transform.alphasoftware.com/transformAPIVersion1.a5svc/getUsersInTransformAccount`,
      headers: {
        ""apikey"": `${this.transform.$auth.api_key}`,
      },
    })
  },
})
"
Unisender,https://api.unisender.com/en/api/getUserInfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    unisender: {
      type: ""app"",
      app: ""unisender"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.unisender.com/en/api/getUserInfo`,
      params: {
        format: `json`,
        api_key: `${this.unisender.$auth.api_key}`,
      },
    })
  },
})
"
CloudBees,https://x-api.rollout.io/public-api/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudbees: {
      type: ""app"",
      app: ""cloudbees"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://x-api.rollout.io/public-api/users`,
      headers: {
        Authorization: `Bearer ${this.cloudbees.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Voodoo SMS,https://api.voodoosms.com/credits,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    voodoo_sms: {
      type: ""app"",
      app: ""voodoo_sms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.voodoosms.com/credits`,
      headers: {
        Authorization: `Bearer ${this.voodoo_sms.$auth.api_key}`,
      },
    })
  },
})
"
WaiverForever,https://api.waiverforever.com/openapi/v1/auth/userInfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    waiverforever: {
      type: ""app"",
      app: ""waiverforever"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.waiverforever.com/openapi/v1/auth/userInfo`,
      headers: {
        ""X-API-Key"": `${this.waiverforever.$auth.api_key}`,
      },
    })
  },
})
"
WebinarGeek,https://app.webinargeek.com/api/v2/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    webinargeek: {
      type: ""app"",
      app: ""webinargeek"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.webinargeek.com/api/v2/account`,
      headers: {
        ""Api-Token"": `${this.webinargeek.$auth.api_key}`,
      },
    })
  },
})
"
HTML/CSS to Image,https://hcti.io/v1/image,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    html_css_to_image: {
      type: ""app"",
      app: ""html_css_to_image"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""url"": `https://google.com`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://hcti.io/v1/image`,
      auth: {
        username: `${this.html_css_to_image.$auth.user_id}`,
        password: `${this.html_css_to_image.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Visitor Queue,https://www.visitorqueue.com/api/v1/ga_views,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    visitor_queue: {
      type: ""app"",
      app: ""visitor_queue"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.visitorqueue.com/api/v1/ga_views`,
      headers: {
        ""Authorization"": `Token ${this.visitor_queue.$auth.api_key}`,
      },
    })
  },
})
"
VoilaNorbert,https://api.voilanorbert.com/2018-01-08/account/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    voilanorbert: {
      type: ""app"",
      app: ""voilanorbert"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.voilanorbert.com/2018-01-08/account/`,
      auth: {
        username: ``,
        password: `${this.voilanorbert.$auth.api_key}`,
      },
    })
  },
})
"
WisePops,https://app.wisepops.com/api2/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wisepops: {
      type: ""app"",
      app: ""wisepops"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.wisepops.com/api2/contacts`,
      headers: {
        ""Authorization"": `WISEPOPS-API key=""${this.wisepops.$auth.api_key}""`,
      },
    })
  },
})
"
Wistia,https://api.wistia.com/v1/account.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wistia: {
      type: ""app"",
      app: ""wistia"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.wistia.com/v1/account.json`,
      auth: {
        username: `api`,
        password: `${this.wistia.$auth.api_token}`,
      },
    })
  },
})
"
Woodpecker.co,https://api.woodpecker.co/rest/v1/campaign_list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    woodpecker_co: {
      type: ""app"",
      app: ""woodpecker_co"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.woodpecker.co/rest/v1/campaign_list`,
      auth: {
        username: `${this.woodpecker_co.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Workbooks CRM,https://secure.workbooks.com/activity/tasks.api,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    workbooks_crm: {
      type: ""app"",
      app: ""workbooks_crm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://secure.workbooks.com/activity/tasks.api`,
      headers: {
        ""Cookie"": `Workbooks-Session=${this.workbooks_crm.$auth.session_id}`,
      },
    })
  },
})
"
Workstack,https://app.workstack.io/api/team,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    workstack: {
      type: ""app"",
      app: ""workstack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.workstack.io/api/team`,
      headers: {
        ""Accept"": `application/json`,
      },
      params: {
        api_token: `${this.workstack.$auth.api_token}`,
      },
    })
  },
})
"
Yanado,https://api.yanado.com/public-api/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    yanado: {
      type: ""app"",
      app: ""yanado"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.yanado.com/public-api/users`,
      headers: {
        ""X-API-Key"": `${this.yanado.$auth.api_key}`,
      },
    })
  },
})
"
YouCanBook.Me,https://api.youcanbook.me/v1/{{custom_fields.account_id}}/profiles,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    youcanbook_me: {
      type: ""app"",
      app: ""youcanbook_me"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.youcanbook.me/v1/${this.youcanbook_me.$auth.account_id}/profiles`,
      auth: {
        username: `${this.youcanbook_me.$auth.username}`,
        password: `${this.youcanbook_me.$auth.api_key}`,
      },
    })
  },
})
"
Zonka Feedback,https://apis.zonkafeedback.com/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zonka_feedback: {
      type: ""app"",
      app: ""zonka_feedback"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apis.zonkafeedback.com/users`,
      headers: {
        ""Z-API-TOKEN"": `${this.zonka_feedback.$auth.auth_token}`,
      },
    })
  },
})
"
quentn,https://{{custom_fields.system_id}}.{{custom_fields.server_id}}.quentn.com/public/api/V1/terms,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    quentn: {
      type: ""app"",
      app: ""quentn"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.quentn.$auth.system_id}.${this.quentn.$auth.server_id}.quentn.com/public/api/V1/terms`,
      headers: {
        Authorization: `Bearer ${this.quentn.$auth.api_key}`,
      },
    })
  },
})
"
Beekeeper,https://{{custom_fields.subdomain}}.beekeeper.io/api/2/config,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    beekeeper: {
      type: ""app"",
      app: ""beekeeper"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.beekeeper.$auth.subdomain}.beekeeper.io/api/2/config`,
      headers: {
        Authorization: `Bearer ${this.beekeeper.$auth.access_token}`,
      },
    })
  },
})
"
WhatsApp by Online Live Support,https://api.online-live-support.com/api/checkconnection.php?client_id={{custom_fields.client_id}}&instance={{custom_fields.instance_id}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    online_live_support: {
      type: ""app"",
      app: ""online_live_support"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.online-live-support.com/api/checkconnection.php?client_id=${this.online_live_support.$auth.client_id}&instance=${this.online_live_support.$auth.instance_id}`,
    })
  },
})
"
Sifter,https://pdapikey.sifterapp.com/api/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sifter: {
      type: ""app"",
      app: ""sifter"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pdapikey.sifterapp.com/api/projects`,
      headers: {
        ""Accept"": `application/json`,
        ""X-Sifter-Token"": `${this.sifter.$auth.access_key}`,
      },
    })
  },
})
"
Aero Workflow,https://api.aeroworkflow.com/api/{{custom_fields.account_number}}/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    aero_workflow: {
      type: ""app"",
      app: ""aero_workflow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.aeroworkflow.com/api/${this.aero_workflow.$auth.account_number}/me`,
      headers: {
        ""apikey"": `${this.aero_workflow.$auth.api_key}`,
      },
    })
  },
})
"
Sendbird,https://gate.sendbird.com/api/v2/applications,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendbird: {
      type: ""app"",
      app: ""sendbird"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://gate.sendbird.com/api/v2/applications`,
      headers: {
        ""SENDBIRDORGANIZATIONAPITOKEN"": `${this.sendbird.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Papyrs,https://{{custom_fields.site_name}}.papyrs.com/api/v1/people/all/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    papyrs: {
      type: ""app"",
      app: ""papyrs"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.papyrs.$auth.site_name}.papyrs.com/api/v1/people/all/`,
      headers: {
        ""X-Auth-Token"": `${this.papyrs.$auth.api_token}`,
      },
    })
  },
})
"
FogBugz,https://{{custom_fields.your_site}}.fogbugz.com/f/api/0/jsonapi,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fogbugz: {
      type: ""app"",
      app: ""fogbugz"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""cmd"": `listPeople`,
      ""token"": `${this.fogbugz.$auth.api_token}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.fogbugz.$auth.your_site}.fogbugz.com/f/api/0/jsonapi`,
      data,
    })
  },
})
"
Ontraport,https://api.ontraport.com/1/Contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ontraport: {
      type: ""app"",
      app: ""ontraport"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ontraport.com/1/Contacts`,
      headers: {
        ""Api-Key"": `${this.ontraport.$auth.api_key}`,
        ""Api-Appid"": `${this.ontraport.$auth.api_appid}`,
      },
    })
  },
})
"
Donately,https://api.donately.com/v2/people/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    donately: {
      type: ""app"",
      app: ""donately"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.donately.com/v2/people/me`,
      headers: {
        Authorization: `Bearer ${this.donately.$auth.api_token}`,
      },
    })
  },
})
"
Pipeline,https://api.pipelinecrm.com/api/v3/admin/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pipeline: {
      type: ""app"",
      app: ""pipeline"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pipelinecrm.com/api/v3/admin/users`,
      params: {
        api_key: `${this.pipeline.$auth.api_key}`,
      },
    })
  },
})
"
Booqable,https://{{custom_fields.company_slug}}.booqable.com/api/1/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    booqable: {
      type: ""app"",
      app: ""booqable"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.booqable.$auth.company_slug}.booqable.com/api/1/customers`,
      params: {
        api_key: `${this.booqable.$auth.api_key}`,
        page: `1`,
        per: `1`,
      },
    })
  },
})
"
Checkvist,https://checkvist.com/auth/curr_user.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    checkvist: {
      type: ""app"",
      app: ""checkvist"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://checkvist.com/auth/curr_user.json`,
      auth: {
        username: `${this.checkvist.$auth.username}`,
        password: `${this.checkvist.$auth.api_key}`,
      },
    })
  },
})
"
CompanyHub,https://api.companyhub.com/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    companyhub: {
      type: ""app"",
      app: ""companyhub"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.companyhub.com/v1/me`,
      headers: {
        ""Authorization"": `${this.companyhub.$auth.subdomain} ${this.companyhub.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Freshservice,https://{{custom_fields.domain}}.freshservice.com/api/v2/tickets,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freshservice: {
      type: ""app"",
      app: ""freshservice"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.freshservice.$auth.domain}.freshservice.com/api/v2/tickets`,
      auth: {
        username: `${this.freshservice.$auth.api_key}`,
        password: `X`,
      },
    })
  },
})
"
Hiveage,https://{{custom_fields.subdomain}}.hiveage.com/api/network,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hiveage: {
      type: ""app"",
      app: ""hiveage"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.hiveage.$auth.subdomain}.hiveage.com/api/network`,
      auth: {
        username: `${this.hiveage.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
noCRM.io,https://{{custom_fields.subdomain}}.nocrm.io/api/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nocrm_io: {
      type: ""app"",
      app: ""nocrm_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.nocrm_io.$auth.subdomain}.nocrm.io/api/v2/users`,
      headers: {
        ""X-API-KEY"": `${this.nocrm_io.$auth.api_key}`,
      },
    })
  },
})
"
Nordigen,https://ob.nordigen.com/api/v2/institutions/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nordigen: {
      type: ""app"",
      app: ""nordigen"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ob.nordigen.com/api/v2/institutions/`,
      headers: {
        Authorization: `Bearer ${this.nordigen.$auth.oauth_access_token}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Speak2Leads,https://s2l.speak2leads.com/main/ingestor/process,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    speak2leads: {
      type: ""app"",
      app: ""speak2leads"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""AccountID"": `${this.speak2leads.$auth.account_id}`,
      ""firstName"": `Serge`,
      ""Phone"": `+526691514947`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://s2l.speak2leads.com/main/ingestor/process`,
      headers: {
        ""Content-Type"": `application/x-www-form-urlencoded`,
      },
      auth: {
        username: `${this.speak2leads.$auth.username}`,
        password: `${this.speak2leads.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Statuscake,https://api.statuscake.com/v1/contact-groups,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    statuscake: {
      type: ""app"",
      app: ""statuscake"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.statuscake.com/v1/contact-groups`,
      headers: {
        Authorization: `Bearer ${this.statuscake.$auth.api_key}`,
      },
    })
  },
})
"
Kanbanize,https://{{custom_fields.subdomain}}.kanbanize.com/api/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    kanbanize: {
      type: ""app"",
      app: ""kanbanize"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.kanbanize.$auth.subdomain}.kanbanize.com/api/v2/users`,
      headers: {
        ""apikey"": `${this.kanbanize.$auth.api_key}`,
      },
    })
  },
})
"
Range,https://api.range.co/v1/users/auth-user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    range: {
      type: ""app"",
      app: ""range"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.range.co/v1/users/auth-user`,
      headers: {
        Authorization: `Bearer ${this.range.$auth.oauth_access_token}`,
        ""X-Range-App-ID"": `AA0BFrfWOpGg8rTpgQAB`,
        ""X-Range-Client"": `pipedream/1`,
      },
    })
  },
})
"
NetHunt CRM,https://nethunt.com/api/v1/zapier/triggers/readable-folder,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nethunt_crm: {
      type: ""app"",
      app: ""nethunt_crm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://nethunt.com/api/v1/zapier/triggers/readable-folder`,
      auth: {
        username: `${this.nethunt_crm.$auth.email_address}`,
        password: `${this.nethunt_crm.$auth.api_key}`,
      },
    })
  },
})
"
Docusign -- Danny Test,https:///{{custom_fields.environment}}/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    docusign_danny_test: {
      type: ""app"",
      app: ""docusign_danny_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https:///${this.docusign_danny_test.$auth.environment}/userinfo`,
      headers: {
        Authorization: `Bearer ${this.docusign_danny_test.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SurveyMethods,https://api.surveymethods.com/v1/{{custom_fields.login_id}}/{{custom_fields.api_key}}/users/details,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    surveymethods: {
      type: ""app"",
      app: ""surveymethods"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.surveymethods.com/v1/${this.surveymethods.$auth.login_id}/${this.surveymethods.$auth.api_key}/users/details`,
      headers: {
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
EngageBay,https://app.engagebay.com/dev/api/panel/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    engagebay: {
      type: ""app"",
      app: ""engagebay"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.engagebay.com/dev/api/panel/users`,
      headers: {
        ""Authorization"": `${this.engagebay.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Agile CRM,https://{{custom_fields.domain}}.agilecrm.com/dev/api/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    agile_crm: {
      type: ""app"",
      app: ""agile_crm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.agile_crm.$auth.domain}.agilecrm.com/dev/api/contacts`,
      auth: {
        username: `${this.agile_crm.$auth.username}`,
        password: `${this.agile_crm.$auth.api_key}`,
      },
    })
  },
})
"
Docusign Developer,https://account-d.docusign.com/oauth/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    docusign_developer: {
      type: ""app"",
      app: ""docusign_developer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://account-d.docusign.com/oauth/userinfo`,
      headers: {
        Authorization: `Bearer ${this.docusign_developer.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Pipeliner CRM,https://{{custom_fields.region}}.pipelinersales.com/api/v100/rest/spaces/{{custom_fields.space_id}}/entities/Clients,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pipeliner_crm: {
      type: ""app"",
      app: ""pipeliner_crm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.pipeliner_crm.$auth.region}.pipelinersales.com/api/v100/rest/spaces/${this.pipeliner_crm.$auth.space_id}/entities/Clients`,
      auth: {
        username: `${this.pipeliner_crm.$auth.username}`,
        password: `${this.pipeliner_crm.$auth.password}`,
      },
    })
  },
})
"
Phaxio,https://api.phaxio.com/v2.1/account/status,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    phaxio: {
      type: ""app"",
      app: ""phaxio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.phaxio.com/v2.1/account/status`,
      auth: {
        username: `${this.phaxio.$auth.api_key}`,
        password: `${this.phaxio.$auth.api_secret}`,
      },
    })
  },
})
"
Files.com,https://{{custom_fields.subdomain}}.files.com/api/rest/v1/users.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    files_com: {
      type: ""app"",
      app: ""files_com"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.files_com.$auth.subdomain}.files.com/api/rest/v1/users.json`,
      headers: {
        ""X-FilesAPI-Key"": `${this.files_com.$auth.api_key}`,
      },
    })
  },
})
"
Campayn,https://campayn.com/api/v1/lists.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    campayn: {
      type: ""app"",
      app: ""campayn"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://campayn.com/api/v1/lists.json`,
      headers: {
        ""Authorization"": `TRUEREST apikey=${this.campayn.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Simplero,https://simplero.com/api/v1/lists.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    simplero: {
      type: ""app"",
      app: ""simplero"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://simplero.com/api/v1/lists.json`,
      headers: {
        ""User-Agent"": `${this.simplero.$auth.application_info}`,
      },
      auth: {
        username: `${this.simplero.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Act! 365,https://app.act365.com/act/api/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    act_365: {
      type: ""app"",
      app: ""act_365"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.act365.com/act/api/contacts`,
      auth: {
        username: `${this.act_365.$auth.api_key}`,
        password: `${this.act_365.$auth.developer_key}`,
      },
    })
  },
})
"
UpViral,https://app.upviral.com/api/v1,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    upviral: {
      type: ""app"",
      app: ""upviral"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://app.upviral.com/api/v1`,
      params: {
        uvapikey: `${this.upviral.$auth.api_key}`,
        uvmethod: `lists`,
      },
    })
  },
})
"
BetterVoice,https://api.bettervoice.com/api/v3/account/settings,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bettervoice: {
      type: ""app"",
      app: ""bettervoice"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bettervoice.com/api/v3/account/settings`,
      params: {
        username: `${this.bettervoice.$auth.username}`,
        token: `${this.bettervoice.$auth.api_token}`,
      },
    })
  },
})
"
robly,https://api.robly.com/api/v1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    robly: {
      type: ""app"",
      app: ""robly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.robly.com/api/v1/contacts`,
      params: {
        api_key: `${this.robly.$auth.api_key}`,
        api_id: `${this.robly.$auth.api_id}`,
      },
    })
  },
})
"
WebMerge,https://www.webmerge.me/api/documents,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    webmerge: {
      type: ""app"",
      app: ""webmerge"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.webmerge.me/api/documents`,
      auth: {
        username: `${this.webmerge.$auth.api_key}`,
        password: `${this.webmerge.$auth.api_secret}`,
      },
    })
  },
})
"
Miestro,https://api.miestro.com/api/v1.0/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    miestro: {
      type: ""app"",
      app: ""miestro"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.miestro.com/api/v1.0/users`,
      headers: {
        ""X-Forward-Api-Key"": `${this.miestro.$auth.api_key}`,
        ""X-Forward-Api-Secret"": `${this.miestro.$auth.api_secret}`,
      },
    })
  },
})
"
Occasion,https://app.getoccasion.com/api/v1/merchants,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    occasion: {
      type: ""app"",
      app: ""occasion"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.getoccasion.com/api/v1/merchants`,
      auth: {
        username: `${this.occasion.$auth.api_login}`,
        password: `${this.occasion.$auth.api_secret}`,
      },
    })
  },
})
"
SendOwl,https://www.sendowl.com/api/v1/products,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendowl: {
      type: ""app"",
      app: ""sendowl"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.sendowl.com/api/v1/products`,
      headers: {
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.sendowl.$auth.api_key}`,
        password: `${this.sendowl.$auth.api_secret}`,
      },
    })
  },
})
"
Siteleaf,https://api.siteleaf.com/v2/sites,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    siteleaf: {
      type: ""app"",
      app: ""siteleaf"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.siteleaf.com/v2/sites`,
      auth: {
        username: `${this.siteleaf.$auth.api_key}`,
        password: `${this.siteleaf.$auth.api_secret}`,
      },
    })
  },
})
"
Printavo,https://www.printavo.com/api/v1/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    printavo: {
      type: ""app"",
      app: ""printavo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.printavo.com/api/v1/accounts`,
      params: {
        token: `${this.printavo.$auth.api_token}`,
        email: `${this.printavo.$auth.email}`,
      },
    })
  },
})
"
Ronin,https://{{custom_fields.domain}}.roninapp.com/api/v2/staff,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ronin: {
      type: ""app"",
      app: ""ronin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.ronin.$auth.domain}.roninapp.com/api/v2/staff`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.ronin.$auth.api_token}`,
        password: `${this.ronin.$auth.api_token}`,
      },
    })
  },
})
"
TestMonitor,https://{{custom_fields.domain}}.testmonitor.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    testmonitor: {
      type: ""app"",
      app: ""testmonitor"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.testmonitor.$auth.domain}.testmonitor.com/api/v1/users`,
      headers: {
        Authorization: `Bearer ${this.testmonitor.$auth.api_token}`,
      },
    })
  },
})
"
Kanban Tool,https://{{custom_fields.domain}}.kanbantool.com/api/v3/users/current.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    kanban_tool: {
      type: ""app"",
      app: ""kanban_tool"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.kanban_tool.$auth.domain}.kanbantool.com/api/v3/users/current.json`,
      headers: {
        Authorization: `Bearer ${this.kanban_tool.$auth.api_token}`,
      },
    })
  },
})
"
Lighthouse,https://{{custom_fields.domain}}.lighthouseapp.com/profile.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lighthouse: {
      type: ""app"",
      app: ""lighthouse"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.lighthouse.$auth.domain}.lighthouseapp.com/profile.json`,
      headers: {
        ""X-LighthouseToken"": `${this.lighthouse.$auth.api_token}`,
        ""Content-type"": `application/json`,
      },
    })
  },
})
"
Solve CRM,https://secure.solve360.com/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    solve_crm: {
      type: ""app"",
      app: ""solve_crm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://secure.solve360.com/contacts`,
      auth: {
        username: `${this.solve_crm.$auth.email}`,
        password: `${this.solve_crm.$auth.api_token}`,
      },
    })
  },
})
"
Spondyr,https://client.spondyr.io/api/v1.0.0/TransactionTypes,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    spondyr: {
      type: ""app"",
      app: ""spondyr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://client.spondyr.io/api/v1.0.0/TransactionTypes`,
      params: {
        APIKey: `${this.spondyr.$auth.api_key}`,
        ApplicationToken: `${this.spondyr.$auth.app_token}`,
      },
    })
  },
})
"
Airbrake,https://api.airbrake.io/api/v4/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    airbrake: {
      type: ""app"",
      app: ""airbrake"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.airbrake.io/api/v4/projects`,
      params: {
        key: `${this.airbrake.$auth.api_key}`,
      },
    })
  },
})
"
BambooHR,https://api.bamboohr.com/api/gateway.php/{{custom_fields.company_domain}}/v1/meta/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bamboohr: {
      type: ""app"",
      app: ""bamboohr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bamboohr.com/api/gateway.php/${this.bamboohr.$auth.company_domain}/v1/meta/users`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.bamboohr.$auth.api_key}`,
        password: `x`,
      },
    })
  },
})
"
Project Bubble (ProProfs Project),https://api.projectbubble.com/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    project_bubble: {
      type: ""app"",
      app: ""project_bubble"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.projectbubble.com/v2/user`,
      headers: {
        ""key"": `${this.project_bubble.$auth.api_key}`,
      },
    })
  },
})
"
LiveAgent,https://{{custom_fields.domain}}.ladesk.com/api/v3/agents,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    liveagent: {
      type: ""app"",
      app: ""liveagent"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.liveagent.$auth.domain}.ladesk.com/api/v3/agents`,
      headers: {
        ""apikey"": `${this.liveagent.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Omniconvert,http://api.omniconvert.com/v1/websites,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    omniconvert: {
      type: ""app"",
      app: ""omniconvert"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.omniconvert.com/v1/websites`,
      headers: {
        ""X-Api-User"": `${this.omniconvert.$auth.api_user}`,
        ""X-Api-Key"": `${this.omniconvert.$auth.api_key}`,
      },
    })
  },
})
"
eStreamDesk,https://{{custom_fields.domain}}.estreamdesk.com/api/tickets,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    estreamdesk: {
      type: ""app"",
      app: ""estreamdesk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.estreamdesk.$auth.domain}.estreamdesk.com/api/tickets`,
      headers: {
        ""apiKey"": `${this.estreamdesk.$auth.api_key}`,
      },
    })
  },
})
"
DEAR Inventory,https://inventory.dearsystems.com/externalapi/v2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dear_inventory: {
      type: ""app"",
      app: ""dear_inventory"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://inventory.dearsystems.com/externalapi/v2/me`,
      headers: {
        ""api-auth-accountid"": `${this.dear_inventory.$auth.api_auth_account_id}`,
        ""api-auth-applicationkey"": `${this.dear_inventory.$auth.api_auth_application_key}`,
      },
    })
  },
})
"
Instabot,https://api.instabot.io/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    instabot_chatbot_platform: {
      type: ""app"",
      app: ""instabot_chatbot_platform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.instabot.io/v1/users`,
      headers: {
        ""X-Instabot-Api-Key"": `${this.instabot_chatbot_platform.$auth.api_key}`,
        ""Authorization"": `X-Instabot-Master-Api-Key ${this.instabot_chatbot_platform.$auth.master_api_key}`,
      },
    })
  },
})
"
Bidsketch,https://bidsketch.com/api/v1/clients,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bidsketch: {
      type: ""app"",
      app: ""bidsketch"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://bidsketch.com/api/v1/clients`,
      headers: {
        ""Authorization"": `Token token=${this.bidsketch.$auth.api_token}`,
      },
    })
  },
})
"
ScheduleOnce,https://api.oncehub.com/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    scheduleonce: {
      type: ""app"",
      app: ""scheduleonce"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.oncehub.com/v2/users`,
      headers: {
        ""Content-type"": `application/json`,
        ""API-Key"": `${this.scheduleonce.$auth.api_key}`,
      },
    })
  },
})
"
GatherUp,https://app.gatherup.com/api/v2/user/managers/get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gatherup: {
      type: ""app"",
      app: ""gatherup"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.gatherup.com/api/v2/user/managers/get`,
      headers: {
        Authorization: `Bearer ${this.gatherup.$auth.bearer_token}`,
      },
      params: {
        clientId: `${this.gatherup.$auth.client_id}`,
      },
    })
  },
})
"
123FormBuilder,https://app.123formbuilder.com/api/forms.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    a123formbuilder: {
      type: ""app"",
      app: ""a123formbuilder"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.123formbuilder.com/api/forms.json`,
      params: {
        apiKey: `${this.a123formbuilder.$auth.api_token}`,
      },
    })
  },
})
"
AppDrag,https://{{custom_fields.app_id}}.appdrag.site/api/testfunc,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    appdrag: {
      type: ""app"",
      app: ""appdrag"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""APIKey"": `${this.appdrag.$auth.api_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.appdrag.$auth.app_id}.appdrag.site/api/testfunc`,
      headers: {
        ""Content-Type"": `x-www-form-urlencoded`,
      },
      data,
    })
  },
})
"
Breezy HR,https://api.breezy.hr/v3/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    breezy_hr: {
      type: ""app"",
      app: ""breezy_hr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.breezy.hr/v3/user`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `${this.breezy_hr.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Evenium,https://secure.evenium.com/api/1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    evenium: {
      type: ""app"",
      app: ""evenium"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://secure.evenium.com/api/1/contacts`,
      params: {
        accessToken: `${this.evenium.$auth.access_token}`,
      },
    })
  },
})
"
eTermin,https://www.etermin.net/api/company,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    etermin: {
      type: ""app"",
      app: ""etermin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.etermin.net/api/company`,
      headers: {
        ""publickey"": `${this.etermin.$auth.public_key}`,
        ""salt"": `${this.etermin.$auth.salt}`,
        ""signature"": `${this.etermin.$auth.signature}`,
      },
    })
  },
})
"
eSputnik,https://esputnik.com/api/v1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    esputnik: {
      type: ""app"",
      app: ""esputnik"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://esputnik.com/api/v1/contacts`,
      auth: {
        username: `x`,
        password: `${this.esputnik.$auth.api_key}`,
      },
    })
  },
})
"
HeySummit,https://api.heysummit.com/api/events/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    heysummit: {
      type: ""app"",
      app: ""heysummit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.heysummit.com/api/events/`,
      headers: {
        ""Authorization"": `Token ${this.heysummit.$auth.api_token}`,
      },
    })
  },
})
"
FastField Mobile Forms,https://api.fastfieldforms.com/services/v3/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fastfield_mobile_forms: {
      type: ""app"",
      app: ""fastfield_mobile_forms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.fastfieldforms.com/services/v3/users`,
      headers: {
        ""X-Gatekeeper-SessionToken"": `${this.fastfield_mobile_forms.$auth.session_token}`,
        ""FastField-API-Key"": `${this.fastfield_mobile_forms.$auth.api_key}`,
      },
    }, {
      token: {
        key: this.fastfield_mobile_forms.$auth.oauth_access_token,
        secret: this.fastfield_mobile_forms.$auth.oauth_refresh_token,
      },
      oauthSignerUri: this.fastfield_mobile_forms.$auth.oauth_signer_uri,
    })
  },
})
"
Databox,test,"import Databox from 'databox'

export default defineComponent({ 
  props: {
    databox: {
      type: ""app"",
      app: ""databox"",
    },
  },
  async run({steps, $}) {
    const client = new Databox({
      push_token: `${this.databox.$auth.token}`
    })
    return await new Promise((resolve) => client.metrics((metrics) => resolve(metrics)))
  }
})"
Dacast,https://developer.dacast.com/v2/playlists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dacast: {
      type: ""app"",
      app: ""dacast"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://developer.dacast.com/v2/playlists`,
      headers: {
        ""X-Api-Key"": `${this.dacast.$auth.api_key}`,
        ""X-Format"": `default`,
      },
    })
  },
})
"
OneDesk,https://app.onedesk.com/rest/2.0/organization/getOrgInfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    onedesk: {
      type: ""app"",
      app: ""onedesk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.onedesk.com/rest/2.0/organization/getOrgInfo`,
      params: {
        token: `${this.onedesk.$auth.oauth_access_token}`,
      },
    })
  },
})
"
MarketTime,https://api.reptimeportal.com/reptime/public/api/retailers/export/{{custom_fields.manufacturer_id}}/new,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    markettime: {
      type: ""app"",
      app: ""markettime"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.reptimeportal.com/reptime/public/api/retailers/export/${this.markettime.$auth.manufacturer_id}/new`,
      headers: {
        ""x-api-key"": `${this.markettime.$auth.api_key}`,
      },
    })
  },
})
"
Planview Leankit,https://{{custom_fields.domain}}.leankit.com/io/scim/v1/Users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    planview_leankit: {
      type: ""app"",
      app: ""planview_leankit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.planview_leankit.$auth.domain}.leankit.com/io/scim/v1/Users`,
      auth: {
        username: `${this.planview_leankit.$auth.username}`,
        password: `${this.planview_leankit.$auth.password}`,
      },
    })
  },
})
"
ProWorkflow,https://api.proworkflow.net/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    proworkflow: {
      type: ""app"",
      app: ""proworkflow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.proworkflow.net/me`,
      headers: {
        ""apikey"": `${this.proworkflow.$auth.api_key}`,
      },
      auth: {
        username: `${this.proworkflow.$auth.username}`,
        password: `${this.proworkflow.$auth.password}`,
      },
    })
  },
})
"
UpKeep,https://api.onupkeep.com/api/v2/users/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    upkeep: {
      type: ""app"",
      app: ""upkeep"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.onupkeep.com/api/v2/users/`,
      headers: {
        ""Session-Token"": `${this.upkeep.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Yodiz,https://app.yodiz.com/api/rest/v1/projects?fields=all,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    yodiz: {
      type: ""app"",
      app: ""yodiz"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.yodiz.com/api/rest/v1/projects?fields=all`,
      headers: {
        ""api-key"": `${this.yodiz.$auth.api_key}`,
        ""api-token"": `${this.yodiz.$auth.oauth_access_token}`,
      },
    })
  },
})
"
" UltraMsg",https://api.ultramsg.com/{{custom_fields.instance_id}}/messages/statistics,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ultramsg: {
      type: ""app"",
      app: ""ultramsg"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ultramsg.com/${this.ultramsg.$auth.instance_id}/messages/statistics`,
      headers: {
        ""Content-Type"": `application/x-www-form-urlencoded`,
      },
      params: {
        token: `${this.ultramsg.$auth.token}`,
      },
    })
  },
})
"
CoinLore,https://api.coinlore.net/api/global/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    coinlore: {
      type: ""app"",
      app: ""coinlore"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.coinlore.net/api/global/`,
    })
  },
})
"
Philips Hue,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    philips_hue: {
      type: ""app"",
      app: ""philips_hue"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.meethue.com/v2/api/resource`,
      headers: {
        Authorization: `Bearer ${this.philips_hue.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Mews,https://{{custom_fields.platform_url}}/api/connector/v1/configuration/get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mews: {
      type: ""app"",
      app: ""mews"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""ClientToken"": `${this.mews.$auth.ClientToken}`,
      ""AccessToken"": `${this.mews.$auth.AccessToken}`,
      ""Client"": `${this.mews.$auth.Client}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.mews.$auth.platform_url}/api/connector/v1/configuration/get`,
      auth: {
        username: `{{custom_fields.email}}`,
        password: `{{custom_fields.password}}`,
      },
      data,
    })
  },
})
"
ChargeOver,https://{{custom_fields.domain}}.chargeover.com/api/v3/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chargeover: {
      type: ""app"",
      app: ""chargeover"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.chargeover.$auth.domain}.chargeover.com/api/v3/user`,
      auth: {
        username: `${this.chargeover.$auth.public_key}`,
        password: `${this.chargeover.$auth.private_key}`,
      },
    })
  },
})
"
Qualaroo,https://api.qualaroo.com/api/v1/nudges/{survey_id}/responses.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    qualaroo: {
      type: ""app"",
      app: ""qualaroo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.qualaroo.com/api/v1/nudges/{survey_id}/responses.json`,
      auth: {
        username: `${this.qualaroo.$auth.api_key}`,
        password: `${this.qualaroo.$auth.api_secret}`,
      },
    })
  },
})
"
OANDA,https://api-fxtrade.oanda.com/v3/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    oanda: {
      type: ""app"",
      app: ""oanda"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api-fxtrade.oanda.com/v3/accounts`,
      headers: {
        Authorization: `Bearer ${this.oanda.$auth.personal_token}`,
      },
    })
  },
})
"
Re:amaze,https://{{custom_fields.domain}}.reamaze.io/api/v1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    re_amaze: {
      type: ""app"",
      app: ""re_amaze"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.re_amaze.$auth.domain}.reamaze.io/api/v1/contacts`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.re_amaze.$auth.email}`,
        password: `${this.re_amaze.$auth.api_token}`,
      },
    })
  },
})
"
Vision6,https://{{custom_fields.region}}.api.vision6.com/v1/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vision6: {
      type: ""app"",
      app: ""vision6"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.vision6.$auth.region}.api.vision6.com/v1/lists`,
      headers: {
        Authorization: `Bearer ${this.vision6.$auth.api_key}`,
        ""Content-Type"": `application/json; charset=UTF-8`,
      },
    })
  },
})
"
AerisWeather,http://api.aerisapi.com/observations/seattle%2Cwa,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    aerisweather: {
      type: ""app"",
      app: ""aerisweather"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.aerisapi.com/observations/seattle%2Cwa`,
      params: {
        client_id: `${this.aerisweather.$auth.app_id}`,
        client_secret: `${this.aerisweather.$auth.app_secret}`,
      },
    })
  },
})
"
PartnerStack (Partner API),https://api.partnerstack.com/api/v2/partnerships,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    partnerstack: {
      type: ""app"",
      app: ""partnerstack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.partnerstack.com/api/v2/partnerships`,
      headers: {
        Authorization: `Bearer ${this.partnerstack.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Mailjet,https://api.mailjet.com/v3/REST/contactslist,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailjet: {
      type: ""app"",
      app: ""mailjet"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mailjet.com/v3/REST/contactslist`,
      auth: {
        username: `{{custom_fields.public_key}}`,
        password: `${this.mailjet.$auth.secret_key}`,
      },
    })
  },
})
"
Ragic,https://{{custom_fields.domain}}.ragic.com/{{custom_fields.database}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ragic: {
      type: ""app"",
      app: ""ragic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.ragic.$auth.domain}.ragic.com/${this.ragic.$auth.database}`,
      headers: {
        ""Authorization"": `Basic ${this.ragic.$auth.api_key}`,
      },
    })
  },
})
"
Celoxis,https://app.celoxis.com/psa/api/v2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    celoxis: {
      type: ""app"",
      app: ""celoxis"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.celoxis.com/psa/api/v2/me`,
      headers: {
        Authorization: `Bearer ${this.celoxis.$auth.api_token}`,
      },
    })
  },
})
"
FormTitan,https://{{custom_fields.account}}.formtitan.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    formtitan: {
      type: ""app"",
      app: ""formtitan"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.formtitan.$auth.account}.formtitan.com/api/v1/users`,
      headers: {
        ""ftAPIKey"": `${this.formtitan.$auth.api_key}`,
      },
    })
  },
})
"
Zenler,https://api.newzenler.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zenler: {
      type: ""app"",
      app: ""zenler"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.newzenler.com/api/v1/users`,
      headers: {
        ""X-API-Key"": `${this.zenler.$auth.api_key}`,
        ""X-Account-Name"": `${this.zenler.$auth.account_name}`,
      },
    })
  },
})
"
Launch27,https://{{custom_fields.domain}}.launch27.com/v1/settings,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    launch27: {
      type: ""app"",
      app: ""launch27"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.launch27.$auth.domain}.launch27.com/v1/settings`,
      headers: {
        Authorization: `Bearer ${this.launch27.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Myphoner,https://{{custom_fields.domain}}.myphoner.com/api/v2/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    myphoner: {
      type: ""app"",
      app: ""myphoner"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.myphoner.$auth.domain}.myphoner.com/api/v2/lists`,
      headers: {
        ""Authorization"": `Token ${this.myphoner.$auth.api_key}`,
        ""Accept"": `application/json`,
        ""Content-type"": `application/json`,
      },
    })
  },
})
"
SupportBee,https://{{custom_fields.domain}}.supportbee.com/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    supportbee: {
      type: ""app"",
      app: ""supportbee"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.supportbee.$auth.domain}.supportbee.com/users`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Accept"": `application/json`,
      },
      params: {
        auth_token: `${this.supportbee.$auth.api_token}`,
      },
    })
  },
})
"
Tick,https://www.tickspot.com/{{custom_fields.subscription_id}}/api/v2/users.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tick: {
      type: ""app"",
      app: ""tick"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.tickspot.com/${this.tick.$auth.subscription_id}/api/v2/users.json`,
      headers: {
        ""Authorization"": `Token token=${this.tick.$auth.api_token}`,
        ""User-Agent"": `MyCoolApp (${this.tick.$auth.email})`,
      },
    })
  },
})
"
Status Hero,https://service.statushero.com/api/v1/members,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    status_hero: {
      type: ""app"",
      app: ""status_hero"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://service.statushero.com/api/v1/members`,
      headers: {
        ""X-Team-ID"": `${this.status_hero.$auth.team_id}`,
        ""X-API-Key"": `${this.status_hero.$auth.api_key}`,
      },
    })
  },
})
"
Alegra,https://api.alegra.com/api/v1/users/self,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    alegra: {
      type: ""app"",
      app: ""alegra"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.alegra.com/api/v1/users/self`,
      headers: {
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.alegra.$auth.user_email}`,
        password: `${this.alegra.$auth.access_token}`,
      },
    })
  },
})
"
Perigon,https://api.goperigon.com/v1/all,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    perigon: {
      type: ""app"",
      app: ""perigon"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.goperigon.com/v1/all`,
      params: {
        apiKey: `${this.perigon.$auth.apiKey}`,
      },
    })
  },
})
"
Trigger,https://www.triggerapp.com/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    trigger: {
      type: ""app"",
      app: ""trigger"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.triggerapp.com/api/v1/me`,
      params: {
        token: `${this.trigger.$auth.user_token}`,
        api_key: `${this.trigger.$auth.account_key}`,
      },
    })
  },
})
"
Formsite,https://{{custom_fields.server}}.formsite.com/api/v2/{{custom_fields.user_id}}/forms,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    formsite: {
      type: ""app"",
      app: ""formsite"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.formsite.$auth.server}.formsite.com/api/v2/${this.formsite.$auth.user_id}/forms`,
      headers: {
        Authorization: `Bearer ${this.formsite.$auth.access_token}`,
      },
    })
  },
})
"
Hive,https://app.hive.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hive: {
      type: ""app"",
      app: ""hive"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.hive.com/api/v1/users`,
      params: {
        api_key: `676cc5847fc2652d7a3f055f792379a0`,
        user_id: `${this.hive.$auth.user_id}`,
      },
    })
  },
})
"
zoom test -- Danny,https://api.zoom.us/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoom_test_danny: {
      type: ""app"",
      app: ""zoom_test_danny"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.zoom.us/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.zoom_test_danny.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Klenty,https://app.klenty.com/apis/v1/user/{{custom_fields.username}}/prospects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    klenty: {
      type: ""app"",
      app: ""klenty"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.klenty.com/apis/v1/user/${this.klenty.$auth.username}/prospects`,
      headers: {
        ""x-API-key"": `${this.klenty.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      params: {
        listName: `YOUR_LIST_NAME`,
      },
    })
  },
})
"
Quickbase,https://api.quickbase.com/v1/apps/{your_app_id}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    quickbase: {
      type: ""app"",
      app: ""quickbase"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.quickbase.com/v1/apps/brztjz2nz`,
      headers: {
        ""QB-Realm-Hostname"": `${this.quickbase.$auth.hostname}`,
        ""User-Agent"": `@PipedreamHQ/pipedream v0.1`,
        ""Authorization"": `QB-USER-TOKEN ${this.quickbase.$auth.user_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Beanstalkapp,https://{{custom_fields.domain}}.beanstalkapp.com/api/account.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    beanstalkapp: {
      type: ""app"",
      app: ""beanstalkapp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.beanstalkapp.$auth.domain}.beanstalkapp.com/api/account.json`,
      headers: {
        ""Content-Type"": `applicaton/json`,
        ""User-Agent"": `Pipedream (support@pipedream.com)`,
      },
      auth: {
        username: `${this.beanstalkapp.$auth.username}`,
        password: `${this.beanstalkapp.$auth.access_token}`,
      },
    })
  },
})
"
Cflow,https://us.cflowapps.com/integromat/api/cflow/getworkflows,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cflow: {
      type: ""app"",
      app: ""cflow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://us.cflowapps.com/integromat/api/cflow/getworkflows`,
      headers: {
        ""Content-Type"": `application/json`,
        ""apikey"": `${this.cflow.$auth.apikey}`,
        ""userkey"": `${this.cflow.$auth.userkey}`,
        ""username"": `${this.cflow.$auth.username}`,
      },
    })
  },
})
"
CheckMarket ,https://api-{{custom_fields.region}}.checkmarket.com/3/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    checkmarket: {
      type: ""app"",
      app: ""checkmarket"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api-${this.checkmarket.$auth.region}.checkmarket.com/3/contacts`,
      headers: {
        ""Accept"": `application/json`,
        ""X-Master-Key"": `${this.checkmarket.$auth.x_master_key}`,
        ""X-Key"": `${this.checkmarket.$auth.x_key}`,
      },
    })
  },
})
"
4Dem,https://api.4dem.it/recipients,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fourdem: {
      type: ""app"",
      app: ""fourdem"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.4dem.it/recipients`,
      params: {
        token: `${this.fourdem.$auth.token}`,
      },
    })
  },
})
"
Blink,https://api.joinblink.com/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    blink: {
      type: ""app"",
      app: ""blink"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.joinblink.com/v2/user`,
      headers: {
        Authorization: `Bearer ${this.blink.$auth.token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
BulkGate,https://portal.bulkgate.com/api/1.0/simple/info,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bulkgate: {
      type: ""app"",
      app: ""bulkgate"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://portal.bulkgate.com/api/1.0/simple/info`,
      params: {
        application_id: `${this.bulkgate.$auth.app_id}`,
        application_token: `${this.bulkgate.$auth.app_token}`,
      },
    })
  },
})
"
BulkSMS.my,https://api.bulksms.com/v1/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bulksms_my: {
      type: ""app"",
      app: ""bulksms_my"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bulksms.com/v1/profile`,
      headers: {
        ""Authorization"": `Basic RTA1Rjk0RDNDQUYyNDlGRDgzNUM0MUIzREQ3RDIyNzUtMDItRTprWExfYUdJY2hwQm9lYUNBOSplMmRfTTRGSGMhXw==`,
      },
    })
  },
})
"
Clearout,https://api.clearout.io/v2/domain/resolve/whois,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clearout: {
      type: ""app"",
      app: ""clearout"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""domain"": `pipedream.com`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.clearout.io/v2/domain/resolve/whois`,
      headers: {
        Authorization: `Bearer ${this.clearout.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
click2mail,https://rest.click2mail.com/molpro/credit,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    click2mail: {
      type: ""app"",
      app: ""click2mail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.click2mail.com/molpro/credit`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.click2mail.$auth.username}`,
        password: `${this.click2mail.$auth.password}`,
      },
    })
  },
})
"
ClickTime,https://api.clicktime.com/v2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clicktime: {
      type: ""app"",
      app: ""clicktime"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.clicktime.com/v2/me`,
      headers: {
        ""Authorization"": `Token ${this.clicktime.$auth.api_token}`,
      },
    })
  },
})
"
TextAnywhere,https://api.textanywhere.com/API/v1.0/REST/contact,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    textanywhere: {
      type: ""app"",
      app: ""textanywhere"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.textanywhere.com/API/v1.0/REST/contact`,
      headers: {
        ""Content-Type"": `application/json`,
        ""user_key"": `${this.textanywhere.$auth.user_key}`,
        ""ACCESS_TOKEN"": `${this.textanywhere.$auth.access_token}`,
      },
    })
  },
})
"
ConvertAPI,https://v2.convertapi.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    convertapi: {
      type: ""app"",
      app: ""convertapi"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://v2.convertapi.com/user`,
      params: {
        Secret: `${this.convertapi.$auth.api_secret}`,
      },
    })
  },
})
"
DeskTime,https://desktime.com/api/v2/json/company,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    desktime: {
      type: ""app"",
      app: ""desktime"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://desktime.com/api/v2/json/company`,
      params: {
        apiKey: `${this.desktime.$auth.api_key}`,
      },
    })
  },
})
"
Doppler,https://restapi.fromdoppler.com/accounts/pdapikey@gmail.com/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    doppler: {
      type: ""app"",
      app: ""doppler"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""name"": `testlist`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://restapi.fromdoppler.com/accounts/pdapikey@gmail.com/lists`,
      headers: {
        ""Authorization"": `token ${this.doppler.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Elastic Email,https://api.elasticemail.com/v4/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    elastic_email: {
      type: ""app"",
      app: ""elastic_email"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.elasticemail.com/v4/contacts`,
      headers: {
        ""X-ElasticEmail-ApiKey"": `${this.elastic_email.$auth.api_key}`,
      },
    })
  },
})
"
Emailoctopus,https://emailoctopus.com/api/1.5/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    emailoctopus: {
      type: ""app"",
      app: ""emailoctopus"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://emailoctopus.com/api/1.5/lists`,
      params: {
        api_key: `${this.emailoctopus.$auth.api_key}`,
      },
    })
  },
})
"
Esendex,https://api.esendex.com/v1.0/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    esendex: {
      type: ""app"",
      app: ""esendex"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.esendex.com/v1.0/accounts`,
      headers: {
        ""Authorization"": `Basic ${this.esendex.$auth.api_password}`,
      },
    })
  },
})
"
Favro,https://favro.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    favro: {
      type: ""app"",
      app: ""favro"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://favro.com/api/v1/users`,
      headers: {
        ""organizationId"": `4497a4ccb915eb07a0c46cfd`,
      },
      auth: {
        username: `${this.favro.$auth.username}`,
        password: `${this.favro.$auth.api_token}`,
      },
    })
  },
})
"
FileStack,https://www.filestackapi.com/api/store/S3,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    filestack: {
      type: ""app"",
      app: ""filestack"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""url"": `YOUR_URL`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://www.filestackapi.com/api/store/S3`,
      params: {
        key: `A4xcigsXORKKAeI825b9cz`,
      },
      data,
    })
  },
})
"
Shopify Partner,https://partners.shopify.com/{{custom_fields.organization_id}}/api/2021-07/graphql.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shopify_partner: {
      type: ""app"",
      app: ""shopify_partner"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://partners.shopify.com/${this.shopify_partner.$auth.organization_id}/api/2021-07/graphql.json`,
      headers: {
        'X-Shopify-Access-Token': this.shopify_partner.$auth.api_key,
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      method: 'POST',
      params: {
        query: `{
          publicApiVersions {
            handle
          }
        }
        `,
      },
    })
  },
})
"
Getswift,https://app.getswift.co/api/public/v2/drivers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    getswift: {
      type: ""app"",
      app: ""getswift"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.getswift.co/api/public/v2/drivers`,
      params: {
        ApiKey: `${this.getswift.$auth.api_key}`,
      },
    })
  },
})
"
Cisco Webex - Custom App,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cisco_webex_custom_app: {
      type: ""app"",
      app: ""cisco_webex_custom_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      // this API request requires the spark:people_read scope
      url: `https://webexapis.com/v1/people/me`,
      headers: {
        Authorization: `Bearer ${this.cisco_webex_custom_app.$auth.oauth_access_token}`,
      },
    })
  },
})
"
GTX SMS,https://rest.gtx-messaging.net/smsc/sendsms/{{custom_fields.auth_key}}/json?from=test&to=%2b526691514947&text=test&dlr-mask=3&dlr-url=https%3A%2F%2Fwww.mydomain.com%3A12345%2Fdlr_back,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gtx_sms: {
      type: ""app"",
      app: ""gtx_sms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.gtx-messaging.net/smsc/sendsms/${this.gtx_sms.$auth.auth_key}/json?from=test&to=%2b526691514947&text=test&dlr-mask=3&dlr-url=https%3A%2F%2Fwww.mydomain.com%3A12345%2Fdlr_back`,
    })
  },
})
"
Geckoboard,https://api.geckoboard.com/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    geckoboard: {
      type: ""app"",
      app: ""geckoboard"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""email"": `pdapikey@gmail.com`,
      ""password"": `SomosExpert0s#`,
    }
    return await axios($, {
      url: `https://api.geckoboard.com/`,
      auth: {
        username: `${this.geckoboard.$auth.api_key}`,
        password: ``,
      },
      data,
    })
  },
})
"
IP2Location,https://api.ip2location.com/v2,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ip2location: {
      type: ""app"",
      app: ""ip2location"",
    },
    ip: {
      type: ""string"",
      default: ""142.113.220.31""
    },
    package: {
      type: ""string"",
      default: ""WS1""
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ip2location.com/v2`,
      params: {
        key: `${this.ip2location.$auth.api_key}`,
        ip: `${this.ip}`,
        package: `${this.package}`,
      },
    })
  },
})
"
Apollo.io,https://api.apollo.io/v1/users/search,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    apollo_io: {
      type: ""app"",
      app: ""apollo_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.apollo.io/v1/users/search`,
      headers: {
        ""Cache-Control"": `no-cache`,
        ""Content-Type"": `application/json`,
      },
      params: {
        api_key: `${this.apollo_io.$auth.api_key}`,
      },
    })
  },
})
"
Backendless,https://{{custom_fields.subdomain}}.backendless.app/api/users/{{oauth.uid}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    backendless: {
      type: ""app"",
      app: ""backendless"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.backendless.$auth.subdomain}.backendless.app/api/users/${this.backendless.$auth.oauth_uid}`,
      headers: {
        Authorization: `Bearer ${this.backendless.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
        ""user-token"": `${this.backendless.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Kickbox,https://{{custom_fields.subdomain}}.kickbox.com/v2/verify,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    kickbox: {
      type: ""app"",
      app: ""kickbox"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.kickbox.$auth.subdomain}.kickbox.com/v2/verify`,
      params: {
        email: `YOUR_EMAIL`,
        apikey: `${this.kickbox.$auth.api_key}`,
      },
    })
  },
})
"
Tokeet,https://papi.tokeet.com/auth/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tokeet: {
      type: ""app"",
      app: ""tokeet"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://papi.tokeet.com/auth/account`,
      headers: {
        Authorization: `Bearer ${this.tokeet.$auth.oauth_access_token}`,
        ""X-App-Secret"": ``,
      },
    })
  },
})
"
Klipfolio,https://app.klipfolio.com/api/1.0/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    klipfolio: {
      type: ""app"",
      app: ""klipfolio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.klipfolio.com/api/1.0/profile`,
      headers: {
        ""kf-api-key"": `${this.klipfolio.$auth.api_key}`,
      },
    })
  },
})
"
Lexoffice,https://api.lexoffice.io/v1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lexoffice: {
      type: ""app"",
      app: ""lexoffice"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lexoffice.io/v1/contacts`,
      headers: {
        Authorization: `Bearer ${this.lexoffice.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
MessageBird ,https://rest.messagebird.com/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    messagebird: {
      type: ""app"",
      app: ""messagebird"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.messagebird.com/balance`,
      headers: {
        ""Authorization"": `AccessKey ${this.messagebird.$auth.api_key}`,
      },
    })
  },
})
"
Supportivekoala,https://api.supportivekoala.com/v1/images,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    supportivekoala: {
      type: ""app"",
      app: ""supportivekoala"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.supportivekoala.com/v1/images`,
      headers: {
        Authorization: `Bearer ${this.supportivekoala.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Horoshop,http://{{custom_fields.domain}}.horoshop.ua/api/currency/export,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    horoshop: {
      type: ""app"",
      app: ""horoshop"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""token"": `${this.horoshop.$auth.token}`,
    }
    return await axios($, {
      method: ""post"",
      url: `http://${this.horoshop.$auth.domain}.horoshop.ua/api/currency/export`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Newsman,https://ssl.newsman.app/api/1.2/rest/{{custom_fields.user_id}}/{{custom_fields.api_key}}/list.all.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    newsman: {
      type: ""app"",
      app: ""newsman"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ssl.newsman.app/api/1.2/rest/${this.newsman.$auth.user_id}/${this.newsman.$auth.api_key}/list.all.json`,
    })
  },
})
"
New York Times,https://api.nytimes.com/svc/search/v2/articlesearch.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    new_york_times: {
      type: ""app"",
      app: ""new_york_times"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.nytimes.com/svc/search/v2/articlesearch.json`,
      params: {
        ""api-key"": `${this.new_york_times.$auth.api_key}`,
        ""q"": `election`,
      },
    })
  },
})
"
Octopush SMS,https://api.octopush.com/v1/public/wallet/check-balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    octopush_sms: {
      type: ""app"",
      app: ""octopush_sms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.octopush.com/v1/public/wallet/check-balance`,
      headers: {
        ""Content-Type"": `application/json`,
        ""api-login"": `${this.octopush_sms.$auth.api_login}`,
        ""api-key"": `${this.octopush_sms.$auth.api_key}`,
      },
    })
  },
})
"
Omnisend,https://api.omnisend.com/v3/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    omnisend: {
      type: ""app"",
      app: ""omnisend"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.omnisend.com/v3/contacts`,
      headers: {
        ""X-API-KEY"": `${this.omnisend.$auth.api_key}`,
      },
    })
  },
})
"
Opsgenie,https://{{custom_fields.instance}}.opsgenie.com/v2/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    opsgenie: {
      type: ""app"",
      app: ""opsgenie"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.opsgenie.$auth.instance}.opsgenie.com/v2/account`,
      headers: {
        ""Authorization"": `GenieKey ${this.opsgenie.$auth.api_key}`,
      },
    })
  },
})
"
Netcore,https://emailapi.netcorecloud.net/v5.1/domain/getDomains,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    netcore: {
      type: ""app"",
      app: ""netcore"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://emailapi.netcorecloud.net/v5.1/domain/getDomains`,
      headers: {
        ""api_key"": `${this.netcore.$auth.api_key}`,
      },
      params: {
        status: `5`,
      },
    })
  },
})
"
Plecto,https://app.plecto.com/api/v2/members,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    plecto: {
      type: ""app"",
      app: ""plecto"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.plecto.com/api/v2/members`,
      auth: {
        username: `${this.plecto.$auth.username}`,
        password: `${this.plecto.$auth.password}`,
      },
    })
  },
})
"
Powrbot,https://powrbot.com/api/v1/search/single/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    powrbot: {
      type: ""app"",
      app: ""powrbot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://powrbot.com/api/v1/search/single/`,
      headers: {
        ""Authorization"": `secret-key ${this.powrbot.$auth.secret_key}`,
      },
      params: {
        company: `Apple`,
      },
    })
  },
})
"
Ratecard,https://api.ratecard.io/v1/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ratecard: {
      type: ""app"",
      app: ""ratecard"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ratecard.io/v1/accounts`,
      headers: {
        Authorization: `Bearer ${this.ratecard.$auth.access_token}`,
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
ReachMail,https://services.reachmail.net/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    reachmail: {
      type: ""app"",
      app: ""reachmail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://services.reachmail.net/lists`,
      headers: {
        Authorization: `Bearer ${this.reachmail.$auth.api_token}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Dropmark,https://{{custom_fields.username}}.dropmark.com/{collection_id}.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dropmark: {
      type: ""app"",
      app: ""dropmark"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.dropmark.com/v1/users/me/`,
      headers: {
        ""X-API-Key"": `${this.dropmark.$auth.api_key}`,
      },
    })
  },
})
"
Remarkety,https://app.remarkety.com/api/v2/stores/{{custom_fields.store_id}}/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    remarkety: {
      type: ""app"",
      app: ""remarkety"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.remarkety.com/api/v2/stores/${this.remarkety.$auth.store_id}/customers`,
      headers: {
        ""X-API-Key"": `${this.remarkety.$auth.api_token}`,
      },
    })
  },
})
"
Blazemeter,https://a.blazemeter.com/api/v4/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    blazemeter: {
      type: ""app"",
      app: ""blazemeter"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://a.blazemeter.com/api/v4/user`,
      auth: {
        username: `${this.blazemeter.$auth.api_key}`,
        password: `${this.blazemeter.$auth.api_secret}`,
      },
    })
  },
})
"
RudderStack HTTP,{{custom_fields.data_plane_url}}/v1/identify,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rudderstack: {
      type: ""app"",
      app: ""rudderstack"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""userId"": `{{pass_user_id_here}}`,
      ""anonymousId"": `{{or_pass_anonymouse_user_id_here}}`,
    }
    return await axios($, {
      method: ""post"",
      url: `${this.rudderstack.$auth.data_plane_url}/v1/identify`,
      auth: {
        username: `${this.rudderstack.$auth.source_write_key}`,
        password: ``,
      },
      data,
    })
  },
})
"
Builderall Mailingboss,https://member.mailingboss.com/integration/index.php/lists/{{custom_fields.api_key}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    builderall_mailingboss: {
      type: ""app"",
      app: ""builderall_mailingboss"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://member.mailingboss.com/integration/index.php/lists/${this.builderall_mailingboss.$auth.api_key}`,
    })
  },
})
"
National Instruments Systemlink Cloud,https://api.systemlinkcloud.com/niauth/v1/auth,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    national_instruments_systemlink_cloud: {
      type: ""app"",
      app: ""national_instruments_systemlink_cloud"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.systemlinkcloud.com/niauth/v1/auth`,
      headers: {
        ""x-ni-api-key"": `${this.national_instruments_systemlink_cloud.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
SalesUp!,https://api.salesup.com/v4/comun/zonashorarias,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    salesup_: {
      type: ""app"",
      app: ""salesup_"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.salesup.com/v4/comun/zonashorarias`,
      headers: {
        ""token"": `${this.salesup_.$auth.session_token}`,
      },
    })
  },
})
"
SMS Alert ,https://www.smsalert.co.in/api/user.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sms_alert: {
      type: ""app"",
      app: ""sms_alert"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.smsalert.co.in/api/user.json`,
      params: {
        apikey: `${this.sms_alert.$auth.api_key}`,
      },
    })
  },
})
"
GoCardless,https://api.gocardless.com/customers/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gocardless: {
      type: ""app"",
      app: ""gocardless"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.gocardless.com/customers/`,
      headers: {
        Authorization: `Bearer ${this.gocardless.$auth.oauth_access_token}`,
        ""GoCardless-Version"": `2015-07-06`,
      },
    })
  },
})
"
IMAP," ","import { once } from ""events"";
import imaps from ""imap-simple"";
import cycle from ""cycle"";

export default defineComponent({
  props: {
    imap: {
      type: ""app"",
      app: ""imap"",
    }
  },
  async run({steps, $}) {
    const { host, port, email, password } = this.imap.$auth;

    const connection = await imaps.connect({
      imap: {
        host,
        port,
        user: email,
        password,
        tls: true,
        tlsOptions: { servername: host },
        authTimeout: 3000
      },
    });

    const boxes = await connection.getBoxes();
    // Filter out circular references to parents
    const filteredBoxes = cycle.decycle(boxes);
    $.export(""results"", filteredBoxes);

    connection.end();
    await once(connection.imap, ""end"");
  },
})"
BrowserStack,https://api-cloud.browserstack.com/app-automate/plan.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    browserstack: {
      type: ""app"",
      app: ""browserstack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api-cloud.browserstack.com/app-automate/plan.json`,
      auth: {
        username: `${this.browserstack.$auth.user_name}`,
        password: `${this.browserstack.$auth.access_key}`,
      },
    })
  },
})
"
D7 SMS (Auth Token),https://rest-api.d7networks.com/secure/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    d7_sms: {
      type: ""app"",
      app: ""d7_sms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest-api.d7networks.com/secure/balance`,
      headers: {
        ""Authorization"": `Basic ${this.d7_sms.$auth.auth_token}`,
      },
    })
  },
})
"
SEMrush,http://www.semrush.com/users/countapiunits.html,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    semrush: {
      type: ""app"",
      app: ""semrush"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://www.semrush.com/users/countapiunits.html`,
      params: {
        key: `${this.semrush.$auth.api_key}`,
      },
    })
  },
})
"
Linear (OAuth),https://api.linear.app/graphql,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    linear: {
      type: ""app"",
      app: ""linear"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `{ 
        user(id: ""me"") {
          id
          name
          email
        }
      }`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.linear.app/graphql`,
      headers: {
        Authorization: `Bearer ${this.linear.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Gupshup,https://media.smsgupshup.com/GatewayAPI/rest,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gupshup: {
      type: ""app"",
      app: ""gupshup"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://media.smsgupshup.com/GatewayAPI/rest`,
      params: {
        method: `OPT_IN`,
        format: `json`,
        userid: `${this.gupshup.$auth.userid}`,
        password: `${this.gupshup.$auth.password}`,
        phone_number: `{{phone_number_goes_here}}`,
        ""v"": `1.1`,
        auth_scheme: `plain`,
        channel: `WHATSAPP`,
        foo: `bar`,
      },
    })
  },
})
"
CloudTables,https://{{custom_fields.subdomain}}.cloudtables.io/api/1/datasets,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudtables: {
      type: ""app"",
      app: ""cloudtables"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.cloudtables.$auth.subdomain}.cloudtables.io/api/1/datasets`,
      params: {
        key: `${this.cloudtables.$auth.api_key}`,
      },
    })
  },
})
"
LaGrowthMachine,https://apiv2.lagrowthmachine.com/flow/leads,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lagrowthmachine: {
      type: ""app"",
      app: ""lagrowthmachine"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""audience"": ``,
    }
    return await axios($, {
      method: ""post"",
      url: `https://apiv2.lagrowthmachine.com/flow/leads`,
      params: {
        apikey: `${this.lagrowthmachine.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Crowd.dev,https://api.crowd.dev/api/auth/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    crowd_dev: {
      type: ""app"",
      app: ""crowd_dev"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.crowd.dev/api/auth/me`,
      headers: {
        Authorization: `Bearer ${this.crowd_dev.$auth.bearer_token}`,
      },
    })
  },
})
"
MailboxValidator,https://api.mailboxvalidator.com/v1/validation/single,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailboxvalidator: {
      type: ""app"",
      app: ""mailboxvalidator"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mailboxvalidator.com/v1/validation/single`,
      params: {
        key: `${this.mailboxvalidator.$auth.api_key}`,
        format: `json`,
        email: `{enter_email_to_validate_here}`,
      },
    })
  },
})
"
Hubspot -- Integration Testing,https://api.hubapi.com/integrations/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hubspot_integration_testing: {
      type: ""app"",
      app: ""hubspot_integration_testing"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.hubapi.com/integrations/v1/me`,
      headers: {
        Authorization: `Bearer ${this.hubspot_integration_testing.$auth.oauth_access_token}`,
      },
    })
  },
})
"
AppVeyor,https://ci.appveyor.com/api/roles,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    appveyor: {
      type: ""app"",
      app: ""appveyor"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ci.appveyor.com/api/roles`,
      headers: {
        Authorization: `Bearer ${this.appveyor.$auth.bearer_token}`,
        ""Content-type"": `application/json`,
      },
    })
  },
})
"
Tally,https://api.tally.so/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tally: {
      type: ""app"",
      app: ""tally"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.tally.so/me`,
      headers: {
        Authorization: `Bearer ${this.tally.$auth.oauth_access_token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Zoho Desk,https://desk.{{custom_fields.region}}/api/v1/myProfile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_desk: {
      type: ""app"",
      app: ""zoho_desk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://desk.${this.zoho_desk.$auth.region}/api/v1/myProfile`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_desk.$auth.oauth_access_token}`,
      },
    })
  },
})
"
IP2Proxy,https://api.ip2proxy.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ip2proxy: {
      type: ""app"",
      app: ""ip2proxy"",
    },
    ip: {
      type: ""string"",
      default: ""201.42.237.89""
    },
    package: {
      type: ""string"",
      default: ""PX11""
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ip2proxy.com`,
      params: {
        key: `${this.ip2proxy.$auth.api_key}`,
        ip: `${this.ip}`,
      },
    })
  },
})
"
IP2WHOIS,https://api.ip2whois.com/v2?key={your_license_key}&domain={domain_name},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ip2whois: {
      type: ""app"",
      app: ""ip2whois"",
    },
    domain: {
      type: ""string"",
      default: ""greendot.com""
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ip2whois.com/v2?key={your_license_key}&domain={domain_name}`,
      params: {
        key: `${this.ip2whois.$auth.api_key}`,
        domain: `${this.domain}`,
      },
    })
  },
})
"
Phantombuster,https://api.phantombuster.com/api/v1/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    phantombuster: {
      type: ""app"",
      app: ""phantombuster"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.phantombuster.com/api/v1/user`,
      headers: {
        ""X-Phantombuster-Key-1"": `${this.phantombuster.$auth.api_key}`,
      },
    })
  },
})
"
Tod_Test_App,https://todtest.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tod_test_app: {
      type: ""app"",
      app: ""tod_test_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://todtest.com`,
      headers: {
        ""X-Api-Key"": `1234`,
      },
    })
  },
})
"
OpenSea,https://api.opensea.io/api/v1/assets,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    opensea: {
      type: ""app"",
      app: ""opensea"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.opensea.io/api/v1/assets`,
      headers: {
        ""X-API-KEY"": `${this.opensea.$auth.api_key}`,
      },
    })
  },
})
"
Todoist - Custom App,https://api.todoist.com/rest/v1/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    todoist_custom_app: {
      type: ""app"",
      app: ""todoist_custom_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.todoist.com/rest/v1/projects`,
      headers: {
        Authorization: `Bearer ${this.todoist_custom_app.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Auth0 Dylan Test,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    auth0_dylan_test: {
      type: ""app"",
      app: ""auth0_dylan_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.auth0_dylan_test.$auth.domain}/userinfo`,
      headers: {
        Authorization: `Bearer ${this.auth0_dylan_test.$auth.oauth_access_token}`,
      },
    })
  },
})
"
15Five,https://my.15five.com/api/public/user/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    f15five: {
      type: ""app"",
      app: ""f15five"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://my.15five.com/api/public/user/`,
      headers: {
        ""Authorization"": `${this.f15five.$auth.api_key}`,
      },
    })
  },
})
"
Accredible,https://api.accredible.com/v1/issuer/details,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    accredible: {
      type: ""app"",
      app: ""accredible"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.accredible.com/v1/issuer/details`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `Token token=${this.accredible.$auth.api_key}`,
      },
    })
  },
})
"
ZeroTier,https://my.zerotier.com/api/v1/org,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zerotier: {
      type: ""app"",
      app: ""zerotier"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://my.zerotier.com/api/v1/org`,
      headers: {
        Authorization: `Bearer ${this.zerotier.$auth.api_token}`,
      },
    })
  },
})
"
Agendor,https://api.agendor.com.br/v3/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    agendor: {
      type: ""app"",
      app: ""agendor"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.agendor.com.br/v3/users/me`,
      headers: {
        ""Authorization"": `Token ${this.agendor.$auth.api_token}`,
      },
    })
  },
})
"
Autoklose,https://api.autoklose.com/api/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    autoklose: {
      type: ""app"",
      app: ""autoklose"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.autoklose.com/api/me`,
      params: {
        api_token: `${this.autoklose.$auth.api_key}`,
      },
    })
  },
})
"
Mailbox Power,https://api.rocketnotes.com/api/clienttether/contacts/groups,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailbox_power: {
      type: ""app"",
      app: ""mailbox_power"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rocketnotes.com/api/clienttether/contacts/groups`,
      headers: {
        ""APIKEY"": `${this.mailbox_power.$auth.api_key}`,
      },
    })
  },
})
"
Cascade Strategy,https://{{custom_fields.subdomain}}.executestrategy.net/api/v2/goals,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cascade_strategy: {
      type: ""app"",
      app: ""cascade_strategy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.cascade_strategy.$auth.subdomain}.executestrategy.net/api/v2/goals`,
      headers: {
        Authorization: `Bearer ${this.cascade_strategy.$auth.api_token}`,
        ""Content-Type"": `application/json`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Cisco Meraki,https://api.meraki.com/api/v1/organizations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cisco_meraki: {
      type: ""app"",
      app: ""cisco_meraki"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.meraki.com/api/v1/organizations`,
      headers: {
        ""X-Cisco-Meraki-API-Key"": `${this.cisco_meraki.$auth.api_key}`,
      },
    })
  },
})
"
Convenia,https://public-api.convenia.com.br/api/v3/employees,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    convenia: {
      type: ""app"",
      app: ""convenia"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://public-api.convenia.com.br/api/v3/employees`,
      headers: {
        ""token"": `${this.convenia.$auth.api_token}`,
      },
    })
  },
})
"
Curated,https://api.curated.co/api/v3/publications,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    curated: {
      type: ""app"",
      app: ""curated"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.curated.co/api/v3/publications`,
      headers: {
        ""Authorization"": `Token token=${this.curated.$auth.api_key}`,
      },
    })
  },
})
"
Tremendous,https://testflight.tremendous.com/api/v2/organizations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tremendous: {
      type: ""app"",
      app: ""tremendous"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://testflight.tremendous.com/api/v2/organizations`,
      headers: {
        Authorization: `Bearer ${this.tremendous.$auth.api_key}`,
      },
    })
  },
})
"
DigiCert,https://www.digicert.com/services/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    digicert: {
      type: ""app"",
      app: ""digicert"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.digicert.com/services/v2/user`,
      headers: {
        ""Content-Type"": `application/xml`,
        ""X-DC-DEVKEY"": `${this.digicert.$auth.api_key}`,
      },
    })
  },
})
"
FeedBlitz,https://app.feedblitz.com/f.api/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    feedblitz: {
      type: ""app"",
      app: ""feedblitz"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.feedblitz.com/f.api/user`,
      params: {
        key: `${this.feedblitz.$auth.api_key}`,
      },
    })
  },
})
"
Fomo,https://api.fomo.com/api/v1/applications/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fomo: {
      type: ""app"",
      app: ""fomo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.fomo.com/api/v1/applications/me`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `Token ${this.fomo.$auth.api_token}`,
      },
    })
  },
})
"
GetProspect,https://api.getprospect.com/public/v1/email/verify,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    getprospect: {
      type: ""app"",
      app: ""getprospect"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.getprospect.com/public/v1/email/verify`,
      headers: {
        ""apiKey"": `${this.getprospect.$auth.api_key}`,
      },
      params: {
        email: `support@getprospect.com`,
      },
    })
  },
})
"
Gist,https://api.getgist.com/teammates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gist: {
      type: ""app"",
      app: ""gist"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.getgist.com/teammates`,
      headers: {
        Authorization: `Bearer ${this.gist.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Danny OAuth Testing,https://api.github.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    danny_oauth_testing: {
      type: ""app"",
      app: ""danny_oauth_testing"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.facebook.com/v15.0/${this.danny_oauth_testing.$auth.business_account_id}/phone_numbers`,
      headers: {
        Authorization: `Bearer ${this.danny_oauth_testing.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Uploadcare,https://api.uploadcare.com/project/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    uploadcare: {
      type: ""app"",
      app: ""uploadcare"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.uploadcare.com/project/`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Accept"": `application/vnd.uploadcare-v0.5+json`,
        ""Authorization"": `Uploadcare.Simple ${this.uploadcare.$auth.api_key}:${this.uploadcare.$auth.api_secret}`,
      },
    })
  },
})
"
Intuiface,https://api.intuiface.com/webtriggers/v1/availableExperiences,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    intuiface: {
      type: ""app"",
      app: ""intuiface"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.intuiface.com/webtriggers/v1/availableExperiences`,
      headers: {
        ""x-api-key"": `${this.intuiface.$auth.api_key}`,
      },
    })
  },
})
"
Jobnimbus,https://app.jobnimbus.com/api1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jobnimbus: {
      type: ""app"",
      app: ""jobnimbus"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.jobnimbus.com/api1/contacts`,
      headers: {
        Authorization: `Bearer ${this.jobnimbus.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Lahar,https://app.lahar.com.br/api/leads,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lahar: {
      type: ""app"",
      app: ""lahar"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""token_api_lahar"": `${this.lahar.$auth.api_token}`,
      ""email_contato"": `sergio_eliot@hotmail.com`,
      ""estagio_lead"": `1`,
    }
    return await axios($, {
      method: ""put"",
      url: `https://app.lahar.com.br/api/leads`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Xero - Practice Manager,https://api.xero.com/connections,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    xero_practice_manager: {
      type: ""app"",
      app: ""xero_practice_manager"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.xero.com/connections`,
      headers: {
        Authorization: `Bearer ${this.xero_practice_manager.$auth.oauth_access_token}`,
      },
    })
  },
})
"
NiftyImages,https://api.niftyimages.com/v1/Widgets,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    niftyimages: {
      type: ""app"",
      app: ""niftyimages"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.niftyimages.com/v1/Widgets`,
      headers: {
        ""ApiKey"": `${this.niftyimages.$auth.api_key}`,
      },
    })
  },
})
"
Ninox,https://api.ninox.com/v1/teams,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ninox: {
      type: ""app"",
      app: ""ninox"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ninox.com/v1/teams`,
      headers: {
        Authorization: `Bearer ${this.ninox.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Onfleet,https://onfleet.com/api/v2/organization,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    onfleet: {
      type: ""app"",
      app: ""onfleet"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://onfleet.com/api/v2/organization`,
      auth: {
        username: `${this.onfleet.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
OnStrategy,https://api.onstrategyhq.com/api/accounts.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    onstrategy: {
      type: ""app"",
      app: ""onstrategy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.onstrategyhq.com/api/accounts.json`,
      params: {
        key: `${this.onstrategy.$auth.api_key}`,
      },
    })
  },
})
"
PayPro,https://paypro.nl/post_api,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    paypro: {
      type: ""app"",
      app: ""paypro"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""apikey"": `${this.paypro.$auth.api_key}`,
      ""command"": `get_all_pay_methods`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://paypro.nl/post_api`,
      data,
    })
  },
})
"
Pinterest,https://api.pinterest.com/v5/user_account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pinterest: {
      type: ""app"",
      app: ""pinterest"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pinterest.com/v5/user_account`,
      headers: {
        Authorization: `Bearer ${this.pinterest.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Postman,https://api.getpostman.com/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    postman: {
      type: ""app"",
      app: ""postman"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""auth_token"": `=user:NNNNNN`,
    }
    return await axios($, {
      url: `https://api.getpostman.com/me`,
      headers: {
        ""X-Api-Key"": `${this.postman.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Productboard,https://api.productboard.com/features,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    productboard: {
      type: ""app"",
      app: ""productboard"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.productboard.com/features`,
      headers: {
        Authorization: `Bearer ${this.productboard.$auth.api_key}`,
      },
    })
  },
})
"
Feathery,https://api.feathery.io/api/user/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    feathery: {
      type: ""app"",
      app: ""feathery"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.feathery.io/api/user/`,
      headers: {
        ""Token"": `${this.feathery.$auth.api_key}`,
      },
    })
  },
})
"
Zuora Billing,{{custom_fields.api_tenant_environment}}/v1/catalog/products,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zuora: {
      type: ""app"",
      app: ""zuora"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.zuora.$auth.api_tenant_environment}/v1/catalog/products`,
      headers: {
        Authorization: `Bearer ${this.zuora.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Social Intents,https://api.socialintents.com/v1/api/chats/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    social_intents: {
      type: ""app"",
      app: ""social_intents"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.socialintents.com/v1/api/chats/`,
      auth: {
        username: `${this.social_intents.$auth.account_id}`,
        password: `${this.social_intents.$auth.api_token}`,
      },
    })
  },
})
"
Sonix,https://api.sonix.ai/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sonix: {
      type: ""app"",
      app: ""sonix"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sonix.ai/v1/users`,
      headers: {
        Authorization: `Bearer ${this.sonix.$auth.api_key}`,
      },
    })
  },
})
"
Lucid,https://api.lucid.co/users/me/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lucid: {
      type: ""app"",
      app: ""lucid"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lucid.co/users/me/profile`,
      headers: {
        Authorization: `Bearer ${this.lucid.$auth.oauth_access_token}`,
        ""Lucid-Api-Version"": `1`,
      },
    })
  },
})
"
Terraform,https://app.terraform.io/api/v2/account/details,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    terraform: {
      type: ""app"",
      app: ""terraform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.terraform.io/api/v2/account/details`,
      headers: {
        Authorization: `Bearer ${this.terraform.$auth.api_token}`,
        ""Content-Type"": `application/vnd.api+json`,
      },
    })
  },
})
"
Ticket Tailor,https://api.tickettailor.com/v1/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ticket_tailor: {
      type: ""app"",
      app: ""ticket_tailor"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.tickettailor.com/v1/events`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.ticket_tailor.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Paykickstart,https://app.paykickstart.com/api/affiliates/all,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    paykickstart: {
      type: ""app"",
      app: ""paykickstart"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""auth_token"": `${this.paykickstart.$auth.api_key}`,
      ""campaign_id"": `your_campaign_id_here`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://app.paykickstart.com/api/affiliates/all`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      params: {
        auth_token: `${this.paykickstart.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Leadpops,http://api.leadpops.com/api/v1/leads,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    leadpops: {
      type: ""app"",
      app: ""leadpops"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""funnel"": `SalCompany.clixwithus.com`,
      ""from_date"": `2022-03-20`,
      ""to_date"": `2022-03-20`,
      ""limit"": `100`,
    }
    return await axios($, {
      method: ""post"",
      url: `http://api.leadpops.com/api/v1/leads`,
      headers: {
        ""Content-Type"": `application/json`,
        ""leadpops-authorization"": `${this.leadpops.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Mediatoolkit,https://api.mediatoolkit.com/me/organizations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mediatoolkit: {
      type: ""app"",
      app: ""mediatoolkit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mediatoolkit.com/me/organizations`,
      params: {
        access_token: `${this.mediatoolkit.$auth.access_token}`,
      },
    })
  },
})
"
Overloop,https://api.overloop.com/public/v1/organizations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    overloop: {
      type: ""app"",
      app: ""overloop"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.overloop.com/public/v1/organizations`,
      headers: {
        ""Authorization"": `${this.overloop.$auth.api_key}`,
        ""Content-Type"": `application/vnd.api+json; charset=utf-8`,
      },
    })
  },
})
"
QuestionPro,https://{{custom_fields.env}}.questionpro.com/a/api/v2/organizations/4734262,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    questionpro: {
      type: ""app"",
      app: ""questionpro"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://{{custom_fields.env}}.questionpro.com/a/api/v2/organizations/4734262`,
      params: {
        apiKey: `${this.questionpro.$auth.api_key}`,
      },
    })
  },
})
"
SolarWinds Service Desk,https://api.samanage.com/users.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    solarwinds_service_desk: {
      type: ""app"",
      app: ""solarwinds_service_desk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.samanage.com/users.json`,
      headers: {
        ""X-Samanage-Authorization"": `Bearer ${this.solarwinds_service_desk.$auth.json_web_token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
REIPro,https://api.myreipro.com/api/VerifyApiKey,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    reipro: {
      type: ""app"",
      app: ""reipro"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.myreipro.com/api/VerifyApiKey`,
      params: {
        ApiKey: `${this.reipro.$auth.api_key}`,
      },
    })
  },
})
"
Reply.io,https://api.reply.io/v1/people,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    reply_io: {
      type: ""app"",
      app: ""reply_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.reply.io/v1/people`,
      headers: {
        ""X-Api-Key"": `${this.reply_io.$auth.api_key}`,
      },
    })
  },
})
"
Loomio,https://www.loomio.org/api/b1/memberships,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    loomio: {
      type: ""app"",
      app: ""loomio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.loomio.org/api/b1/memberships`,
      params: {
        api_key: `${this.loomio.$auth.api_key}`,
      },
    })
  },
})
"
Qwilr,https://api.qwilr.com/v1/blocks/saved,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    qwilr: {
      type: ""app"",
      app: ""qwilr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.qwilr.com/v1/blocks/saved`,
      headers: {
        Authorization: `Bearer ${this.qwilr.$auth.access_token}`,
      },
    })
  },
})
"
SMS-IT,https://controlpanel.smsit.ai/apis/getcreditbalance/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sms_it: {
      type: ""app"",
      app: ""sms_it"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://controlpanel.smsit.ai/apis/getcreditbalance/`,
      headers: {
        ""Content-Type"": `application/x-www-form-urlencoded`,
      },
      params: {
        type: `1`,
        apikey: `${this.sms_it.$auth.api_key}`,
      },
    })
  },
})
"
Heartbeat,https://api.heartbeat.chat/v0/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    heartbeat: {
      type: ""app"",
      app: ""heartbeat"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.heartbeat.chat/v0/users`,
      headers: {
        Authorization: `Bearer ${this.heartbeat.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Emailable,https://api.emailable.com/v1/verify,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    emailable: {
      type: ""app"",
      app: ""emailable"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.emailable.com/v1/verify`,
      params: {
        email: `sergio@pipekit.com`,
        api_key: `${this.emailable.$auth.api_key}`,
      },
    })
  },
})
"
Gorgias,https://{{custom_fields.domain}}.gorgias.com/api/users/0,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gorgias_oauth: {
      type: ""app"",
      app: ""gorgias_oauth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.gorgias_oauth.$auth.domain}.gorgias.com/api/users/0`,
      headers: {
        Authorization: `Bearer ${this.gorgias_oauth.$auth.oauth_access_token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
DeTrack,https://app.detrack.com/api/v2/dn/jobs,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    detrack: {
      type: ""app"",
      app: ""detrack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.detrack.com/api/v2/dn/jobs`,
      headers: {
        ""X-API-KEY"": `${this.detrack.$auth.api_key}`,
      },
    })
  },
})
"
Coupontools,https://api.coupontools.com/v4/subaccount/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    coupontools: {
      type: ""app"",
      app: ""coupontools"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.coupontools.com/v4/subaccount/list`,
      headers: {
        ""Content-Type"": `application/json`,
        ""X-Client-Id"": `${this.coupontools.$auth.client_id}`,
        ""X-Client-Secret"": `${this.coupontools.$auth.client_secret}`,
      },
    })
  },
})
"
stormglass.io,https://api.stormglass.io/v2/weather/point?lat=-16.499701&lng=-151.770538&params=waterTemperature,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    stormglass_io: {
      type: ""app"",
      app: ""stormglass_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.stormglass.io/v2/weather/point?lat=-16.499701&lng=-151.770538&params=waterTemperature`,
      headers: {
        ""Authorization"": `${this.stormglass_io.$auth.api_key}`,
      },
    })
  },
})
"
The Owen Wilson Wow,https://owen-wilson-wow-api.herokuapp.com/wows/random,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    owen_wilson: {
      type: ""app"",
      app: ""owen_wilson"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://owen-wilson-wow-api.herokuapp.com/wows/random`,
    })
  },
})
"
Push by Techulus,https://push.techulus.com/api/v1/notify,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    push_by_techulus: {
      type: ""app"",
      app: ""push_by_techulus"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""title"": `Welcome to Push by Techulus`,
      ""body"": `This is your first notification`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://push.techulus.com/api/v1/notify`,
      headers: {
        ""x-api-key"": `${this.push_by_techulus.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Refersion,https://api.refersion.com/v2/affiliate/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    refersion: {
      type: ""app"",
      app: ""refersion"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""limit"": `3`,
      ""page"": `1`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.refersion.com/v2/affiliate/list`,
      headers: {
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
        ""Refersion-Public-Key"": `{{custom_fields.api_key}}`,
        ""Refersion-Secret-Key"": `{{custom_fields.secret}}`,
      },
      data,
    })
  },
})
"
Browse AI,https://api.browse.ai/v1/tasks/9c992df3-7ebf-497f-ac9f-eb8bc2622c87/jobs,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    browse_ai: {
      type: ""app"",
      app: ""browse_ai"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.browse.ai/v1/tasks/9c992df3-7ebf-497f-ac9f-eb8bc2622c87/jobs`,
      headers: {
        Authorization: `Bearer ${this.browse_ai.$auth.api_key}`,
      },
    })
  },
})
"
Voice Monkey,https://api.voicemonkey.io/trigger,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    voice_monkey: {
      type: ""app"",
      app: ""voice_monkey"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""access_token"": `${this.voice_monkey.$auth.access_token}`,
      ""secret_token"": `${this.voice_monkey.$auth.secret_token}`,
      ""monkey"": `pipedream-monkey-1`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.voicemonkey.io/trigger`,
      data,
    })
  },
})
"
Freshlearn,https://api.freshlearn.com/v1/integration/member,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freshlearn: {
      type: ""app"",
      app: ""freshlearn"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.freshlearn.com/v1/integration/member`,
      headers: {
        ""api-key"": `${this.freshlearn.$auth.api_key}`,
      },
    })
  },
})
"
Joomla!,{{custom_fields.joomla_host_domain}}/api/index.php/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    joomla: {
      type: ""app"",
      app: ""joomla"",
    }
  },
  async run({steps, $}) {
    
    return await axios($, {
      url: `${this.joomla.$auth.joomla_host_domain}/api/index.php/v1/users`,
      headers: {
        ""X-Joomla-Token"": `${this.joomla.$auth.api_key}`,
      },
    })
  },
})
"
signNow,{{custom_fields.environment}}/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    signnow: {
      type: ""app"",
      app: ""signnow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.signnow.$auth.environment}/user`,
      headers: {
        Authorization: `Bearer ${this.signnow.$auth.oauth_access_token}`,
      },
    })
  },
})
"
CrowdPower,https://www.pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    crowdpower: {
      type: ""app"",
      app: ""crowdpower"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.pipedream.com`,
      headers: {
        ""Authorization"": `Bearer ${this.crowdpower.$auth.application_key}`,
      },
    })
  },
})
"
Daily,https://api.daily.co/v1/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    daily: {
      type: ""app"",
      app: ""daily"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.daily.co/v1/`,
      headers: {
        Authorization: `Bearer ${this.daily.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
BaseLinker,https://api.baselinker.com/connector.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    baselinker: {
      type: ""app"",
      app: ""baselinker"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""method"": `getExternalStoragesList`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.baselinker.com/connector.php`,
      headers: {
        ""X-BLToken"": `${this.baselinker.$auth.api_key}`,
      },
      data,
    })
  },
})
"
PayTrace,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    paytrace: {
      type: ""app"",
      app: ""paytrace"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.paytrace.com/`,
      headers: {
        Authorization: `Bearer ${this.paytrace.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Jacob Test,https://eomljn9g23nbhgq.m.pipedream.net,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jacob_test: {
      type: ""app"",
      app: ""jacob_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://eomljn9g23nbhgq.m.pipedream.net`,
      headers: {
        Authorization: `Bearer testtoken21212`,
        ""x-airtable-api-key"": `${this.jacob_test.$auth.api_key}`,
      },
      params: {
        foo: `test`,
      },
    })
  },
})
"
Shopmonkey,https://api.shopmonkey.io/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shopmonkey: {
      type: ""app"",
      app: ""shopmonkey"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.shopmonkey.io/v2/users`,
      headers: {
        Authorization: `Bearer ${this.shopmonkey.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Axonaut,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    axonaut: {
      type: ""app"",
      app: ""axonaut"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        ""userApiKey"": `${this.axonaut.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Sales Simplify,https://api.salessimplify.com/api/v1/lead,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sales_simplify: {
      type: ""app"",
      app: ""sales_simplify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.salessimplify.com/api/v1/lead`,
      headers: {
        Authorization: `Bearer ${this.sales_simplify.$auth.api_key}`,
      },
      params: {
        pageNo: `1`,
        limit: `10`,
      },
    })
  },
})
"
Superdocu,https://api.superdocu.com/api/v1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    superdocu: {
      type: ""app"",
      app: ""superdocu"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.superdocu.com/api/v1/contacts`,
      headers: {
        Authorization: `Bearer ${this.superdocu.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Updown.io,https://updown.io/api/nodes,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    updown_io: {
      type: ""app"",
      app: ""updown_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://updown.io/api/nodes`,
      params: {
        ""api-key"": `${this.updown_io.$auth.api_key}`,
      },
    })
  },
})
"
RealPhoneValidation,https://api.realvalidation.com/rpvWebService/RealPhoneValidationTurbo.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    realphonevalidation: {
      type: ""app"",
      app: ""realphonevalidation"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.realvalidation.com/rpvWebService/RealPhoneValidationTurbo.php`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      params: {
        output: `json`,
        phone: `6197211158`,
        token: `${this.realphonevalidation.$auth.api_key}`,
      },
    })
  },
})
"
Device Magic,https://api.devicemagic.com/organizations/{{custom_fields.organization_id}}/forms.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    device_magic: {
      type: ""app"",
      app: ""device_magic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.devicemagic.com/organizations/${this.device_magic.$auth.organization_id}/forms.json`,
      headers: {
        ""Authorization"": `Basic ${this.device_magic.$auth.api_token}`,
      },
    })
  },
})
"
Tookan,https://api.tookanapp.com/v2/get_user_details,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tookan: {
      type: ""app"",
      app: ""tookan"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""api_key"": `${this.tookan.$auth.api_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.tookanapp.com/v2/get_user_details`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Survicate,https://data-api.survicate.com/v1/surveys,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    survicate: {
      type: ""app"",
      app: ""survicate"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://data-api.survicate.com/v1/surveys`,
      headers: {
        ""Authorization"": `Basic ${this.survicate.$auth.api_key}`,
      },
    })
  },
})
"
CraftMyPDF,https://api.craftmypdf.com/v1/list-templates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    craftmypdf: {
      type: ""app"",
      app: ""craftmypdf"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.craftmypdf.com/v1/list-templates`,
      headers: {
        ""X-API-KEY"": `${this.craftmypdf.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
ZeroBounce,https://api.zerobounce.net/v2/getcredits,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zerobounce: {
      type: ""app"",
      app: ""zerobounce"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.zerobounce.net/v2/getcredits`,
      params: {
        api_key: `${this.zerobounce.$auth.api_key}`,
      },
    })
  },
})
"
OnceHub,https://api.oncehub.com/v2/test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    oncehub: {
      type: ""app"",
      app: ""oncehub"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.oncehub.com/v2/test`,
      headers: {
        ""Accept"": `application/json`,
        ""API-Key"": `${this.oncehub.$auth.api_key}`,
      },
    })
  },
})
"
RegFox,https://api.webconnex.com/v2/public/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    regfox: {
      type: ""app"",
      app: ""regfox"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.webconnex.com/v2/public/ping`,
      headers: {
        ""apiKey"": `${this.regfox.$auth.api_key}`,
      },
    })
  },
})
"
Supercast,https://supercast.tech/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    supercast: {
      type: ""app"",
      app: ""supercast"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://supercast.tech/api/v1/users`,
      headers: {
        Authorization: `Bearer ${this.supercast.$auth.access_token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
OKSign,https://oksign.be/services/rest/v1/document/exists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    oksign: {
      type: ""app"",
      app: ""oksign"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://oksign.be/services/rest/v1/document/exists`,
      headers: {
        ""x-oksign-authorization"": `${this.oksign.$auth.api_key}`,
        ""x-oksign-docid"": `504054-8D73D624-8EC5-EA1C-B932-8ACB7EF25585`,
        ""accept"": `application/json; charset=utf-8`,
      },
    })
  },
})
"
Givebutter,https://api.givebutter.com/v1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    givebutter: {
      type: ""app"",
      app: ""givebutter"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.givebutter.com/v1/contacts`,
      headers: {
        Authorization: `Bearer ${this.givebutter.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Recruitee,https://api.recruitee.com/c/{{custom_fields.company_id}}/candidates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    recruitee: {
      type: ""app"",
      app: ""recruitee"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.recruitee.com/c/${this.recruitee.$auth.company_id}/candidates`,
      headers: {
        Authorization: `Bearer ${this.recruitee.$auth.api_token}`,
      },
    })
  },
})
"
Opayo,https://pi-test.sagepay.com/api/v1/merchant-session-keys,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    opayo: {
      type: ""app"",
      app: ""opayo"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""vendorName"": `sandbox`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://pi-test.sagepay.com/api/v1/merchant-session-keys`,
      headers: {
        ""Authorization"": `Basic ${this.opayo.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
MurList,https://api.murlist.com/campaign/all,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    murlist: {
      type: ""app"",
      app: ""murlist"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.murlist.com/campaign/all`,
      headers: {
        ""X-API-KEY"": `${this.murlist.$auth.api_key}`,
      },
    })
  },
})
"
Swell,https://pdapikey:y5v6NXdClbaDsV0AU3FTXNuRKovuAsqK@api.swell.store/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    swell: {
      type: ""app"",
      app: ""swell"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pdapikey:y5v6NXdClbaDsV0AU3FTXNuRKovuAsqK@api.swell.store/accounts`,
    })
  },
})
"
Rise,https://api.rise.com/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rise: {
      type: ""app"",
      app: ""rise"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rise.com/users`,
      headers: {
        Authorization: `Bearer ${this.rise.$auth.api_key}`,
      },
    })
  },
})
"
1SaaS,https://v2.1saas.co/1saas/auth,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    onesaas: {
      type: ""app"",
      app: ""onesaas"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://v2.1saas.co/1saas/auth`,
      headers: {
        ""auth"": `${this.onesaas.$auth.api_key}`,
      },
    })
  },
})
"
Cal.com,https://{{custom_fields.domain}}/v1/hooks,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cal_com: {
      type: ""app"",
      app: ""cal_com"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.cal_com.$auth.domain}/v1/hooks`,
      params: {
        apiKey: `${this.cal_com.$auth.api_key}`,
      },
    })
  },
})
"
QADeputy,https://app.qadeputy.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    qadeputy: {
      type: ""app"",
      app: ""qadeputy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.qadeputy.com/api/v1/users`,
      headers: {
        Authorization: `Bearer ${this.qadeputy.$auth.api_key}`,
        ""Content-Type"": `application/json`,
        ""Accept"": `application/json`,
        ""email"": `${this.qadeputy.$auth.email}`,
      },
    })
  },
})
"
Junip,https://api.juniphq.com/v1/stores,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    junip: {
      type: ""app"",
      app: ""junip"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.juniphq.com/v1/stores`,
      headers: {
        ""Junip-Store-Key"": `${this.junip.$auth.store_key}`,
      },
    })
  },
})
"
ChatBot,https://api.chatbot.com/stories,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chatbot: {
      type: ""app"",
      app: ""chatbot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.chatbot.com/stories`,
      headers: {
        Authorization: `Bearer ${this.chatbot.$auth.developer_access_token}`,
      },
    })
  },
})
"
Laposta,https://api.laposta.nl/v2/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    laposta: {
      type: ""app"",
      app: ""laposta"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.laposta.nl/v2/list`,
      auth: {
        username: `${this.laposta.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Parsio.io,https://api.parsio.io/mailboxes/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    parsio_io: {
      type: ""app"",
      app: ""parsio_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.parsio.io/mailboxes/`,
      headers: {
        ""X-API-Key"": `${this.parsio_io.$auth.api_key}`,
      },
    })
  },
})
"
CommerceHQ,https://{{custom_fields.subdomain}}.commercehq.com/api/v1/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    commercehq: {
      type: ""app"",
      app: ""commercehq"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.commercehq.$auth.subdomain}.commercehq.com/api/v1/customers`,
      auth: {
        username: `${this.commercehq.$auth.api_key}`,
        password: `${this.commercehq.$auth.api_password}`,
      },
    })
  },
})
"
3Scribe,https://api.3scri.be/transcribe,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    threescribe: {
      type: ""app"",
      app: ""threescribe"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""name"": `testfromsubmitform`,
      ""requesturl"": `true`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.3scri.be/transcribe`,
      headers: {
        ""APIKey"": `${this.threescribe.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Productive.io,https://api.productive.io/api/v2/people,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    productive_io: {
      type: ""app"",
      app: ""productive_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.productive.io/api/v2/people`,
      headers: {
        ""X-Auth-Token"": `${this.productive_io.$auth.auth_token}`,
        ""X-Organization-Id"": `${this.productive_io.$auth.organization_id}`,
        ""Content-Type"": `application/vnd.api+json`,
      },
    })
  },
})
"
Formvio,https://app.formvio.com/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    formvio: {
      type: ""app"",
      app: ""formvio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.formvio.com/api/v1/me`,
      headers: {
        ""X-API-Key"": `${this.formvio.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Robomotion,https://api.robomotion.io/v1/users.list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    robotmotion: {
      type: ""app"",
      app: ""robotmotion"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.robomotion.io/v1/users.list`,
      headers: {
        Authorization: `Bearer ${this.robotmotion.$auth.api_key}`,
      },
    })
  },
})
"
Easy-LMS,https://www.onlinequizcreator.com/?r=api/exam/addParticipant,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    easy_lms: {
      type: ""app"",
      app: ""easy_lms"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""apikey"": `${this.easy_lms.$auth.api_key_id}`,
      ""email"": `sergio.eliot2@gmail.com`,
      ""name"": `Serge`,
      ""examId"": `512188`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://www.onlinequizcreator.com/?r=api/exam/addParticipant`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
CalendarHero,https://api.calendarhero.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    calendarhero: {
      type: ""app"",
      app: ""calendarhero"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.calendarhero.com/user`,
      headers: {
        ""Authorization"": `${this.calendarhero.$auth.api_key}`,
      },
    })
  },
})
"
Transistor.fm,https://api.transistor.fm/v1,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    transistor_fm: {
      type: ""app"",
      app: ""transistor_fm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.transistor.fm/v1`,
      headers: {
        ""x-api-key"": `${this.transistor_fm.$auth.api_key}`,
      },
    })
  },
})
"
Mailify,https://mailifyapis.com/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailify: {
      type: ""app"",
      app: ""mailify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://mailifyapis.com/v1/users`,
      auth: {
        username: `${this.mailify.$auth.account_number}`,
        password: `${this.mailify.$auth.api_key}`,
      },
    })
  },
})
"
Mailrefine,https://app.mailrefine.com/api/v1/single-email-verify,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailrefine: {
      type: ""app"",
      app: ""mailrefine"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""email"": `your_email_here`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://app.mailrefine.com/api/v1/single-email-verify`,
      params: {
        api_token: `${this.mailrefine.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Nifty Images,https://api.niftyimages.com/v1/Maps,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nifty_images: {
      type: ""app"",
      app: ""nifty_images"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.niftyimages.com/v1/Maps`,
      headers: {
        ""ApiKey"": `${this.nifty_images.$auth.api_key}`,
      },
    })
  },
})
"
Captain Data,https://api.captaindata.co/v2/{{custom_fields.project_uid}}/workflows,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    captaindata: {
      type: ""app"",
      app: ""captaindata"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.captaindata.co/v2/${this.captaindata.$auth.project_uid}/workflows`,
      headers: {
        ""x-api-key"": `${this.captaindata.$auth.api_key}`,
      },
    })
  },
})
"
Sellix,https://dev.sellix.io/v1/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sellix: {
      type: ""app"",
      app: ""sellix"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://dev.sellix.io/v1/customers`,
      headers: {
        Authorization: `Bearer ${this.sellix.$auth.api_key}`,
      },
    })
  },
})
"
E-conomic,https://restapi.e-conomic.com/self,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    e_conomic: {
      type: ""app"",
      app: ""e_conomic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://restapi.e-conomic.com/self`,
      headers: {
        ""X-AppSecretToken"": `${this.e_conomic.$auth.app_secret_token}`,
        ""X-AgreementGrantToken"": `${this.e_conomic.$auth.agreement_grant_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Bigpicture.io,https://company.bigpicture.io/v1/companies/find,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bigpicture_io: {
      type: ""app"",
      app: ""bigpicture_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://company.bigpicture.io/v1/companies/find`,
      headers: {
        ""Authorization"": `${this.bigpicture_io.$auth.api_key}`,
      },
      params: {
        domain: `bigpicture.io`,
      },
    })
  },
})
"
Red-amber.green,https://app.red-amber.green/api/monitors,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    red_amber_green: {
      type: ""app"",
      app: ""red_amber_green"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.red-amber.green/api/monitors`,
      headers: {
        Authorization: `Bearer ${this.red_amber_green.$auth.api_token}`,
      },
    })
  },
})
"
GoDial,https://enterprise.godial.cc/meta/api/externals/accounts/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    godial: {
      type: ""app"",
      app: ""godial"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://enterprise.godial.cc/meta/api/externals/accounts/list`,
      params: {
        access_token: `${this.godial.$auth.api_token}`,
      },
    })
  },
})
"
Repuso,https://api.repuso.com/public/v1/users/get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    repuso: {
      type: ""app"",
      app: ""repuso"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.repuso.com/public/v1/users/get`,
      headers: {
        Authorization: `Bearer ${this.repuso.$auth.api_key}`,
      },
    })
  },
})
"
Doppler SecretOps Platform,test,"import { providers } from 'gitops-secrets'
 
export default defineComponent({
  props: {
    doppler_secretops: {
      type: ""app"",
      app: ""doppler_secretops"",
    }
  },
  async run({steps, $}) {
    process.env.DOPPLER_TOKEN = `${this.doppler_secretops.$auth.service_token}`;
    const secrets = await providers.doppler.fetch();
    $.export('secrets', secrets);
  },
})"
Inksprout,https://inksprout.co/api/v1/summarize,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    inksprout: {
      type: ""app"",
      app: ""inksprout"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""url"": `https://www.blogto.com/restaurants/minami-toronto/`,
      ""text"": ``,
    }
    return await axios($, {
      method: ""post"",
      url: `https://inksprout.co/api/v1/summarize`,
      headers: {
        Authorization: `Bearer ${this.inksprout.$auth.api_key}`,
      },
      data,
    })
  },
})
"
RD Station CRM,https://plugcrm.net/api/v1/token/check,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rd_station_crm: {
      type: ""app"",
      app: ""rd_station_crm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://plugcrm.net/api/v1/token/check`,
      params: {
        token: `${this.rd_station_crm.$auth.api_token}`,
      },
    })
  },
})
"
WOXO,https://api.woxo.tech/video/project/{your_project_id},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    woxo: {
      type: ""app"",
      app: ""woxo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.woxo.tech/video/project/{your_project_id}`,
      headers: {
        ""accept"": `application/json`,
        ""team"": `${this.woxo.$auth.team}`,
        ""token"": `${this.woxo.$auth.api_key}`,
      },
    })
  },
})
"
MixMax,https://api.mixmax.com/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mixmax: {
      type: ""app"",
      app: ""mixmax"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mixmax.com/v1/users/me`,
      headers: {
        ""X-API-Token"": `${this.mixmax.$auth.api_key}`,
      },
    })
  },
})
"
AMQP,test,"export default defineComponent({
  props: {
    aqmp: {
      type: ""app"",
      app: ""amqp"",
    },
  },
  async run({ steps, $ }) {
    // Access required authentication info via:
    // this.aqmp.$auth.host
    // this.aqmp.$auth.post
    // this.aqmp.$auth.username
    // this.aqmp.$auth.password
  },
})"
7todos,https://7todos.com/api/v1/auth,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    seventodos: {
      type: ""app"",
      app: ""seventodos"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://7todos.com/api/v1/auth`,
      headers: {
        ""key"": `${this.seventodos.$auth.key}`,
        ""workspaceId"": `${this.seventodos.$auth.workspaceId}`,
      },
    })
  },
})
"
Custom OAuth 2.0 App,{{custom_fields.basic_test_request}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    oauth_app: {
      type: ""app"",
      app: ""oauth_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.oauth_app.$auth.basic_test_request}`,
      headers: {
        Authorization: `Bearer ${this.oauth_app.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Crove,https://v2.api.crove.app/api/integrations/external/templates/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    crove_app: {
      type: ""app"",
      app: ""crove_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://v2.api.crove.app/api/integrations/external/templates/`,
      headers: {
        ""Content-Type"": `application/json`,
        ""X-API-KEY"": `${this.crove_app.$auth.api_key}`,
      },
    })
  },
})
"
Squarespace,https://api.squarespace.com/1.0/authorization/website,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    squarespace: {
      type: ""app"",
      app: ""squarespace"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.squarespace.com/1.0/authorization/website`,
      headers: {
        Authorization: `Bearer ${this.squarespace.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Demio,https://my.demio.com/api/v1/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    demio: {
      type: ""app"",
      app: ""demio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://my.demio.com/api/v1/events`,
      headers: {
        ""Api-Key"": `${this.demio.$auth.api_key}`,
        ""Api-Secret"": `${this.demio.$auth.api_secret}`,
      },
    })
  },
})
"
Jellyreach,https://api.jellyreach.com/v1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jellyreach: {
      type: ""app"",
      app: ""jellyreach"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.jellyreach.com/v1/contacts`,
      headers: {
        ""Accept"": `application/json`,
        ""Authorization"": `${this.jellyreach.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Snapp,https://us.stannp.com/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    snapp: {
      type: ""app"",
      app: ""snapp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://us.stannp.com/api/v1/users/me`,
      auth: {
        username: `${this.snapp.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Workast,https://api.todobot.io/user/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    workast: {
      type: ""app"",
      app: ""workast"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.todobot.io/user/me`,
      headers: {
        Authorization: `Bearer ${this.workast.$auth.api_token}`,
      },
    })
  },
})
"
Pingdom,https://api.pingdom.com/api/3.1/checks,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pingdom: {
      type: ""app"",
      app: ""pingdom"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pingdom.com/api/3.1/checks`,
      headers: {
        ""Authorization"": `Bearer ${this.pingdom.$auth.api_token}`,
      },
    })
  },
})
"
Weworkbook,https://api.weworkbook.com/api/v1/courses,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    weworkbook: {
      type: ""app"",
      app: ""weworkbook"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.weworkbook.com/api/v1/courses`,
      headers: {
        Authorization: `Bearer ${this.weworkbook.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Document360,https://apihub.document360.io/v2/teams,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    document360: {
      type: ""app"",
      app: ""document360"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apihub.document360.io/v2/teams`,
      headers: {
        ""api_token"": `${this.document360.$auth.api_key}`,
      },
    })
  },
})
"
Acumbamail ,https://acumbamail.com/api/1/getLists/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    acumbamail: {
      type: ""app"",
      app: ""acumbamail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://acumbamail.com/api/1/getLists/`,
      params: {
        auth_token: `${this.acumbamail.$auth.auth_token}`,
      },
    })
  },
})
"
Apex 27,https://api.apex27.co.uk/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    apex_27: {
      type: ""app"",
      app: ""apex_27"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.apex27.co.uk/users`,
      headers: {
        ""X-Api-Key"": `${this.apex_27.$auth.api_key}`,
      },
    })
  },
})
"
Uchat,https://www.uchat.com.au/api/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    uchat: {
      type: ""app"",
      app: ""uchat"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.uchat.com.au/api/me`,
      headers: {
        Authorization: `Bearer ${this.uchat.$auth.api_key}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Marketing Master IO,https://api.marketingmaster.io/v1/contacts/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    marketing_master_io: {
      type: ""app"",
      app: ""marketing_master_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.marketingmaster.io/v1/contacts/list`,
      headers: {
        Authorization: `Bearer ${this.marketing_master_io.$auth.api_token}`,
      },
    })
  },
})
"
TeamUp,https://api.teamup.com/ksmqibrhbngqe5nha2/configuration,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    teamup: {
      type: ""app"",
      app: ""teamup"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.teamup.com/ksmqibrhbngqe5nha2/configuration`,
      headers: {
        ""Teamup-Token"": `${this.teamup.$auth.api_key}`,
      },
    })
  },
})
"
Grist,https://docs.getgrist.com/api/orgs,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    grist: {
      type: ""app"",
      app: ""grist"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://docs.getgrist.com/api/orgs`,
      headers: {
        Authorization: `Bearer ${this.grist.$auth.api_key}`,
      },
    })
  },
})
"
Simplescraper,https://simplescraper.io/api/of8IsLa9PPMvKEMjoWdE,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    simplescraper: {
      type: ""app"",
      app: ""simplescraper"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://simplescraper.io/api/of8IsLa9PPMvKEMjoWdE`,
      params: {
        apikey: `${this.simplescraper.$auth.api_key}`,
      },
    })
  },
})
"
Flowflu,https://{{custom_fields.subdomain}}.flowlu.com/api/v1/module/crm/lead/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    flowflu: {
      type: ""app"",
      app: ""flowflu"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.flowflu.$auth.subdomain}.flowlu.com/api/v1/module/crm/lead/list`,
      params: {
        api_key: `${this.flowflu.$auth.api_key}`,
      },
    })
  },
})
"
Ocassion,https://app.getoccasion.com/api/v1/products,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ocassion: {
      type: ""app"",
      app: ""ocassion"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.getoccasion.com/api/v1/products`,
      auth: {
        username: `${this.ocassion.$auth.api_login}`,
        password: `${this.ocassion.$auth.api_secret}`,
      },
    })
  },
})
"
Letterdrop,https://letterdrop.com/api/v1/posts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    letterdrop: {
      type: ""app"",
      app: ""letterdrop"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `Pipedream`,
      ""offset"": `0`,
      ""limit"": `5`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://letterdrop.com/api/v1/posts`,
      headers: {
        ""api-key"": `${this.letterdrop.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Dux Soup,https://pipedream.com,"// To use any npm package on Pipedream, just import it
import axios from ""axios"";
import jsSHA from ""jssha"";

export default defineComponent({
  props: {
    dux_soup: {
      app: 'dux_soup'
    }
  },
  async run({ steps, $ }) {
    //test request props
    const targeturl = this.dux_soup.$auth.target_url;
    //test request custom_fields
    const auth_key = this.dux_soup.$auth.auth_key;

    var shaObj = new jsSHA(""SHA-1"", ""TEXT"");
    const timestamp = +new Date();
    let commandrequestjsonbody = {
      command: ""visit"",
      targeturl,
      userid: 100029680657483283342,
      timestamp: timestamp,
      params: { 
        profile: """",
      }
    }
    commandrequestjsonbody = JSON.stringify(commandrequestjsonbody);
    shaObj.setHMACKey(auth_key, ""TEXT"");
    shaObj.update(commandrequestjsonbody); 
    var hmac = shaObj.getHMAC(""B64"");
    const config = {
      url: targeturl,
      method: ""POST"",
      headers: {
        ""X-Dux-Signature"": hmac,
        ""Content-Type"": ""application/json""
      },
      data: commandrequestjsonbody
    };
      return (await axios(config)).data;
  },
})"
Mobivate SMS,https://api.mobivatebulksms.com:443/auth/test?api_key={{custom_fields.api_key}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mobivate_sms: {
      type: ""app"",
      app: ""mobivate_sms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mobivatebulksms.com:443/auth/test?api_key=${this.mobivate_sms.$auth.api_key}`,
    })
  },
})
"
Fresh KDS,https://integrations-api.ftservices.cloud/integrators/kds-information,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fresh_kds: {
      type: ""app"",
      app: ""fresh_kds"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://integrations-api.ftservices.cloud/integrators/kds-information`,
      headers: {
        ""x-integration-token"": `${this.fresh_kds.$auth.integration_token}`,
      },
    })
  },
})
"
Business Hangout,https://{{custom_fields.account_id}}.business-hangouts.com/dev-api/v1/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    business_hangout: {
      type: ""app"",
      app: ""business_hangout"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.business_hangout.$auth.account_id}.business-hangouts.com/dev-api/v1/events`,
      headers: {
        ""Content-type"": `application/json`,
      },
      auth: {
        username: `${this.business_hangout.$auth.account_id}`,
        password: `${this.business_hangout.$auth.api_key}`,
      },
    })
  },
})
"
Agiled,https://my.agiled.app/api/v1/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    agiled: {
      type: ""app"",
      app: ""agiled"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://my.agiled.app/api/v1/accounts`,
      headers: {
        ""accept"": `application/json`,
      },
      params: {
        api_token: `${this.agiled.$auth.api_key}`,
      },
    })
  },
})
"
Placid,https://api.placid.app/api/rest/dr00pd7g5,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    placid: {
      type: ""app"",
      app: ""placid"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.placid.app/api/rest/dr00pd7g5`,
      headers: {
        Authorization: `Bearer ${this.placid.$auth.api_token}`,
      },
    })
  },
})
"
DynaPictures,https://api.dynapictures.com/templates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dynapictures: {
      type: ""app"",
      app: ""dynapictures"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.dynapictures.com/templates`,
      headers: {
        Authorization: `Bearer ${this.dynapictures.$auth.api_key}`,
      },
    })
  },
})
"
VBOUT,https://api.vbout.com/1/app/me.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vbout: {
      type: ""app"",
      app: ""vbout"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.vbout.com/1/app/me.json`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      params: {
        key: `${this.vbout.$auth.api_key}`,
      },
    })
  },
})
"
Xperiencify,http://api.xperiencify.io/api/public/coach/courses/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    xperiencify: {
      type: ""app"",
      app: ""xperiencify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.xperiencify.io/api/public/coach/courses/`,
      params: {
        api_key: `${this.xperiencify.$auth.api_key}`,
      },
    })
  },
})
"
PersistIQ,https://api.persistiq.com/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    persistiq: {
      type: ""app"",
      app: ""persistiq"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.persistiq.com/v1/users`,
      headers: {
        ""x-api-key"": `${this.persistiq.$auth.api_key}`,
      },
    })
  },
})
"
Tolstoy,https://api.gotolstoy.com/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tolstoy: {
      type: ""app"",
      app: ""tolstoy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.gotolstoy.com/users/me`,
      headers: {
        Authorization: `Bearer ${this.tolstoy.$auth.api_key}`,
      },
    })
  },
})
"
Enormail,https://api.enormail.eu/api/1.0/account.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    enormail: {
      type: ""app"",
      app: ""enormail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.enormail.eu/api/1.0/account.json`,
      auth: {
        username: `${this.enormail.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Smaily,https://{{custom_fields.subdomain}}.sendsmaily.net/api/organizations/users.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smaily: {
      type: ""app"",
      app: ""smaily"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.smaily.$auth.subdomain}.sendsmaily.net/api/organizations/users.php`,
      auth: {
        username: `${this.smaily.$auth.username}`,
        password: `${this.smaily.$auth.password}`,
      },
    })
  },
})
"
Fab Form,https://fabform.io/f/{{custom_fields.endpoint}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fab_form: {
      type: ""app"",
      app: ""fab_form"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""firstName"": `Sergio`,
      ""lastName"": `Rodriguez`,
      ""email"": `sergio@pipekit.ccom`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://fabform.io/f/${this.fab_form.$auth.endpoint}`,
      data,
    })
  },
})
"
Softr,https://studio-api.softr.io/v1/api/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    softr: {
      type: ""app"",
      app: ""softr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://studio-api.softr.io/v1/api/users`,
      headers: {
        ""Softr-Api-Key"": `${this.softr.$auth.api_key}`,
        ""Softr-Domain"": `${this.softr.$auth.domain}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Niceboard,https://apidirectories.niceboard.co/api/v1/jobs?key={{custom_fields.secret_key}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    niceboard: {
      type: ""app"",
      app: ""niceboard"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apidirectories.niceboard.co/api/v1/jobs?key=${this.niceboard.$auth.secret_key}`,
    })
  },
})
"
Api2pdf,https://v2.api2pdf.com/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    api2pdf: {
      type: ""app"",
      app: ""api2pdf"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://v2.api2pdf.com/balance`,
      params: {
        apikey: `${this.api2pdf.$auth.api_key}`,
      },
    })
  },
})
"
Schedule it,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    schedule_it: {
      type: ""app"",
      app: ""schedule_it"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
    })
  },
})
"
Snapchat Marketing,https://adsapi.snapchat.com/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    snapchat_marketing: {
      type: ""app"",
      app: ""snapchat_marketing"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://adsapi.snapchat.com/v1/me`,
      headers: {
        Authorization: `Bearer ${this.snapchat_marketing.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Nectar CRM,https://app.nectarcrm.com.br/crm/api/1/contatos/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nectar_crm: {
      type: ""app"",
      app: ""nectar_crm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.nectarcrm.com.br/crm/api/1/contatos/`,
      headers: {
        ""Access-Token"": `${this.nectar_crm.$auth.api_token}`,
      },
    })
  },
})
"
Amplenote,https://api.amplenote.com/v4/notes,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amplenote: {
      type: ""app"",
      app: ""amplenote"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.amplenote.com/v4/notes`,
      headers: {
        Authorization: `Bearer ${this.amplenote.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Coinbase Commerce,https://api.commerce.coinbase.com/checkouts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    coinbase_commerce: {
      type: ""app"",
      app: ""coinbase_commerce"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.commerce.coinbase.com/checkouts`,
      headers: {
        ""X-CC-Api-Key"": `${this.coinbase_commerce.$auth.api_key}`,
        ""X-CC-Version"": `2018-03-22`,
      },
    })
  },
})
"
Phone.com,https://api.phone.com/v4/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    phone_com: {
      type: ""app"",
      app: ""phone_com"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.phone.com/v4/accounts`,
      headers: {
        Authorization: `Bearer ${this.phone_com.$auth.access_token}`,
      },
    })
  },
})
"
Verifalia,test,"import { VerifaliaRestClient } from ""verifalia""
export default defineComponent({
  props: {
    verifalia: {
      type: ""app"",
      app: ""verifalia"",
    }
  },
  async run({steps, $}) {
    const verifaliaClient = new VerifaliaRestClient({
    	username: this.verifalia.$auth.username,
    	password: this.verifalia.$auth.password
    });

    return await verifaliaClient
    	.emailValidations
    	.submit('batman@gmail.com', true);
  },
})"
Sympla,https://api.sympla.com.br/public/v3/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sympla: {
      type: ""app"",
      app: ""sympla"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sympla.com.br/public/v3/events`,
      headers: {
        ""s_token"": `${this.sympla.$auth.token}`,
      },
    })
  },
})
"
LOVO,https://pipedream.com/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lovo: {
      type: ""app"",
      app: ""lovo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com/`,
    })
  },
})
"
Graphy,https://api.ongraphy.com/public/v1/products,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    graphy: {
      type: ""app"",
      app: ""graphy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ongraphy.com/public/v1/products`,
      params: {
        mid: `${this.graphy.$auth.MID}`,
        key: `${this.graphy.$auth.api_token}`,
      },
    })
  },
})
"
Float,https://api.float.com/v3/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    float: {
      type: ""app"",
      app: ""float"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.float.com/v3/accounts`,
      headers: {
        Authorization: `Bearer ${this.float.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
ReferralRock,https://api.referralrock.com/api/programs,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    referralrock: {
      type: ""app"",
      app: ""referralrock"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.referralrock.com/api/programs`,
      auth: {
        username: `${this.referralrock.$auth.public_key}`,
        password: `${this.referralrock.$auth.private_key}`,
      },
    })
  },
})
"
QuickEmailVerification,https://api.quickemailverification.com/v1/verify,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    quickemailverification: {
      type: ""app"",
      app: ""quickemailverification"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.quickemailverification.com/v1/verify`,
      params: {
        email: `richard@quickemailverification.com`,
        apikey: `${this.quickemailverification.$auth.api_key}`,
      },
    })
  },
})
"
Dialpad,https://dialpad.com/api/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dialpad: {
      type: ""app"",
      app: ""dialpad"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://dialpad.com/api/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.dialpad.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Render,https://api.render.com/v1/owners,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    render: {
      type: ""app"",
      app: ""render"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.render.com/v1/owners`,
      headers: {
        Authorization: `Bearer ${this.render.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
SalesBlink,https://run.salesblink.io/api/my-team,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    salesblink: {
      type: ""app"",
      app: ""salesblink"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://run.salesblink.io/api/my-team`,
      headers: {
        ""Authorization"": `${this.salesblink.$auth.api_key}`,
      },
    })
  },
})
"
PropelAuth,https://api.propelauth.com/whoami,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    propelauth: {
      type: ""app"",
      app: ""propelauth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.propelauth.com/whoami`,
      headers: {
        Authorization: `Bearer ${this.propelauth.$auth.api_key}`,
      },
    })
  },
})
"
Freshmarketer,https://{{custom_fields.domain}}.myfreshworks.com/crm/sales/api/sales_accounts/filters,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freshmarketer: {
      type: ""app"",
      app: ""freshmarketer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.freshmarketer.$auth.domain}.myfreshworks.com/crm/sales/api/sales_accounts/filters`,
      headers: {
        ""Authorization"": `Token token=${this.freshmarketer.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Plug & Paid,https://api.plugnpaid.com/v1/products/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    plug_paid: {
      type: ""app"",
      app: ""plug_paid"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.plugnpaid.com/v1/products/list`,
      headers: {
        Authorization: `Bearer ${this.plug_paid.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Botbaba,https://app.botbaba.io/api/GetBots,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    botbaba: {
      type: ""app"",
      app: ""botbaba"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.botbaba.io/api/GetBots`,
      headers: {
        ""Accept"": `application/json`,
        ""Authorization"": `${this.botbaba.$auth.api_key}`,
      },
    })
  },
})
"
Mailcheck,https://api.mailcheck.co/v1/emails/operations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailcheck: {
      type: ""app"",
      app: ""mailcheck"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mailcheck.co/v1/emails/operations`,
      headers: {
        Authorization: `Bearer ${this.mailcheck.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
NextDNS,https://api.nextdns.io/profiles/abc123,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nextdns: {
      type: ""app"",
      app: ""nextdns"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.nextdns.io/profiles/abc123`,
      headers: {
        ""X-Api-Key"": `${this.nextdns.$auth.api_key}`,
      },
    })
  },
})
"
Typless,https://developers.typless.com/api/start-training,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    typless: {
      type: ""app"",
      app: ""typless"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""document_type_name"": `simple-invoice`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://developers.typless.com/api/start-training`,
      headers: {
        ""Accept"": `application/json`,
        ""Authorization"": `Token ${this.typless.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Typebot,https://typebot.io/api/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    typebot: {
      type: ""app"",
      app: ""typebot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://typebot.io/api/users/me`,
      headers: {
        Authorization: `Bearer ${this.typebot.$auth.api_token}`,
      },
    })
  },
})
"
SatisMeter,https://app.satismeter.com/api/v3/projects/{{custom_fields.project_id}}/campaigns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    satismeter: {
      type: ""app"",
      app: ""satismeter"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.satismeter.com/api/v3/projects/${this.satismeter.$auth.project_id}/campaigns`,
      headers: {
        Authorization: `Bearer ${this.satismeter.$auth.read_key}`,
      },
    })
  },
})
"
Flutterwave,https://api.flutterwave.com/v3/beneficiaries,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    flutterwave: {
      type: ""app"",
      app: ""flutterwave"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.flutterwave.com/v3/beneficiaries`,
      headers: {
        Authorization: `Bearer ${this.flutterwave.$auth.secret_api_key}`,
      },
    })
  },
})
"
Order Desk,https://app.orderdesk.me/api/v2/test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    order_desk: {
      type: ""app"",
      app: ""order_desk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.orderdesk.me/api/v2/test`,
      headers: {
        ""ORDERDESK-STORE-ID"": `${this.order_desk.$auth.store_id}`,
        ""ORDERDESK-API-KEY"": `${this.order_desk.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Starshipit,https://api.starshipit.com/api/orders/unshipped,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    starshipit: {
      type: ""app"",
      app: ""starshipit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.starshipit.com/api/orders/unshipped`,
      headers: {
        ""Content-Type"": `application/json`,
        ""StarShipIT-Api-Key"": `${this.starshipit.$auth.api_key}`,
        ""Ocp-Apim-Subscription-Key"": `${this.starshipit.$auth.subscription_key}`,
      },
    })
  },
})
"
Tomba ,https://api.tomba.io/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tomba: {
      type: ""app"",
      app: ""tomba"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.tomba.io/v1/me`,
      headers: {
        ""X-Tomba-Key"": `${this.tomba.$auth.api_key}`,
        ""X-Tomba-Secret"": `${this.tomba.$auth.api_secret}`,
      },
    })
  },
})
"
CloudFill,https://api.cloudfill.io/api/meta/pdf/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudfill: {
      type: ""app"",
      app: ""cloudfill"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cloudfill.io/api/meta/pdf/`,
      headers: {
        ""X-API-Key"": `${this.cloudfill.$auth.api_key}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Pikaso,https://pikaso.me/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pikaso: {
      type: ""app"",
      app: ""pikaso"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pikaso.me/api/v1/me`,
      auth: {
        username: `${this.pikaso.$auth.token}`,
        password: `${this.pikaso.$auth.token_secret}`,
      },
    })
  },
})
"
ScopeMaster,https://api.scopemaster.com/v1/version,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    scopemaster: {
      type: ""app"",
      app: ""scopemaster"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.scopemaster.com/v1/version`,
      auth: {
        username: `${this.scopemaster.$auth.email}`,
        password: `${this.scopemaster.$auth.api_key}`,
      },
    })
  },
})
"
Beehiiv,https://api.beehiiv.com/v1/publications,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    beehiiv: {
      type: ""app"",
      app: ""beehiiv"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.beehiiv.com/v1/publications`,
      headers: {
        ""X-ApiKey"": `${this.beehiiv.$auth.api_key}`,
      },
    })
  },
})
"
SignWell ,https://www.signwell.com/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    signwell: {
      type: ""app"",
      app: ""signwell"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.signwell.com/api/v1/me`,
      headers: {
        ""X-Api-Key"": `${this.signwell.$auth.api_key}`,
      },
    })
  },
})
"
Wildberries,https://suppliers-api.wildberries.ru/public/api/v1/info,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wildberries: {
      type: ""app"",
      app: ""wildberries"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://suppliers-api.wildberries.ru/public/api/v1/info`,
      headers: {
        ""accept"": `application/json`,
        ""Authorization"": `${this.wildberries.$auth.api_key}`,
      },
      params: {
        quantity: `0`,
      },
    })
  },
})
"
Funnelbolt,https://app.funnelbolt.com/script/get_contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    funnelbolt: {
      type: ""app"",
      app: ""funnelbolt"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""zapier_auth_key"": `${this.funnelbolt.$auth.auth_token}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://app.funnelbolt.com/script/get_contacts`,
      data,
    })
  },
})
"
Brosix,https://box-n2.brosix.com/api/v1/message/send/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    brosix: {
      type: ""app"",
      app: ""brosix"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""apikey "": `${this.brosix.$auth.api_key}`,
      ""msg"": `Thees I Like`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://box-n2.brosix.com/api/v1/message/send/`,
      data,
    })
  },
})
"
Picky Assist,https://pickyassist.com/app/api/v2/check-balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    picky_assist: {
      type: ""app"",
      app: ""picky_assist"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""token"": `${this.picky_assist.$auth.api_token}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://pickyassist.com/app/api/v2/check-balance`,
      data,
    })
  },
})
"
ProfitWell,https://api.profitwell.com/v2/plans/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    profitwell: {
      type: ""app"",
      app: ""profitwell"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.profitwell.com/v2/plans/`,
      headers: {
        ""Authorization"": `${this.profitwell.$auth.api_token}`,
      },
    })
  },
})
"
APITemplate.io,https://rest.apitemplate.io/v2/list-objects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    apitemplate_io: {
      type: ""app"",
      app: ""apitemplate_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.apitemplate.io/v2/list-objects`,
      headers: {
        ""X-API-KEY"": `${this.apitemplate_io.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Helcim ,https://secure.myhelcim.com/api/account-info,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    helcim: {
      type: ""app"",
      app: ""helcim"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://secure.myhelcim.com/api/account-info`,
      headers: {
        ""account-id"": `${this.helcim.$auth.account_id}`,
        ""api-token"": `${this.helcim.$auth.api_token}`,
      },
    })
  },
})
"
WarriorPlus,https://warriorplus.com/api/v2/sales/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    warriorplus: {
      type: ""app"",
      app: ""warriorplus"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://warriorplus.com/api/v2/sales/`,
      params: {
        apiKey: `${this.warriorplus.$auth.api_key}`,
      },
    })
  },
})
"
User.com,https://{{custom_fields.subdomain}}.user.com/api/public/users/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    user_com: {
      type: ""app"",
      app: ""user_com"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.user_com.$auth.subdomain}.user.com/api/public/users/`,
      headers: {
        ""Authorization"": `Token ${this.user_com.$auth.api_key}`,
        ""Accept"": `*/*; version=2`,
      },
    })
  },
})
"
Ecologi,https://public.ecologi.com/users/apidirectories/trees,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ecologi: {
      type: ""app"",
      app: ""ecologi"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://public.ecologi.com/users/apidirectories/trees`,
      headers: {
        Authorization: `Bearer ${this.ecologi.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Xendit,https://api.xendit.co/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    xendit: {
      type: ""app"",
      app: ""xendit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.xendit.co/balance`,
      auth: {
        username: `${this.xendit.$auth.secret_key}`,
        password: ``,
      },
    })
  },
})
"
ClickMeeting ,https://api.clickmeeting.com/v1/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clickmeeting: {
      type: ""app"",
      app: ""clickmeeting"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.clickmeeting.com/v1/ping`,
      headers: {
        ""X-Api-Key"": `${this.clickmeeting.$auth.api_key}`,
      },
    })
  },
})
"
gobio.link,https://gobio.link/api/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gobio_link: {
      type: ""app"",
      app: ""gobio_link"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://gobio.link/api/user`,
      headers: {
        Authorization: `Bearer ${this.gobio_link.$auth.api_key}`,
      },
    })
  },
})
"
VirusTotal ,https://www.virustotal.com/api/v3/files/upload_url,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    virustotal: {
      type: ""app"",
      app: ""virustotal"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.virustotal.com/api/v3/files/upload_url`,
      headers: {
        ""x-apikey"": `${this.virustotal.$auth.api_key}`,
      },
    })
  },
})
"
linqs,https://linqs.cc/api/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    linqs_cc: {
      type: ""app"",
      app: ""linqs_cc"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://linqs.cc/api/user`,
      headers: {
        Authorization: `Bearer ${this.linqs_cc.$auth.api_key}`,
      },
    })
  },
})
"
Post My Link,https://postmylink.com/api/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    post_my_link: {
      type: ""app"",
      app: ""post_my_link"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://postmylink.com/api/account`,
      headers: {
        Authorization: `Bearer ${this.post_my_link.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
PubMed,https://eutils.ncbi.nlm.nih.gov/entrez/eutils/egquery.fcgi,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pubmed: {
      type: ""app"",
      app: ""pubmed"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/egquery.fcgi`,
      headers: {
        ""accept"": `application/json`,
      },
      params: {
        api_key: `${this.pubmed.$auth.api_key}`,
        term: `HIV`,
      },
    })
  },
})
"
GetScreenshot,https://api.rasterwise.com/v1/get-screenshot,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    getscreenshot: {
      type: ""app"",
      app: ""getscreenshot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rasterwise.com/v1/get-screenshot`,
      params: {
        apikey: `${this.getscreenshot.$auth.api_key}`,
        url: `https://pipedream.com`,
      },
    })
  },
})
"
Website Toolbox,https://api.websitetoolbox.com/v1/api/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    website_toolbox: {
      type: ""app"",
      app: ""website_toolbox"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.websitetoolbox.com/v1/api/users`,
      headers: {
        ""Accept"": `application/json`,
        ""x-api-key"": `${this.website_toolbox.$auth.api_key}`,
        ""x-api-username"": `${this.website_toolbox.$auth.username}`,
      },
    })
  },
})
"
pretix,https://pretix.eu/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pretix: {
      type: ""app"",
      app: ""pretix"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pretix.eu/api/v1/me`,
      headers: {
        Authorization: `Bearer ${this.pretix.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Signaturely,https://api.signaturely.com/api/v1/user/by-api,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    signaturely: {
      type: ""app"",
      app: ""signaturely"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.signaturely.com/api/v1/user/by-api`,
      headers: {
        ""Authorization"": `Api-Key ${this.signaturely.$auth.api_key}`,
      },
    })
  },
})
"
17track,https://api.17track.net/track/v2/getquota,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    seventeentrack: {
      type: ""app"",
      app: ""seventeentrack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.17track.net/track/v2/getquota`,
      headers: {
        ""17token"": `${this.seventeentrack.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Helpspace,https://api.helpspace.com/api/v1/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    helpspace: {
      type: ""app"",
      app: ""helpspace"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.helpspace.com/api/v1/customers`,
      headers: {
        Authorization: `Bearer ${this.helpspace.$auth.access_token}`,
        ""Hs-Client-Id"": `${this.helpspace.$auth.client_id}`,
      },
    })
  },
})
"
Tapfiliate,https://api.tapfiliate.com/1.6/affiliates/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tapfiliate: {
      type: ""app"",
      app: ""tapfiliate"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.tapfiliate.com/1.6/affiliates/`,
      headers: {
        ""X-Api-Key"": `${this.tapfiliate.$auth.api_key}`,
      },
    })
  },
})
"
ShippoToken,https://api.goshippo.com/shipments/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shippotoken: {
      type: ""app"",
      app: ""shippotoken"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.goshippo.com/shipments/`,
      headers: {
        ""Authorization"": `ShippoToken ${this.shippotoken.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
TMetric,https://app.tmetric.com/api/v3/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tmetric: {
      type: ""app"",
      app: ""tmetric"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.tmetric.com/api/v3/user`,
      headers: {
        Authorization: `Bearer ${this.tmetric.$auth.api_token}`,
      },
    })
  },
})
"
SmartEngage ,https://api.smartengage.com/avatars/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smartengage: {
      type: ""app"",
      app: ""smartengage"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.smartengage.com/avatars/list`,
      headers: {
        Authorization: `Bearer ${this.smartengage.$auth.api_key}`,
      },
    })
  },
})
"
Docdown,https://api.docdown.io/v1/auth,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    docdown: {
      type: ""app"",
      app: ""docdown"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.docdown.io/v1/auth`,
      headers: {
        Authorization: `Bearer ${this.docdown.$auth.api_key}`,
      },
    })
  },
})
"
Helpwise,https://app.helpwise.io/dev-apis/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    helpwise: {
      type: ""app"",
      app: ""helpwise"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://app.helpwise.io/dev-apis/users/me`,
      headers: {
        ""Accept"": `application/json`,
        ""Accept-Encoding"": `gzip, deflate`,
        ""Authorization"": `${this.helpwise.$auth.api_key}:${this.helpwise.$auth.api_secret}`,
      },
    })
  },
})
"
Growsurf,https://api.growsurf.com/v2/campaigns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    growsurf: {
      type: ""app"",
      app: ""growsurf"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.growsurf.com/v2/campaigns`,
      headers: {
        Authorization: `Bearer ${this.growsurf.$auth.api_key}`,
      },
    })
  },
})
"
Clustdoc,https://clustdoc.com/api/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clustdoc: {
      type: ""app"",
      app: ""clustdoc"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://clustdoc.com/api/users`,
      headers: {
        Authorization: `Bearer ${this.clustdoc.$auth.api_key}`,
      },
    })
  },
})
"
FROGED,https://api.froged.com/ws/{{custom_fields.ws_id}}/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    frogged: {
      type: ""app"",
      app: ""frogged"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""patch"",
      url: `https://api.froged.com/ws/{{custom_fields.ws_id}}/contacts`,
      headers: {
        ""apikey"": `${this.frogged.$auth.api_key}`,
      },
    })
  },
})
"
HelpCrunch ,https://api.helpcrunch.com/v1/organization,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    helpcrunch: {
      type: ""app"",
      app: ""helpcrunch"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.helpcrunch.com/v1/organization`,
      headers: {
        Authorization: `Bearer ${this.helpcrunch.$auth.api_key}`,
      },
    })
  },
})
"
Membervault,https://{{custom_fields.subdomain}}.vipmembervault.com/api/get_courses,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    membervault: {
      type: ""app"",
      app: ""membervault"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.membervault.$auth.subdomain}.vipmembervault.com/api/get_courses`,
      params: {
        apikey: `${this.membervault.$auth.api_key}`,
      },
    })
  },
})
"
Yr,https://api.met.no/weatherapi/locationforecast/2.0/compact,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    yr: {
      type: ""app"",
      app: ""yr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.met.no/weatherapi/locationforecast/2.0/compact`,
      headers: {
        ""User-Agent"": `pipedream.com`,
      },
      params: {
        lat: `51.5`,
        lon: `0`,
      },
    })
  },
})
"
Dashly.io,https://api.dashly.app/v1/apps/5028/activeusers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dashly_io: {
      type: ""app"",
      app: ""dashly_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.dashly.app/v1/apps/5028/activeusers`,
      params: {
        auth_token: `${this.dashly_io.$auth.auth_token}`,
      },
    })
  },
})
"
Deepgram,https://api.deepgram.com/v1/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    deepgram: {
      type: ""app"",
      app: ""deepgram"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.deepgram.com/v1/projects`,
      headers: {
        ""Authorization"": `Token ${this.deepgram.$auth.api_key}`,
      },
    })
  },
})
"
Google Maps Platform,https://maps.googleapis.com/maps/api/distancematrix/json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_maps_platform: {
      type: ""app"",
      app: ""google_maps_platform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://maps.googleapis.com/maps/api/distancematrix/json`,
      params: {
        key: `${this.google_maps_platform.$auth.api_key}`,
        origins: `28.994328,77.704871`,
        destinations: `29.147364,77.610155`,
        mode: `Walking`,
      },
    })
  },
})
"
Ortto ,https://{{custom_fields.region}}/v1/person/get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ortto: {
      type: ""app"",
      app: ""ortto"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""q"": ``,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.ortto.$auth.region}/v1/person/get`,
      headers: {
        ""X-Api-Key"": `${this.ortto.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
LiveSession,https://api.livesession.io/v1/sessions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    livesession: {
      type: ""app"",
      app: ""livesession"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.livesession.io/v1/sessions`,
      headers: {
        Authorization: `Bearer ${this.livesession.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
HoverSignal,https://app.hoversignal.com/api/v1/test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hoversignal: {
      type: ""app"",
      app: ""hoversignal"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.hoversignal.com/api/v1/test`,
      headers: {
        ""X-Api-Key"": `${this.hoversignal.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Happy Scribe,https://www.happyscribe.com/api/v1/transcriptions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    happy_scribe: {
      type: ""app"",
      app: ""happy_scribe"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.happyscribe.com/api/v1/transcriptions`,
      headers: {
        Authorization: `Bearer ${this.happy_scribe.$auth.api_key}`,
      },
    })
  },
})
"
LoopedIn,https://api.loopedin.io/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    loopedin: {
      type: ""app"",
      app: ""loopedin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.loopedin.io/v1/account`,
      headers: {
        Authorization: `Bearer ${this.loopedin.$auth.api_token}`,
        ""Content-Type"": `  application/json`,
      },
    })
  },
})
"
FedEx,test,"export default defineComponent({
  props: {
    fedex: {
      type: ""app"",
      app: ""fedex"",
    }
  },
  async run({steps, $}) {
    // See the FedEx API docs here:
    // https://developer.fedex.com/api/en-us/guides/best-practices.html
  },
})
"
SendTalk,https://sendtalk-api.taptalk.io/api/v1/message/send_whatsapp,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendtalk: {
      type: ""app"",
      app: ""sendtalk"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""phone"": `6281212345678`,
      ""messageType"": `text`,
      ""body"": `Hi this is a message`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://sendtalk-api.taptalk.io/api/v1/message/send_whatsapp`,
      headers: {
        ""API-Key"": `${this.sendtalk.$auth.api_key}`,
        ""Content-Type"": `application/json`,
        ""User-Agent"": `Pipedrea`,
      },
      data,
    })
  },
})
"
OneTalk,https://onetalk-api.taptalk.io/api/integration/v1/inbox/case/get_updated_list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    onetalk: {
      type: ""app"",
      app: ""onetalk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://onetalk-api.taptalk.io/api/integration/v1/inbox/case/get_updated_list`,
      headers: {
        ""API-Key"": `${this.onetalk.$auth.api_key}`,
        ""Content-Type"": `application/json`,
        ""User-Agent"": `Pipedream.com`,
      },
      params: {
        since_timestamp: `1625889159`,
      },
    })
  },
})
"
Expensify,https://integrations.expensify.com/Integration-Server/ExpensifyIntegrations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    expensify: {
      type: ""app"",
      app: ""expensify"",
    }
  },
  async run({steps, $}) {
    const requestBody = 
      `requestJobDescription={
        ""type"":""get"",
        ""credentials"":{
            ""partnerUserID"": ""${this.expensify.$auth.partnerUserId}"",
            ""partnerUserSecret"": ""${this.expensify.$auth.partnerUserSecret}""
        },
        ""inputSettings"":{
            ""type"":""policyList"",
        }
      }`
    return await axios($, {
      method: ""post"",
      url: `https://integrations.expensify.com/Integration-Server/ExpensifyIntegrations`,
      data: requestBody,
    })
  },
})
"
Readwise,https://readwise.io/api/v2/books/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    readwise: {
      type: ""app"",
      app: ""readwise"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://readwise.io/api/v2/books/`,
      headers: {
        ""Authorization"": `${this.readwise.$auth.accesss_token}`,
      },
    })
  },
})
"
SMTP2GO ,https://api.smtp2go.com/v3/domain/view,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smtp2go: {
      type: ""app"",
      app: ""smtp2go"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""api_key"": `${this.smtp2go.$auth.api_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.smtp2go.com/v3/domain/view`,
      data,
    })
  },
})
"
Degreed,https://api.{{custom_fields.base_url}}/api/v2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    degreed: {
      type: ""app"",
      app: ""degreed"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.${this.degreed.$auth.base_url}/api/v2/users/me`,
      headers: {
        Authorization: `Bearer ${this.degreed.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Namely,https://{{custom_fields.subdomain}}.namely.com/api/v1/profiles/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    namely: {
      type: ""app"",
      app: ""namely"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.namely.$auth.subdomain}.namely.com/api/v1/profiles/me`,
      headers: {
        Authorization: `Bearer ${this.namely.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Conveyor,https://api.conveyor.com/api/v2/exchange/authorization_requests,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    conveyor: {
      type: ""app"",
      app: ""conveyor"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.conveyor.com/api/v2/exchange/authorization_requests`,
      headers: {
        ""X-API-KEY"": `${this.conveyor.$auth.api_key}`,
      },
    })
  },
})
"
10to8,https://10to8.com/api/booking/v2/service,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tento8: {
      type: ""app"",
      app: ""tento8"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://10to8.com/api/booking/v2/service`,
      headers: {
        ""Authorization"": `token ${this.tento8.$auth.api_token}`,
      },
    })
  },
})
"
TRIGGERcmd,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    triggercmd: {
      type: ""app"",
      app: ""triggercmd"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""computer"": `insert_computer_name_here`,
      ""trigger"": `insert_trigger_name_here`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://www.triggercmd.com/oauth/pipedream`,
      headers: {
        Authorization: `Bearer ${this.triggercmd.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Propeller,{{custom_fields.base_path}}orders/search,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    propeller: {
      type: ""app"",
      app: ""propeller"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""status"": `NEW`,
    }
    return await axios($, {
      method: ""post"",
      url: `${this.propeller.$auth.base_path}orders/search`,
      headers: {
        Authorization: `Bearer ${this.propeller.$auth.oauth_access_token}`,
      },
      data,
    })
  },
})
"
Upstash,{{custom_fields.REDIS_REST_URL}}/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    upstash: {
      type: ""app"",
      app: ""upstash"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.upstash.$auth.REDIS_REST_URL}/ping`,
      headers: {
        Authorization: `Bearer ${this.upstash.$auth.REDIS_REST_TOKEN}`,
      },
    })
  },
})
"
IntelliSMS,https://sms.smartmessagingservices.net/api/BasicAPIAuthentication,"import { axios } from '@pipedream/platform'

export default defineComponent({
  props: {
    intellisms: {
      type: ""app"",
      app: ""intellisms"",
    }
  },
  async run({steps, $}) {
    const { username, password } = this.intellisms;

    return axios($, {
      url: 'https://sms.smartmessagingservices.net/api/UreadMessages/MMSMOMessage',
      method: 'POST',
      data: {
        username,
        password,
      }
    })
  },
})
"
Alchemy,https://eth-mainnet.alchemyapi.io/nft/v2/{{custom_fields.api_key}}/getSpamContracts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    alchemy: {
      type: ""app"",
      app: ""alchemy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://eth-mainnet.alchemyapi.io/nft/v2/${this.alchemy.$auth.api_key}/getSpamContracts`,
    })
  },
})
"
Vectera,https://www.vectera.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vectera: {
      type: ""app"",
      app: ""vectera"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.vectera.com/api/v1/users`,
      headers: {
        ""Content-Type"": `${this.vectera.$auth.api_token}`,
      },
    })
  },
})
"
ISN,https://inspectionsupport.com/{{custom_fields.company_key}}/rest/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    isn: {
      type: ""app"",
      app: ""isn"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://inspectionsupport.com/${this.isn.$auth.company_key}/rest/me`,
      auth: {
        username: `${this.isn.$auth.username}`,
        password: `${this.isn.$auth.password}`,
      },
    })
  },
})
"
Mapbox,https://api.mapbox.com/directions/v5/mapbox/driving/41.41338%2C2.27403%3B41.40338%2C2.17403,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mapbox: {
      type: ""app"",
      app: ""mapbox"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mapbox.com/directions/v5/mapbox/driving/41.41338%2C2.27403%3B41.40338%2C2.17403`,
      params: {
        access_token: `${this.mapbox.$auth.access_token}`,
        alternatives: `true`,
        geometries: `geojson`,
        language: `en`,
        overview: `simplified`,
        steps: `true`,
      },
    })
  },
})
"
Persona,https://withpersona.com/api/v1/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    persona: {
      type: ""app"",
      app: ""persona"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://withpersona.com/api/v1/accounts`,
      headers: {
        Authorization: `Bearer ${this.persona.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Mux,https://api.mux.com/video/v1/assets,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mux: {
      type: ""app"",
      app: ""mux"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mux.com/video/v1/assets`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.mux.$auth.access_key}`,
        password: `${this.mux.$auth.secret_key}`,
      },
    })
  },
})
"
Cohere Platform,https://api.cohere.ai/small/tokenize,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cohere_platform: {
      type: ""app"",
      app: ""cohere_platform"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""text"": `Tokenize this!`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.cohere.ai/small/tokenize`,
      headers: {
        Authorization: `Bearer ${this.cohere_platform.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Railsr,https://play.railsbank.com/v1/customer/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    railsr: {
      type: ""app"",
      app: ""railsr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://play.railsbank.com/v1/customer/me`,
      headers: {
        ""Authorization"": `API-Key ${this.railsr.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Finix,https://{{custom_fields.domain}}.com/identities,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    finix: {
      type: ""app"",
      app: ""finix"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.finix.$auth.domain}.com/identities`,
      headers: {
        ""Content-Type"": `application/vnd.json+api`,
      },
      auth: {
        username: `${this.finix.$auth.username}`,
        password: `${this.finix.$auth.password}`,
      },
    })
  },
})
"
Twitch Developer App,https://id.twitch.tv/oauth2/validate,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twitch_developer_app: {
      type: ""app"",
      app: ""twitch_developer_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://id.twitch.tv/oauth2/validate`,
      headers: {
        Authorization: `Bearer ${this.twitch_developer_app.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Chaport,https://app.chaport.com/api/v1/operators,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chaport: {
      type: ""app"",
      app: ""chaport"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.chaport.com/api/v1/operators`,
      headers: {
        Authorization: `Bearer ${this.chaport.$auth.oauth_access_token}`,
      },
    })
  },
})
"
EasyPost,https://api.easypost.com/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    easypost: {
      type: ""app"",
      app: ""easypost"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.easypost.com/v2/users`,
      auth: {
        username: `${this.easypost.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Radar,https://api.radar.io/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    radar: {
      type: ""app"",
      app: ""radar"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.radar.io/v1/users`,
      headers: {
        ""Authorization"": `${this.radar.$auth.api_key}`,
      },
    })
  },
})
"
Stedi ,https://apikeys.us.stedi.com/2022-01-19/api_keys,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    stedi: {
      type: ""app"",
      app: ""stedi"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apikeys.us.stedi.com/2022-01-19/api_keys`,
      headers: {
        ""Authorization"": `Key ${this.stedi.$auth.api_key}`,
      },
    })
  },
})
"
Belvo,https://sandbox.belvo.com/api/balances,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    belvo: {
      type: ""app"",
      app: ""belvo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://sandbox.belvo.com/api/balances`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.belvo.$auth.secret_id}`,
        password: `${this.belvo.$auth.secret_password}`,
      },
    })
  },
})
"
Duffel,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    duffel: {
      type: ""app"",
      app: ""duffel"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        Authorization: `Bearer ${this.duffel.$auth.access_token}`,
        ""Accept-Encoding"": `gzip`,
        ""Accept"": `application/json`,
        ""Duffel-Version"": `beta`,
      },
    })
  },
})
"
Codat,https://api.codat.io/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    codat: {
      type: ""app"",
      app: ""codat"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.codat.io/profile`,
      headers: {
        ""Authorization"": `${this.codat.$auth.authorization_header}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Guru,https://api.getguru.com/api/v1/teams,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    guru: {
      type: ""app"",
      app: ""guru"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.getguru.com/api/v1/teams`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.guru.$auth.username}`,
        password: `${this.guru.$auth.api_key}`,
      },
    })
  },
})
"
journy.io,https://api.journy.io/campaigns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    journy_io: {
      type: ""app"",
      app: ""journy_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.journy.io/campaigns`,
      headers: {
        ""X-Api-Key"": `${this.journy_io.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Finmo,https://api.finmo.net/v1/payin-method/all?country=AU&currency=AUD,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    finmo: {
      type: ""app"",
      app: ""finmo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.finmo.net/v1/payin-method/all?country=AU&currency=AUD`,
      auth: {
        username: `${this.finmo.$auth.access_key}`,
        password: `${this.finmo.$auth.secret_key}`,
      },
    })
  },
})
"
Circle,https://app.circle.so/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    circle: {
      type: ""app"",
      app: ""circle"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.circle.so/api/v1/me`,
      headers: {
        ""Authorization"": `Token ${this.circle.$auth.api_token}`,
      },
    })
  },
})
"
Exact,"https://start.exactonline.{{custom_fields.region}}/api/v1/current/Me?$select=UserID,Email","import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    exact: {
      type: ""app"",
      app: ""exact"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://start.exactonline.${this.exact.$auth.region}/api/v1/current/Me?$select=UserID,Email`,
      headers: {
        Authorization: `Bearer ${this.exact.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
      params: {
        ""$select"": `UserID,Email`,
      },
    })
  },
})
"
addevent,https://www.addevent.com/api/v1/me/calendars/list/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    addevent: {
      type: ""app"",
      app: ""addevent"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.addevent.com/api/v1/me/calendars/list/`,
      params: {
        token: `${this.addevent.$auth.api_token}`,
      },
    })
  },
})
"
2Factor SMS,http://2factor.in/API/V1/{{custom_fields.api_key}}/ADDON_SERVICES/BAL/TRANSACTIONAL_SMS,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twofactor_sms: {
      type: ""app"",
      app: ""twofactor_sms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://2factor.in/API/V1/${this.twofactor_sms.$auth.api_key}/ADDON_SERVICES/BAL/TRANSACTIONAL_SMS`,
    })
  },
})
"
Abyssale,https://api.abyssale.com/templates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    abyssale: {
      type: ""app"",
      app: ""abyssale"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.abyssale.com/templates`,
      headers: {
        ""x-api-key"": `${this.abyssale.$auth.api_key}`,
      },
    })
  },
})
"
Adasms,https://terminal.adasms.com/api/v1/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    adasms: {
      type: ""app"",
      app: ""adasms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://terminal.adasms.com/api/v1/balance`,
      params: {
        _token: `${this.adasms.$auth.api_key}`,
      },
    })
  },
})
"
Dots!,https://{{custom_fields.domain}}.com/api/users/create,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dots_: {
      type: ""app"",
      app: ""dots_"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""email"": `replace_with_email`,
      ""country_code"": `replace_with_country_code`,
      ""phone_number"": `replace_with_phone_number`,
      ""first_name"": `replace_with_first_name`,
      ""last_name"": `replace_with_last_name`,
      ""username"": `replace_with_username`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.dots_.$auth.domain}.com/api/users/create`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.dots_.$auth.client_id}`,
        password: `${this.dots_.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Twitter v2,https://api.twitter.com/2/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twitter_v2: {
      type: ""app"",
      app: ""twitter_v2"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.twitter.com/2/users/me`,
      headers: {
        Authorization: `Bearer ${this.twitter_v2.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Amazing Marvin,https://serv.amazingmarvin.com/api/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amazing_marvin: {
      type: ""app"",
      app: ""amazing_marvin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://serv.amazingmarvin.com/api/me`,
      headers: {
        ""X-API-Token"": `${this.amazing_marvin.$auth.api_token}`,
      },
    })
  },
})
"
Annature,https://api.annature.com.au/v1/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    annature: {
      type: ""app"",
      app: ""annature"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.annature.com.au/v1/accounts`,
      headers: {
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
        ""X-Annature-Id"": `${this.annature.$auth.id}`,
        ""X-Annature-Key"": `${this.annature.$auth.key}`,
      },
    })
  },
})
"
Etherscan,https://api.etherscan.io/api,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ethereum: {
      type: ""app"",
      app: ""ethereum"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.etherscan.io/api`,
      params: {
        module: `stats`,
        action: `ethsupply`,
        apikey: `${this.ethereum.$auth.api_token}`,
      },
    })
  },
})
"
Better Uptime,https://betteruptime.com/api/v2/monitors,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    better_uptime: {
      type: ""app"",
      app: ""better_uptime"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://betteruptime.com/api/v2/monitors`,
      headers: {
        Authorization: `Bearer ${this.better_uptime.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Logtail,https://logtail.com/api/v1/sources,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    logtail: {
      type: ""app"",
      app: ""logtail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://logtail.com/api/v1/sources`,
      headers: {
        Authorization: `Bearer ${this.logtail.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
BigMailer,https://api.bigmailer.io/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bigmailer: {
      type: ""app"",
      app: ""bigmailer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bigmailer.io/v1/me`,
      headers: {
        ""Accept"": `application/json`,
        ""X-API-Key"": `${this.bigmailer.$auth.api_key}`,
      },
    })
  },
})
"
Bouncer,https://api.usebouncer.com/v1/customer/user/current/credit,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bouncer: {
      type: ""app"",
      app: ""bouncer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.usebouncer.com/v1/customer/user/current/credit`,
      headers: {
        ""x-api-key"": `${this.bouncer.$auth.api_key}`,
      },
    })
  },
})
"
BulkSMS,https://api.bulksms.com/v1/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bulksms: {
      type: ""app"",
      app: ""bulksms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bulksms.com/v1/profile`,
      auth: {
        username: `${this.bulksms.$auth.token_id}`,
        password: `${this.bulksms.$auth.api_token}`,
      },
    })
  },
})
"
CallPage,https://core.callpage.io/api/v1/external/users/all,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    callpage: {
      type: ""app"",
      app: ""callpage"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://core.callpage.io/api/v1/external/users/all`,
      headers: {
        ""Authorization"": `${this.callpage.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
CodeREADr,https://api.codereadr.com/api/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    codereadr: {
      type: ""app"",
      app: ""codereadr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.codereadr.com/api/`,
      params: {
        section: `users`,
        action: `retrieve`,
        api_key: `${this.codereadr.$auth.api_key}`,
      },
    })
  },
})
"
D7 SMS,https://api.d7networks.com/messages/v1/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    d7_networks: {
      type: ""app"",
      app: ""d7_networks"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.d7networks.com/messages/v1/balance`,
      headers: {
        Authorization: `Bearer ${this.d7_networks.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
DocSpring,https://api.docspring.com/api/v1/authentication,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    docspring: {
      type: ""app"",
      app: ""docspring"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.docspring.com/api/v1/authentication`,
      auth: {
        username: `${this.docspring.$auth.token_id}`,
        password: `${this.docspring.$auth.token_secret}`,
      },
    })
  },
})
"
DoneDone ,https://2.donedone.com/public-api/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    donedone: {
      type: ""app"",
      app: ""donedone"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://2.donedone.com/public-api/accounts`,
      auth: {
        username: `${this.donedone.$auth.email}`,
        password: `${this.donedone.$auth.api_key}`,
      },
    })
  },
})
"
Dynalist,https://dynalist.io/api/v1/file/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dynalist: {
      type: ""app"",
      app: ""dynalist"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""token"": `${this.dynalist.$auth.api_token}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://dynalist.io/api/v1/file/list`,
      data,
    })
  },
})
"
EasyCSV,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    easycsv: {
      type: ""app"",
      app: ""easycsv"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
    })
  },
})
"
Email List Validation,https://app.emaillistvalidation.com/api/verifEmail,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    email_list_validation: {
      type: ""app"",
      app: ""email_list_validation"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.emaillistvalidation.com/api/verifEmail`,
      params: {
        secret: `${this.email_list_validation.$auth.api_key}`,
        email: `pdapikey@gmail.com`,
      },
    })
  },
})
"
Endorsal,https://api.endorsal.io/v1/testimonials,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    endorsal: {
      type: ""app"",
      app: ""endorsal"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.endorsal.io/v1/testimonials`,
      headers: {
        Authorization: `Bearer ${this.endorsal.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Eventee,https://eventee.co/public/api/v1/content,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    eventee: {
      type: ""app"",
      app: ""eventee"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://eventee.co/public/api/v1/content`,
      headers: {
        Authorization: `Bearer ${this.eventee.$auth.api_token}`,
      },
    })
  },
})
"
FinerWorks,https://api.finerworks.com/v3/list_order_status_definitions,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    finerworks: {
      type: ""app"",
      app: ""finerworks"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://api.finerworks.com/v3/list_order_status_definitions`,
      headers: {
        ""web_api_key"": `${this.finerworks.$auth.web_api_key}`,
        ""app_key"": `${this.finerworks.$auth.app_key}`,
      },
    })
  },
})
"
Google Directory,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform"";

export default defineComponent({
  props: {
    google_directory: {
      type: ""app"",
      app: ""google_directory"",
    }
  },
  async run({steps, $}) {
    return axios($, {
      url: ""https://admin.googleapis.com/admin/directory/v1/users"",
      headers: {
        Authorization: `Bearer ${this.google_directory.$auth.oauth_access_token}`
      }
    });
  },
})
"
Formstack Documents,https://www.webmerge.me/api/documents,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    formstack_documents: {
      type: ""app"",
      app: ""formstack_documents"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.webmerge.me/api/documents`,
      auth: {
        username: `${this.formstack_documents.$auth.api_key}`,
        password: `${this.formstack_documents.$auth.api_secret}`,
      },
    })
  },
})
"
Google Appsheet,https://api.appsheet.com/api/v2/apps/{{custom_fields.app_id}}/tables/{{your_table_here}}/Action,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_appsheet: {
      type: ""app"",
      app: ""google_appsheet"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""Action"": ""Find"",
      ""Properties"": `{
          ""Locale"": ""en-US"",
          ""Selector"": ""Filter(Sheet1, true)"",
          ""Timezone"":
          ""Pacific Standard Time""
      }`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.appsheet.com/api/v2/apps/${this.google_appsheet.$auth.app_id}/tables/{{your_table_here}}/Action`,
      headers: {
        ""ApplicationAccessKey"": `${this.google_appsheet.$auth.access_key}`,
      },
      data,
    })
  },
})
"
Elorus,https://api.elorus.com/v1.1/contacts/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    elorus: {
      type: ""app"",
      app: ""elorus"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.elorus.com/v1.1/contacts/`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `Token ${this.elorus.$auth.api_key}`,
        ""X-Elorus-Organization"": `${this.elorus.$auth.organization_id}`,
      },
    })
  },
})
"
GoDaddy,https://api.godaddy.com/v1/domains/available,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    godaddy: {
      type: ""app"",
      app: ""godaddy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.godaddy.com/v1/domains/available`,
      headers: {
        ""Authorization"": `sso-key ${this.godaddy.$auth.api_key}:${this.godaddy.$auth.api_secret}`,
      },
      params: {
        domain: `example.guru`,
      },
    })
  },
})
"
HelloLeads,https://app.helloleads.io/index.php/private/api/leads,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    helloleads: {
      type: ""app"",
      app: ""helloleads"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.helloleads.io/index.php/private/api/leads`,
      headers: {
        ""hls-key"": `token=${this.helloleads.$auth.api_key}`,
        ""Xemail"": `${this.helloleads.$auth.email}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Heyzine,https://heyzine.com/api1/rest,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    heyzine: {
      type: ""app"",
      app: ""heyzine"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://heyzine.com/api1/rest`,
      params: {
        ""k"": `${this.heyzine.$auth.api_key}`,
        pdf: `http://www.pdf995.com/samples/pdf.pdf`,
      },
    })
  },
})
"
Hippo Video,https://www.hippovideo.io/api/v1/me/videos/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hippo_video: {
      type: ""app"",
      app: ""hippo_video"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.hippovideo.io/api/v1/me/videos/list`,
      params: {
        email: `${this.hippo_video.$auth.email}`,
        api_key: `${this.hippo_video.$auth.api_key}`,
      },
    })
  },
})
"
Holded,https://api.holded.com/api/invoicing/v1/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    holded: {
      type: ""app"",
      app: ""holded"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.holded.com/api/invoicing/v1/contacts`,
      headers: {
        ""Accept"": `application/json`,
        ""key"": `${this.holded.$auth.api_key}`,
      },
    })
  },
})
"
Howuku,https://api.howuku.com/v1/feedback,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    howuku: {
      type: ""app"",
      app: ""howuku"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.howuku.com/v1/feedback`,
      headers: {
        ""Authorization"": `${this.howuku.$auth.api_key}`,
      },
    })
  },
})
"
HR Partner,https://api.hrpartner.io/employees,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hr_partner: {
      type: ""app"",
      app: ""hr_partner"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.hrpartner.io/employees`,
      headers: {
        ""x-api-key"": `${this.hr_partner.$auth.api_token}`,
      },
    })
  },
})
"
Hyperise,https://app.hyperise.io/api/v1/regular/users/current,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hyperise: {
      type: ""app"",
      app: ""hyperise"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.hyperise.io/api/v1/regular/users/current`,
      params: {
        api_token: `${this.hyperise.$auth.api_token}`,
      },
    })
  },
})
"
LabsMobile,https://api.labsmobile.com/json/balance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    labsmobile: {
      type: ""app"",
      app: ""labsmobile"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.labsmobile.com/json/balance`,
      auth: {
        username: `${this.labsmobile.$auth.email}`,
        password: `{{custom_fields.api_token}}`,
      },
    })
  },
})
"
ManyChat,https://api.manychat.com/fb/page/getInfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    manychat: {
      type: ""app"",
      app: ""manychat"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.manychat.com/fb/page/getInfo`,
      headers: {
        Authorization: `Bearer ${this.manychat.$auth.api_key}`,
        ""accept"": `application/json`,
      },
    })
  },
})
"
Message Auto Sender,https://app.messageautosender.com/api/v1/account/detail,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    message_auto_sender: {
      type: ""app"",
      app: ""message_auto_sender"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.messageautosender.com/api/v1/account/detail`,
      headers: {
        ""accept"": `application/json`,
        ""x-api-key"": `${this.message_auto_sender.$auth.api_key}`,
      },
    })
  },
})
"
MimePost,https://api.mimepost.com/v1/account/profile/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mimepost: {
      type: ""app"",
      app: ""mimepost"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mimepost.com/v1/account/profile/`,
      headers: {
        ""X-Auth-Token"": `${this.mimepost.$auth.api_token}`,
      },
    })
  },
})
"
ModalForms,https://app.modalforms.com/api/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    modalforms: {
      type: ""app"",
      app: ""modalforms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.modalforms.com/api/user`,
      headers: {
        Authorization: `Bearer ${this.modalforms.$auth.api_key}`,
      },
    })
  },
})
"
Namecheap,https://api.sandbox.namecheap.com/xml.response,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    namecheap: {
      type: ""app"",
      app: ""namecheap"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sandbox.namecheap.com/xml.response`,
      params: {
        ApiUser: `${this.namecheap.$auth.username}`,
        ApiKey: `${this.namecheap.$auth.api_key}`,
        UserName: `pdapikey`,
        Command: `namecheap.users.getBalances`,
        ClientIp: `34.201.71.54`,
      },
    })
  },
})
"
Nexweave,https://api.nexweave.com/api/v1/integration/campaign,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nexweave: {
      type: ""app"",
      app: ""nexweave"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.nexweave.com/api/v1/integration/campaign`,
      headers: {
        ""X-API-KEY"": `${this.nexweave.$auth.api_key}`,
      },
    })
  },
})
"
Omise,https://api.omise.co/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    omise: {
      type: ""app"",
      app: ""omise"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.omise.co/account`,
      auth: {
        username: `${this.omise.$auth.secret_key}`,
        password: ``,
      },
    })
  },
})
"
Paddle,https://vendors.paddle.com/api/2.0/product/get_products,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    paddle: {
      type: ""app"",
      app: ""paddle"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""vendor_id"": `${this.paddle.$auth.vendor_id}`,
      ""vendor_auth_code"": `${this.paddle.$auth.auth_code}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://vendors.paddle.com/api/2.0/product/get_products`,
      data,
    })
  },
})
"
PaperForm,https://api.paperform.co/v1/forms,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    paperform: {
      type: ""app"",
      app: ""paperform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.paperform.co/v1/forms`,
      headers: {
        Authorization: `Bearer ${this.paperform.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
ParseHub,https://www.parsehub.com/api/v2/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    parsehub: {
      type: ""app"",
      app: ""parsehub"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.parsehub.com/api/v2/projects`,
      params: {
        api_key: `${this.parsehub.$auth.api_key}`,
      },
    })
  },
})
"
Parvenu,https://data.parvenu.io/api-product/incoming-webhook/convert-company-names,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    parvenu: {
      type: ""app"",
      app: ""parvenu"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""api_key"": `${this.parvenu.$auth.api_key}`,
      ""company_name"": `Pipedream`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://data.parvenu.io/api-product/incoming-webhook/convert-company-names`,
      data,
    })
  },
})
"
Passcreator,https://app.passcreator.com/api/pass-template,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    passcreator: {
      type: ""app"",
      app: ""passcreator"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.passcreator.com/api/pass-template`,
      headers: {
        ""Authorization"": `${this.passcreator.$auth.api_key}`,
      },
    })
  },
})
"
Paystack,https://api.paystack.co/transaction/initialize,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    paystack: {
      type: ""app"",
      app: ""paystack"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""amount"": `1000`,
      ""email"": `actiondev.project@gmail.com`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.paystack.co/transaction/initialize`,
      headers: {
        Authorization: `Bearer ${this.paystack.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
PDFMonkey,https://api.pdfmonkey.io/api/v1/current_user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pdfmonkey: {
      type: ""app"",
      app: ""pdfmonkey"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pdfmonkey.io/api/v1/current_user`,
      headers: {
        Authorization: `Bearer ${this.pdfmonkey.$auth.api_key}`,
      },
    })
  },
})
"
Postbode,https://app.postbode.nu/api/mailbox/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    postbode: {
      type: ""app"",
      app: ""postbode"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.postbode.nu/api/mailbox/`,
      headers: {
        ""X-Authorization"": `${this.postbode.$auth.api_key}`,
      },
    })
  },
})
"
Proofly,https://proofly.io/api/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    proofly: {
      type: ""app"",
      app: ""proofly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://proofly.io/api/user`,
      headers: {
        ""X-Api-Key"": `${this.proofly.$auth.api_key}`,
      },
    })
  },
})
"
RetargetKit,https://api.retargetkit.com/v1/workspaces,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    retargetkit: {
      type: ""app"",
      app: ""retargetkit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.retargetkit.com/v1/workspaces`,
      headers: {
        Authorization: `Bearer ${this.retargetkit.$auth.api_key}`,
        ""Content-Type"": `application/json`,
        ""Acccept"": `application/json`,
      },
    })
  },
})
"
Rewardful,https://api.getrewardful.com/v1/affiliates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rewardful: {
      type: ""app"",
      app: ""rewardful"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.getrewardful.com/v1/affiliates`,
      auth: {
        username: `${this.rewardful.$auth.api_secret}`,
        password: ``,
      },
    })
  },
})
"
Salestown,http://api.salestown.in/v1/web/add/organization/{{custom_fields.api_key}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    salestown: {
      type: ""app"",
      app: ""salestown"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""organization"": `Api Directories`,
      ""address"": `Lone Av. 100`,
    }
    return await axios($, {
      method: ""post"",
      url: `http://api.salestown.in/v1/web/add/organization/${this.salestown.$auth.api_key}`,
      data,
    })
  },
})
"
Semaphore,https://api.semaphore.co/api/v4/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    semaphore: {
      type: ""app"",
      app: ""semaphore"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.semaphore.co/api/v4/account`,
      params: {
        apikey: `${this.semaphore.$auth.api_key}`,
      },
    })
  },
})
"
Sender,https://api.sender.net/v2/subscribers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sender: {
      type: ""app"",
      app: ""sender"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sender.net/v2/subscribers`,
      headers: {
        Authorization: `Bearer ${this.sender.$auth.api_token}`,
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Sendlane,https://api.sendlane.com/v2/senders,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendlane: {
      type: ""app"",
      app: ""sendlane"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sendlane.com/v2/senders`,
      headers: {
        Authorization: `Bearer ${this.sendlane.$auth.api_token}`,
        ""Content-Type"": `application/json`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Meetup,https://api.meetup.com/gql,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    meetup: {
      type: ""app"",
      app: ""meetup"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `query { self { id name } }`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.meetup.com/gql`,
      headers: {
        Authorization: `Bearer ${this.meetup.$auth.oauth_access_token}`,
      },
      data,
    })
  },
})
"
EasySendy,http://api.easysendy.com/ver1/listAPI,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    easysendy: {
      type: ""app"",
      app: ""easysendy"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""Content-Type"": `application/x-www-form-urlencoded`,
      ""req_type"": `allLists`,
      ""api_key"": `${this.easysendy.$auth.api_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `http://api.easysendy.com/ver1/listAPI`,
      data,
    })
  },
})
"
sevDesk,https://my.sevdesk.de/api/v1/Contact,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sevdesk: {
      type: ""app"",
      app: ""sevdesk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://my.sevdesk.de/api/v1/Contact`,
      headers: {
        ""Authorization"": `${this.sevdesk.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Shipday,https://api.shipday.com/orders,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shipday: {
      type: ""app"",
      app: ""shipday"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.shipday.com/orders`,
      headers: {
        ""Accept"": `application/json`,
        ""Authorization"": `Basic ${this.shipday.$auth.api_key}`,
      },
    })
  },
})
"
Shorten.REST,https://api.shorten.rest/clicks,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shorten_rest: {
      type: ""app"",
      app: ""shorten_rest"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.shorten.rest/clicks`,
      headers: {
        ""Content-Type"": `application/json`,
        ""x-api-key"": `${this.shorten_rest.$auth.api_key}`,
      },
    })
  },
})
"
ShortPixel,http://api.shortpixel.com/v2/api-status.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shortpixel: {
      type: ""app"",
      app: ""shortpixel"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.shortpixel.com/v2/api-status.php`,
      params: {
        key: `${this.shortpixel.$auth.api_key}`,
      },
    })
  },
})
"
SignalWire,https://{{custom_fields.domain}}.signalwire.com/api/video/rooms,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    signalwire: {
      type: ""app"",
      app: ""signalwire"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.signalwire.$auth.domain}.signalwire.com/api/video/rooms`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.signalwire.$auth.project_id}`,
        password: `${this.signalwire.$auth.api_key}`,
      },
    })
  },
})
"
SignRequest,https://{{custom_fields.subdomain}}.signrequest.com/api/v1/documents/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    signrequest: {
      type: ""app"",
      app: ""signrequest"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.signrequest.$auth.subdomain}.signrequest.com/api/v1/documents/`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `Token ${this.signrequest.$auth.api_token}`,
      },
    })
  },
})
"
SmartReach,https://api.smartreach.io/api/v1/campaigns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smartreach: {
      type: ""app"",
      app: ""smartreach"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.smartreach.io/api/v1/campaigns`,
      headers: {
        ""X-API-KEY"": `${this.smartreach.$auth.api_key}`,
      },
    })
  },
})
"
Anymail finder,https://api.anymailfinder.com/v5.0/validate.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    anymail_finder: {
      type: ""app"",
      app: ""anymail_finder"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""email"": `YOUR_EMAIL`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.anymailfinder.com/v5.0/validate.json`,
      headers: {
        Authorization: `Bearer ${this.anymail_finder.$auth.api_key}`,
      },
      data,
    })
  },
})
"
UpLead,https://api.uplead.com/v2/credits,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    uplead: {
      type: ""app"",
      app: ""uplead"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.uplead.com/v2/credits`,
      headers: {
        ""Authorization"": `${this.uplead.$auth.api_key}`,
      },
    })
  },
})
"
Sendle,https://{{custom_fields.domain}}.sendle.com/api/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendle: {
      type: ""app"",
      app: ""sendle"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.sendle.$auth.domain}.sendle.com/api/ping`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.sendle.$auth.sendle_id}`,
        password: `${this.sendle.$auth.api_key}`,
      },
    })
  },
})
"
Google Workspace Admin,https://www.googleapis.com/oauth2/v1/userinfo,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_workspace: {
      type: ""app"",
      app: ""google_workspace"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/oauth2/v1/userinfo`,
      headers: {
        Authorization: `Bearer ${this.google_workspace.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Cartes,https://cartes.io/api/maps,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cartes: {
      type: ""app"",
      app: ""cartes"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://cartes.io/api/maps`,
    })
  },
})
"
SMS-iT Cloud,https://controlpanel.smsit.ai/apis/getcreditbalance/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sms_it_cloud: {
      type: ""app"",
      app: ""sms_it_cloud"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://controlpanel.smsit.ai/apis/getcreditbalance/`,
      headers: {
        ""Content-Type"": `application/x-www-form-urlencoded`,
      },
      params: {
        apikey: `${this.sms_it_cloud.$auth.api_key}`,
        type: `SMS`,
      },
    })
  },
})
"
Wix,https://www.wixapis.com/contacts/v4/contacts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wix: {
      type: ""app"",
      app: ""wix"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.wixapis.com/contacts/v4/contacts`,
      headers: {
        Authorization: `Bearer ${this.wix.$auth.oauth_access_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
SocketLabs Marketing,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    socketlabs_marketing: {
      type: ""app"",
      app: ""socketlabs_marketing"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.socketlabs_marketing.$auth.server_id}`,
        password: `${this.socketlabs_marketing.$auth.api_key}`,
      },
    })
  },
})
"
stackby,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    stackby: {
      type: ""app"",
      app: ""stackby"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        ""api-key"": `${this.stackby.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Stripo,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    stripo: {
      type: ""app"",
      app: ""stripo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Stripo-Api-Auth"": `${this.stripo.$auth.api_key}`,
      },
    })
  },
})
"
Pointerpro,https://api.pointerpro.com/v1/respondents,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pointerpro: {
      type: ""app"",
      app: ""pointerpro"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pointerpro.com/v1/respondents`,
      headers: {
        ""Authorization"": `API ${this.pointerpro.$auth.api_key}`,
        ""Content-Type"": `application/json`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Free Dictionary,https://api.dictionaryapi.dev/api/v2/entries/en/<word>,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dictionary_api: {
      type: ""app"",
      app: ""dictionary_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.dictionaryapi.dev/api/v2/entries/en/<word>`,
    })
  },
})
"
Survey Sparrow,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    survey_sparrow: {
      type: ""app"",
      app: ""survey_sparrow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        Authorization: `Bearer ${this.survey_sparrow.$auth.api_key}`,
      },
    })
  },
})
"
Switchboard,https://api.canvas.switchboard.ai/templates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    switchboard: {
      type: ""app"",
      app: ""switchboard"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.canvas.switchboard.ai/templates`,
      headers: {
        ""X-API-Key"": `${this.switchboard.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Foxy,https://api.foxycart.com/reporting,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    foxy: {
      type: ""app"",
      app: ""foxy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.foxycart.com/reporting`,
      headers: {
        Authorization: `Bearer ${this.foxy.$auth.oauth_access_token}`,
        ""FOXY-API-VERSION"": `1`,
      },
    })
  },
})
"
SyncroMSP,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    syncromsp: {
      type: ""app"",
      app: ""syncromsp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        ""accept"": `application/json`,
        ""Authorization"": `${this.syncromsp.$auth.api_token}`,
      },
    })
  },
})
"
Syncro,https://{{custom_fields.subdomain}}.syncromsp.com/api/v1/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    syncro: {
      type: ""app"",
      app: ""syncro"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.syncro.$auth.subdomain}.syncromsp.com/api/v1/me`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `${this.syncro.$auth.api_token}`,
      },
    })
  },
})
"
Teamdeck,https://api.teamdeck.io/v1/bookings,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    teamdeck: {
      type: ""app"",
      app: ""teamdeck"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.teamdeck.io/v1/bookings`,
      headers: {
        ""X-Api-Key"": `${this.teamdeck.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
toyyibPay,https://{{custom_fields.hostname}}.com/index.php/api/getCategoryDetails,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    toyyibpay: {
      type: ""app"",
      app: ""toyyibpay"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""categoryCode"": `xp4qywii`,
      ""userSecretKey"": `${this.toyyibpay.$auth.api_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.toyyibpay.$auth.hostname}.com/index.php/api/getCategoryDetails`,
      headers: {
        ""Content-Type"": `x-www-form-urlencoded`,
      },
      data,
    })
  },
})
"
UptimeRobot,https://api.uptimerobot.com/v2/getAccountDetails,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    uptimerobot: {
      type: ""app"",
      app: ""uptimerobot"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""api_key"": `${this.uptimerobot.$auth.api_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.uptimerobot.com/v2/getAccountDetails`,
      data,
    })
  },
})
"
VerifyBee,https://app.verifybee.io/api/v1.3/verify/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    verifybee: {
      type: ""app"",
      app: ""verifybee"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""email"": `marc@salesforce.com`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://app.verifybee.io/api/v1.3/verify/`,
      headers: {
        ""Vb-Token"": `${this.verifybee.$auth.api_key}`,
      },
      data,
    })
  },
})
"
VivifyScrum,https://www.vivifyscrum.com/api/v1/board-export,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vivifyscrum: {
      type: ""app"",
      app: ""vivifyscrum"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.vivifyscrum.com/api/v1/board-export`,
      headers: {
        Authorization: `Bearer ${this.vivifyscrum.$auth.api_key}`,
      },
    })
  },
})
"
Voiceflow,https://general-runtime.voiceflow.com/state/user/YOUR_USER_ID,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    voice: {
      type: ""app"",
      app: ""voice"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://general-runtime.voiceflow.com/state/user/YOUR_USER_ID`,
      headers: {
        ""Accept"": `application/json`,
        ""Authorization"": `${this.voice.$auth.api_key}`,
      },
    })
  },
})
"
Vosfactures,https://{{custom_fields.domain}}.vosfactures.fr/clients.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vosfactures: {
      type: ""app"",
      app: ""vosfactures"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.vosfactures.$auth.domain}.vosfactures.fr/clients.json`,
      params: {
        api_token: `${this.vosfactures.$auth.api_token}`,
      },
    })
  },
})
"
Wappalyzer,https://api.wappalyzer.com/v2/credits/balance/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wappalyzer: {
      type: ""app"",
      app: ""wappalyzer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.wappalyzer.com/v2/credits/balance/`,
      headers: {
        ""x-api-key"": `${this.wappalyzer.$auth.api_key}`,
      },
    })
  },
})
"
Workiom,https://api.workiom.com/api/services/app/Apps/GetAll,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    workiom: {
      type: ""app"",
      app: ""workiom"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.workiom.com/api/services/app/Apps/GetAll`,
      headers: {
        ""Accept"": `text/plain`,
        ""X-Api-Key"": `${this.workiom.$auth.api_key}`,
      },
    })
  },
})
"
Worksnaps,https://api.worksnaps.com/api/projects.xml,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    worksnaps: {
      type: ""app"",
      app: ""worksnaps"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.worksnaps.com/api/projects.xml`,
      auth: {
        username: `${this.worksnaps.$auth.api_token}`,
        password: ``,
      },
    })
  },
})
"
WorldTime API,http://worldtimeapi.org/api/timezone/America/Monterrey,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    worldtime_api: {
      type: ""app"",
      app: ""worldtime_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://worldtimeapi.org/api/timezone/America/Monterrey`,
    })
  },
})
"
Showpad,https://{{custom_fields.subdomain}}.api.showpad.com/v4/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    showpad: {
      type: ""app"",
      app: ""showpad"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.showpad.$auth.subdomain}.api.showpad.com/v4/users`,
      headers: {
        Authorization: `Bearer ${this.showpad.$auth.oauth_access_token}`,
      },
    })
  },
})
"
XPS Ship,https://xpsshipper.com/restapi/v1/customers/{{custom_fields.customer_id}}/services,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    xps_ship: {
      type: ""app"",
      app: ""xps_ship"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://xpsshipper.com/restapi/v1/customers/${this.xps_ship.$auth.customer_id}/services`,
      headers: {
        ""Authorization"": `RSIS ${this.xps_ship.$auth.api_key}`,
      },
    })
  },
})
"
Darwinbox,https://{{custom_fields.subdomain}}.darwinbox.in/loginapi/employee,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    darwinbox: {
      type: ""app"",
      app: ""darwinbox"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""username"": `${this.darwinbox.$auth.username}`,
      ""password"": `${this.darwinbox.$auth.password}`,
      ""api_key"": `[AES256 encrypted string of(${this.darwinbox.$auth.api_key})]`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://${this.darwinbox.$auth.subdomain}.darwinbox.in/loginapi/employee`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.darwinbox.$auth.username}`,
        password: `${this.darwinbox.$auth.password}`,
      },
      data,
    })
  },
})
"
TurboHire,https://api.turbohire.co/api/jobs/:job-id,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    turbohire: {
      type: ""app"",
      app: ""turbohire"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.turbohire.co/api/jobs/:job-id`,
      headers: {
        ""X-Api-Key"": `${this.turbohire.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      params: {
        ""job-id"": `{{Job-ID}}`,
      },
    })
  },
})
"
KnowBe4,https://{{custom_fields.server_location}}.api.knowbe4.com/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    knowbe4: {
      type: ""app"",
      app: ""knowbe4"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.knowbe4.$auth.server_location}.api.knowbe4.com/v1/account`,
      headers: {
        Authorization: `Bearer ${this.knowbe4.$auth.api_key}`,
      },
    })
  },
})
"
Lever,https://api.lever.co/v1,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lever: {
      type: ""app"",
      app: ""lever"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lever.co/v1`,
      auth: {
        username: `${this.lever.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
(more:trees),https://api.moretrees.eco/v1/basic/viewCredits,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    more_trees_: {
      type: ""app"",
      app: ""more_trees_"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.moretrees.eco/v1/basic/viewCredits`,
      headers: {
        ""Authorization"": `${this.more_trees_.$auth.publc_validation_key}`,
      },
    })
  },
})
"
Adafruit IO,https://io.adafruit.com/api/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    adafruit_io: {
      type: ""app"",
      app: ""adafruit_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://io.adafruit.com/api/v2/user`,
      headers: {
        ""X-AIO-Key"": `${this.adafruit_io.$auth.active_key}`,
      },
    })
  },
})
"
IQAir AirVisual,http://api.airvisual.com/v2/countries,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    iqair_airvisual: {
      type: ""app"",
      app: ""iqair_airvisual"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.airvisual.com/v2/countries`,
      params: {
        key: `${this.iqair_airvisual.$auth.api_key}`,
      },
    })
  },
})
"
AirNow,https://www.airnowapi.org/aq/forecast/zipCode/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    airnow: {
      type: ""app"",
      app: ""airnow"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.airnowapi.org/aq/forecast/zipCode/`,
      params: {
        format: `application/json`,
        API_KEY: `${this.airnow.$auth.api_key}`,
        zipCode: `YOUR_ZIP_CODE`,
      },
    })
  },
})
"
Waitwhile,https://api.waitwhile.com/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    waitwhile: {
      type: ""app"",
      app: ""waitwhile"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.waitwhile.com/v2/users`,
      headers: {
        ""apiKey"": `${this.waitwhile.$auth.api_key}`,
      },
    })
  },
})
"
vk,https://api.vk.com/method/users.get,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vk: {
      type: ""app"",
      app: ""vk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.vk.com/method/users.get`,
      headers: {
        Authorization: `Bearer ${this.vk.$auth.oauth_access_token}`,
      },
      params: {
        ""v"": `5.131`,
      },
    })
  },
})
"
Ambient Weather,https://{{custom_fields.subdomain}}.ambientweather.net/v1/devices,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ambient_weather: {
      type: ""app"",
      app: ""ambient_weather"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.ambient_weather.$auth.subdomain}.ambientweather.net/v1/devices`,
      params: {
        applicationKey: `${this.ambient_weather.$auth.application_key}`,
        apiKey: `${this.ambient_weather.$auth.api_key}`,
      },
    })
  },
})
"
Apilio,https://api.apilio.com/api/v1/boolean_variables,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    apilio: {
      type: ""app"",
      app: ""apilio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.apilio.com/api/v1/boolean_variables`,
      auth: {
        username: `${this.apilio.$auth.username}`,
        password: `${this.apilio.$auth.password}`,
      },
    })
  },
})
"
BART,https://api.bart.gov/api/version.aspx?key={{custom_fields.api_key}}&json=y,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bart: {
      type: ""app"",
      app: ""bart"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bart.gov/api/version.aspx?key=${this.bart.$auth.api_key}&json=y`,
    })
  },
})
"
Google reCAPTCHA,https://www.google.com/recaptcha/api/siteverify,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_recaptcha: {
      type: ""app"",
      app: ""google_recaptcha"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""secret"": `${this.google_recaptcha.$auth.secret}`,
      ""response"": ``,
      ""remoteip"": ``,
    }
    return await axios($, {
      method: ""post"",
      url: `https://www.google.com/recaptcha/api/siteverify`,
      data,
    })
  },
})
"
Amilia,https://www.amilia.com/api/v3/en/keywords,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amilia: {
      type: ""app"",
      app: ""amilia"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.amilia.com/api/v3/en/keywords`,
      headers: {
        Authorization: `Bearer ${this.amilia.$auth.api_key}`,
      },
    })
  },
})
"
ecwid,https://app.ecwid.com/api/v3/{{custom_fields.storeId}}/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ecwid: {
      type: ""app"",
      app: ""ecwid"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.ecwid.com/api/v3/${this.ecwid.$auth.storeId}/profile`,
      headers: {
        Authorization: `Bearer ${this.ecwid.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Bureau of Economic Analysis,http://apps.bea.gov/api/data,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bureau_of_economic_analysis: {
      type: ""app"",
      app: ""bureau_of_economic_analysis"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://apps.bea.gov/api/data`,
      params: {
        UserID: `${this.bureau_of_economic_analysis.$auth.user_id}`,
        method: `GETDATASETLIST`,
        ResultFormat: `JSON`,
      },
    })
  },
})
"
CallMeBot,http://api.callmebot.com/start.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    callmebot: {
      type: ""app"",
      app: ""callmebot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.callmebot.com/start.php`,
      params: {
        source: `web`,
        user: `@serw2068`,
        text: `I know! But it's wierd... Listen what he had to say`,
        lang: `en-US-Standard-C`,
      },
    })
  },
})
"
511 SF Bay,http://api.511.org/traffic/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    five11_sf_bay: {
      type: ""app"",
      app: ""five11_sf_bay"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.511.org/traffic/events`,
      params: {
        api_key: `${this.five11_sf_bay.$auth.api_key}`,
      },
    })
  },
})
"
Bitrix24,https://{{custom_fields.intranet_name}}.bitrix24.com/rest/user.current,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bitrix24: {
      type: ""app"",
      app: ""bitrix24"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.bitrix24.$auth.intranet_name}.bitrix24.com/rest/user.current`,
      params: {
        auth: `${this.bitrix24.$auth.oauth_access_token}`,
      },
    })
  },
})
"
CDC Public Health Media Library,https://tools.cdc.gov/api/v2/resources/media,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cdc_public_health_media_library: {
      type: ""app"",
      app: ""cdc_public_health_media_library"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://tools.cdc.gov/api/v2/resources/media`,
      params: {
        topic: `AIDS`,
      },
    })
  },
})
"
ClinicalTrials.gov,https://www.clinicaltrials.gov/api/query/full_studies,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clinicaltrials_gov: {
      type: ""app"",
      app: ""clinicaltrials_gov"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.clinicaltrials.gov/api/query/full_studies`,
      params: {
        expr: `YOUR_QUERY_EXPRESSION`,
        fmt: `JSON`,
      },
    })
  },
})
"
SMS IT Decentralized,https://decontrolpanel.smsit.ai/apis/getcontacts/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sms_it_decentralized: {
      type: ""app"",
      app: ""sms_it_decentralized"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://decontrolpanel.smsit.ai/apis/getcontacts/`,
      params: {
        api_key: `${this.sms_it_decentralized.$auth.api_key}`,
        name: `YOUR_NAME`,
      },
    })
  },
})
"
Wordnik,http://api.wordnik.com/v4/words.json/randomWord,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wordnik: {
      type: ""app"",
      app: ""wordnik"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.wordnik.com/v4/words.json/randomWord`,
      params: {
        api_key: `${this.wordnik.$auth.api_key}`,
      },
    })
  },
})
"
Chicago Transit Authority Train Tracker API,http://lapi.transitchicago.com/api/1.0/ttarrivals.aspx,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chicago_transit_authority_train_tracker_api: {
      type: ""app"",
      app: ""chicago_transit_authority_train_tracker_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://lapi.transitchicago.com/api/1.0/ttarrivals.aspx`,
      params: {
        key: `${this.chicago_transit_authority_train_tracker_api.$auth.api_key}`,
        mapid: `40380`,
      },
    })
  },
})
"
Chicago Transit Authority Bus Tracker APIs,http://www.ctabustracker.com/bustime/api/v2/gettime,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chicago_transit_authority_bus_tracker_apis: {
      type: ""app"",
      app: ""chicago_transit_authority_bus_tracker_apis"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://www.ctabustracker.com/bustime/api/v2/gettime`,
      params: {
        key: `${this.chicago_transit_authority_bus_tracker_apis.$auth.api_key}`,
        format: `json`,
      },
    })
  },
})
"
Chicago Transit Authority Customer Alerts API,http://www.transitchicago.com/api/1.0/alerts.aspx,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chicago_transit_authority_customer_alerts_api: {
      type: ""app"",
      app: ""chicago_transit_authority_customer_alerts_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://www.transitchicago.com/api/1.0/alerts.aspx`,
      params: {
        routeid: `53a`,
      },
    })
  },
})
"
USDA - Agricultural Resource Management Survey Data API,https://api.ers.usda.gov/data/arms/state,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    usda_agricultural_resource_management_survey_data_api: {
      type: ""app"",
      app: ""usda_agricultural_resource_management_survey_data_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ers.usda.gov/data/arms/state`,
      params: {
        api_key: `${this.usda_agricultural_resource_management_survey_data_api.$auth.api_key}`,
      },
    })
  },
})
"
jason_discord_test,https://discord.com/api/users/@me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jason_discord_test: {
      type: ""app"",
      app: ""jason_discord_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://discord.com/api/users/@me`,
      headers: {
        Authorization: `Bearer ${this.jason_discord_test.$auth.oauth_access_token}`,
      },
    })
  },
})
"
CO2signal ,https://api.co2signal.com/v1/latest,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    co2signal: {
      type: ""app"",
      app: ""co2signal"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.co2signal.com/v1/latest`,
      headers: {
        ""auth-token"": `${this.co2signal.$auth.api_key}`,
      },
      params: {
        countryCode: `DK-DK`,
      },
    })
  },
})
"
Vercel (Token Auth),https://api.vercel.com/www/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vercel_token_auth: {
      type: ""app"",
      app: ""vercel_token_auth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.vercel.com/www/user`,
      headers: {
        Authorization: `Bearer ${this.vercel_token_auth.$auth.personal_access_token}`,
      },
    })
  },
})
"
Freedompro,https://api.freedompro.eu/api/freedompro/accessories,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freedompro: {
      type: ""app"",
      app: ""freedompro"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.freedompro.eu/api/freedompro/accessories`,
      headers: {
        Authorization: `Bearer ${this.freedompro.$auth.api_key}`,
      },
    })
  },
})
"
Action Builder,https://{{custom_fields.organization}}.actionbuilder.org/api/rest/v1/campaigns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    action_builder: {
      type: ""app"",
      app: ""action_builder"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.action_builder.$auth.organization}.actionbuilder.org/api/rest/v1/campaigns`,
      headers: {
        ""Content-Type"": `application/json`,
        ""OSDI-API-Token"": `${this.action_builder.$auth.api_key}`,
      },
    })
  },
})
"
Action Network,https://actionnetwork.org/api/v2/people,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    action_network: {
      type: ""app"",
      app: ""action_network"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://actionnetwork.org/api/v2/people`,
      params: {
        ""OSDI-API-Token"": `${this.action_network.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Gmail (Developer App),https://www.googleapis.com/gmail/v1/users/me/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gmail_custom_oauth: {
      type: ""app"",
      app: ""gmail_custom_oauth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.googleapis.com/gmail/v1/users/me/profile`,
      headers: {
        Authorization: `Bearer ${this.gmail_custom_oauth.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Crisp,https://api.crisp.chat/v1/website/{{custom_fields.website_id}},"import Crisp from 'crisp-api';

export default defineComponent({
  props: {
    crisp: {
      type: ""app"",
      app: ""crisp"",
    }
  },
  async run({steps, $}) {
    const client = new Crisp();

    client.authenticateTier(""plugin"", this.crisp.$auth.identifier, this.crisp.$auth.key);

    return await client.website.listConversations(this.crisp.$auth.website_id, 1)
  },
})
"
Sensibo,https://home.sensibo.com/api/v2/users/me/pods,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sensibo: {
      type: ""app"",
      app: ""sensibo"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://home.sensibo.com/api/v2/users/me/pods`,
      params: {
        fields: `*`,
        apiKey: `${this.sensibo.$auth.api_key}`,
      },
    })
  },
})
"
Smitch,https://app.api.developer.mysmitch.com/v1/app/details,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smitch: {
      type: ""app"",
      app: ""smitch"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.api.developer.mysmitch.com/v1/app/details`,
      headers: {
        ""x-api-key"": `${this.smitch.$auth.api_key}`,
        ""accept"": `application/json  `,
      },
    })
  },
})
"
SunriseSunset.org,https://api.sunrise-sunset.org/json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sunrisesunset_org: {
      type: ""app"",
      app: ""sunrisesunset_org"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sunrise-sunset.org/json`,
      params: {
        lat: `36.7201600`,
        lng: `-4.4203400`,
      },
    })
  },
})
"
Zoho Sheet,https://sheet.{{custom_fields.base_api_uri}}/api/v2/workbooks,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_sheet: {
      type: ""app"",
      app: ""zoho_sheet"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://sheet.${this.zoho_sheet.$auth.base_api_uri}/api/v2/workbooks`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_sheet.$auth.oauth_access_token}`,
      },
      params: {
        method: `workbook.list`,
      },
    })
  },
})
"
Overleaf,https://www.overleaf.com/docs,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    overleaf: {
      type: ""app"",
      app: ""overleaf"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.overleaf.com/docs`,
      params: {
        snip_uri: `https://production-overleaf-static.s3.amazonaws.com/examples/helloworld.tex`,
      },
    })
  },
})
"
Switchur,https://api.switchur.com/Pipedream/on/{{custom_fields.api_key}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    switchur: {
      type: ""app"",
      app: ""switchur"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.switchur.com/Pipedream/on/${this.switchur.$auth.api_key}`,
    })
  },
})
"
Wolfram Alpha,https://api.wolframalpha.com/v2/query,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wolfram_alpha: {
      type: ""app"",
      app: ""wolfram_alpha"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.wolframalpha.com/v2/query`,
      params: {
        appid: `${this.wolfram_alpha.$auth.app_id}`,
        input: `pi`,
      },
    })
  },
})
"
Wolfram Data Drop (Web API),https://datadrop.wolframcloud.com/api/v1.0/Add,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wolfram_data_drop_web_api_: {
      type: ""app"",
      app: ""wolfram_data_drop_web_api_"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://datadrop.wolframcloud.com/api/v1.0/Add`,
      params: {
        bin: `17gO3dHeh`,
        text: `Happy testing!`,
      },
    })
  },
})
"
Yelp,https://api.yelp.com/v3/businesses/search,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    yelp: {
      type: ""app"",
      app: ""yelp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.yelp.com/v3/businesses/search`,
      headers: {
        Authorization: `Bearer ${this.yelp.$auth.api_key}`,
      },
      params: {
        location: `san francisco, ca`,
      },
    })
  },
})
"
SailPoint,https://{{custom_fields.tenant}}.{{custom_fields.domain}}/v3/public-identities,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sailpoint: {
      type: ""app"",
      app: ""sailpoint"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://https://{{custom_fields.tenant}}.{{custom_fields.domain}}/v3/public-identities`,
      headers: {
        'Authorization': `Bearer ${this.sailpoint.$auth.oauth_access_token}`
      }
    })
  },
})
"
Snapdocs,https://{{custom_fields.environment}}.snapdocs.com/mobile_notary_api/v1/clients,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    snapdocs: {
      type: ""app"",
      app: ""snapdocs"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.snapdocs.$auth.environment}.snapdocs.com/mobile_notary_api/v1/clients`,
      headers: {
        ""X-AUTH-TOKEN"": `${this.snapdocs.$auth.api_key}`,
      },
    })
  },
})
"
Vestaboard,https://platform.vestaboard.com/viewer,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    vestaboard: {
      type: ""app"",
      app: ""vestaboard"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://platform.vestaboard.com/viewer`,
      headers: {
        ""X-Vestaboard-Api-Key"": `${this.vestaboard.$auth.api_key}`,
        ""X-Vestaboard-Api-Secret"": `${this.vestaboard.$auth.api_secret}`,
      },
    })
  },
})
"
WakaTime,https://wakatime.com/api/v1/users/current,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wakatime: {
      type: ""app"",
      app: ""wakatime"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://wakatime.com/api/v1/users/current`,
      headers: {
        Authorization: `Bearer ${this.wakatime.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Timelines,https://api.timelines.io/public-api/timelines/6498523a-b93c-43bb-b750-a090a31644a6,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    timelines: {
      type: ""app"",
      app: ""timelines"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.timelines.io/public-api/timelines/6498523a-b93c-43bb-b750-a090a31644a6`,
      headers: {
        ""X-Api-Key"": `${this.timelines.$auth.api_key}`,
      },
    })
  },
})
"
Congress.gov,https://api.congress.gov/v3/bill,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    congress_gov: {
      type: ""app"",
      app: ""congress_gov"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.congress.gov/v3/bill`,
      params: {
        format: `json`,
        api_key: `${this.congress_gov.$auth.api_key}`,
      },
    })
  },
})
"
Department of Labor,https://data.dol.gov/get/inspection,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    department_of_labor: {
      type: ""app"",
      app: ""department_of_labor"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://data.dol.gov/get/inspection`,
      headers: {
        ""X-API-KEY"": `${this.department_of_labor.$auth.api_token}`,
      },
    })
  },
})
"
Department of State - Office of the Historian Ebook Catalog API,https://history.state.gov/api/v1/catalog/search,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    department_of_state_office_of_the_historian_ebook_catalog_api: {
      type: ""app"",
      app: ""department_of_state_office_of_the_historian_ebook_catalog_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://history.state.gov/api/v1/catalog/search`,
      params: {
        ""q"": `YOUR_QUERY`,
      },
    })
  },
})
"
Energy Information Administration API,https://api.eia.gov/v2/electricity,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    energy_information_administration_api: {
      type: ""app"",
      app: ""energy_information_administration_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.eia.gov/v2/electricity`,
      params: {
        api_key: `${this.energy_information_administration_api.$auth.api_key}`,
      },
    })
  },
})
"
NSF Award Search Web API,http://api.nsf.gov/services/v1/awards.json?keyword=water,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nsf_award_search_web_api: {
      type: ""app"",
      app: ""nsf_award_search_web_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.nsf.gov/services/v1/awards.json?keyword=water`,
    })
  },
})
"
Utility API,https://utilityapi.com/api/v2/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    utility_api: {
      type: ""app"",
      app: ""utility_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://utilityapi.com/api/v2/events`,
      headers: {
        Authorization: `Bearer ${this.utility_api.$auth.api_token}`,
      },
    })
  },
})
"
ProPublica (Campaign Finance API),https://api.propublica.org/campaign-finance/v1/1996/candidates/search.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    propublica_campaign_finance_api_: {
      type: ""app"",
      app: ""propublica_campaign_finance_api_"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.propublica.org/campaign-finance/v1/1996/candidates/search.json`,
      headers: {
        ""X-API-Key"": `${this.propublica_campaign_finance_api_.$auth.api_key}`,
      },
      params: {
        query: `Bush`,
      },
    })
  },
})
"
ProPublica (Congress API),https://api.propublica.org/congress/v1/116/senate/members.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    propublica_congress_api_: {
      type: ""app"",
      app: ""propublica_congress_api_"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.propublica.org/congress/v1/116/senate/members.json`,
      headers: {
        ""X-API-Key"": `${this.propublica_congress_api_.$auth.api_key}`,
      },
    })
  },
})
"
World Health Organization (GHO OData API),https://ghoapi.azureedge.net/api/Indicator,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    world_health_organizatoin_gho_odata_api: {
      type: ""app"",
      app: ""world_health_organizatoin_gho_odata_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ghoapi.azureedge.net/api/Indicator`,
    })
  },
})
"
World Health Organization (Athena API),http://apps.who.int/gho/athena/api/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    world_health_organization_athena_api_: {
      type: ""app"",
      app: ""world_health_organization_athena_api_"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://apps.who.int/gho/athena/api/`,
    })
  },
})
"
USDA - Agricultural Research Service FoodData Central API ,https://api.nal.usda.gov/fdc/v1/foods/search,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    usda_agricultural_research_service_fooddata_central_api: {
      type: ""app"",
      app: ""usda_agricultural_research_service_fooddata_central_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.nal.usda.gov/fdc/v1/foods/search`,
      params: {
        query: `apple`,
        api_key: `${this.usda_agricultural_research_service_fooddata_central_api.$auth.api_key}`,
      },
    })
  },
})
"
USDA - Agricultural Marketing Service MyMarketNews API,https://marsapi.ams.usda.gov/services/v1.2/reports,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    usda_agricultural_marketing_service_mymarketnews_api: {
      type: ""app"",
      app: ""usda_agricultural_marketing_service_mymarketnews_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://marsapi.ams.usda.gov/services/v1.2/reports`,
      auth: {
        username: `${this.usda_agricultural_marketing_service_mymarketnews_api.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
USDA - Foreign Agricultural Service GATS Data API,https://apps.fas.usda.gov/OpenData/api/gats/census/data/exports/dataReleaseDates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    usda_foreign_agricultural_service_gats_data_api: {
      type: ""app"",
      app: ""usda_foreign_agricultural_service_gats_data_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apps.fas.usda.gov/OpenData/api/gats/census/data/exports/dataReleaseDates`,
      headers: {
        ""Accept"": `application/json`,
        ""API_KEY"": `${this.usda_foreign_agricultural_service_gats_data_api.$auth.api_key}`,
      },
    })
  },
})
"
USDA - Foreign Agricultural Service PSD Data API,https://apps.fas.usda.gov/OpenData/api/psd/commodities,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    usda_foreign_agricultural_service_psd_data_api: {
      type: ""app"",
      app: ""usda_foreign_agricultural_service_psd_data_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apps.fas.usda.gov/OpenData/api/psd/commodities`,
      headers: {
        ""Accept"": `application/json`,
        ""API_KEY"": `${this.usda_foreign_agricultural_service_psd_data_api.$auth.api_key}`,
      },
    })
  },
})
"
US Energy Information Administration Open Data API,https://api.eia.gov/v2/electricity/retail-sales,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    us_energy_information_administration_open_data_api: {
      type: ""app"",
      app: ""us_energy_information_administration_open_data_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.eia.gov/v2/electricity/retail-sales`,
      params: {
        api_key: `${this.us_energy_information_administration_open_data_api.$auth.api_key}`,
      },
    })
  },
})
"
Environmental Protection Clean Air Markets APIs,https://api.epa.gov/easey/account-mgmt/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    environmental_protection_clean_air_markets_apis: {
      type: ""app"",
      app: ""environmental_protection_clean_air_markets_apis"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.epa.gov/easey/account-mgmt/accounts`,
      headers: {
        ""accept"": `*/*`,
        ""x-api-key"": `${this.environmental_protection_clean_air_markets_apis.$auth.api_key}`,
      },
    })
  },
})
"
Environmental Protection Agency Envirofacts API,https://data.epa.gov/efservice/getEnvirofactsUVDAILY/ZIP/20050/JSON,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    environmental_protection_agency_envirofacts_api: {
      type: ""app"",
      app: ""environmental_protection_agency_envirofacts_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://data.epa.gov/efservice/getEnvirofactsUVDAILY/ZIP/20050/JSON`,
      headers: {
        ""api_key"": `${this.environmental_protection_agency_envirofacts_api.$auth.api_key}`,
      },
    })
  },
})
"
BC Gov News,https://news.api.gov.bc.ca//api/Newsletters,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bc_gov_news: {
      type: ""app"",
      app: ""bc_gov_news"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://news.api.gov.bc.ca//api/Newsletters`,
      params: {
        ""api-version"": `1.0`,
      },
    })
  },
})
"
SportsData,https://api.sportsdata.io/v3/cbb/scores/json/AreAnyGamesInProgress,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sportsdata: {
      type: ""app"",
      app: ""sportsdata"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sportsdata.io/v3/cbb/scores/json/AreAnyGamesInProgress`,
      params: {
        key: `${this.sportsdata.$auth.api_key}`,
      },
    })
  },
})
"
Interzoid,https://api.interzoid.com/getremainingcredits,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    interzoid: {
      type: ""app"",
      app: ""interzoid"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.interzoid.com/getremainingcredits`,
      params: {
        license: `${this.interzoid.$auth.api_key}`,
      },
    })
  },
})
"
Labs64 NetLicensing,https://go.netlicensing.io/core/v2/rest/product,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    labs64_netlicensing: {
      type: ""app"",
      app: ""labs64_netlicensing"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://go.netlicensing.io/core/v2/rest/product`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `apiKey`,
        password: `${this.labs64_netlicensing.$auth.api_key}`,
      },
    })
  },
})
"
CIRCL Hash Lookup,https://hashlookup.circl.lu/lookup/md5/{your_md5_hash},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    circl_hash_lookup: {
      type: ""app"",
      app: ""circl_hash_lookup"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://hashlookup.circl.lu/lookup/md5/{your_md5_hash}`,
      headers: {
        ""accept"": `application/json`,
      },
    })
  },
})
"
jason_key_test,https://eopxap2ouo1qosg.m.pipedream.net/{{custom_fields.url_path_value}},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    jason_key_test: {
      type: ""app"",
      app: ""jason_key_test"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://eopxap2ouo1qosg.m.pipedream.net/${this.jason_key_test.$auth.url_path_value}`,
      headers: {
        Authorization: `Bearer ${this.jason_key_test.$auth.api_key}`,
        ""jason-header"": `${this.jason_key_test.$auth.header_value}`,
      },
      params: {
        foobar: `${this.jason_key_test.$auth.urlparam_value}`,
      },
    })
  },
})
"
test app,https://graph.facebook.com/v14.0/me/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    whatsapp: {
      type: ""app"",
      app: ""whatsapp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.facebook.com/v14.0/me/`,
      headers: {
        Authorization: `Bearer ${this.whatsapp.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Appcues,https://api.appcues.com/v2/accounts/{{custom_fields.account_id}}/flows,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    appcues: {
      type: ""app"",
      app: ""appcues"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.appcues.com/v2/accounts/${this.appcues.$auth.account_id}/flows`,
      auth: {
        username: `${this.appcues.$auth.api_key}`,
        password: `${this.appcues.$auth.api_secret}`,
      },
    })
  },
})
"
College Football Data,https://api.collegefootballdata.com/conferences,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    college_football_data: {
      type: ""app"",
      app: ""college_football_data"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.collegefootballdata.com/conferences`,
      headers: {
        Authorization: `Bearer ${this.college_football_data.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Listen Notes,https://listen-api.listennotes.com/api/v2/search,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    listen_notes: {
      type: ""app"",
      app: ""listen_notes"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://listen-api.listennotes.com/api/v2/search`,
      headers: {
        ""X-ListenAPI-Key"": `${this.listen_notes.$auth.api_key}`,
      },
      params: {
        ""q"": `programming`,
      },
    })
  },
})
"
Planning Center,https://api.planningcenteronline.com/people/v2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    planning_center: {
      type: ""app"",
      app: ""planning_center"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.planningcenteronline.com/people/v2/me`,
      headers: {
        Authorization: `Bearer ${this.planning_center.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Lodgify,https://api.lodgify.com/v1/properties,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lodgify: {
      type: ""app"",
      app: ""lodgify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.lodgify.com/v1/properties`,
      headers: {
        ""X-ApiKey"": `${this.lodgify.$auth.api_key}`,
      },
    })
  },
})
"
Doppler Marketing Automation,https://restapi.fromdoppler.com/accounts/{{custom_fields.account_name}}/campaigns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    doppler_marketing_automation: {
      type: ""app"",
      app: ""doppler_marketing_automation"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://restapi.fromdoppler.com/accounts/${this.doppler_marketing_automation.$auth.account_name}/campaigns`,
      headers: {
        ""Accept"": `application/json`,
        ""Authorization"": `token ${this.doppler_marketing_automation.$auth.api_key}`,
      },
    })
  },
})
"
IdealSpot,https://idealspot-geodata.p.rapidapi.com/api/v1/traffic/counts/1595369397,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    idealspot: {
      type: ""app"",
      app: ""idealspot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://idealspot-geodata.p.rapidapi.com/api/v1/traffic/counts/1595369397`,
      headers: {
        ""X-RapidAPI-Key"": `${this.idealspot.$auth.api_key}`,
        ""X-RapidAPI-Host"": `idealspot-geodata.p.rapidapi.com`,
      },
    })
  },
})
"
RAWG Video Games Database,https://api.rawg.io/api/platforms,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rawg_video_games_database: {
      type: ""app"",
      app: ""rawg_video_games_database"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rawg.io/api/platforms`,
      params: {
        key: `${this.rawg_video_games_database.$auth.api_key}`,
      },
    })
  },
})
"
Neutrino,https://neutrinoapi.net/email-validate,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    neutrino: {
      type: ""app"",
      app: ""neutrino"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://neutrinoapi.net/email-validate`,
      params: {
        email: `YOUR_EMAIL_ADDRESS`,
        ""api-key"": `${this.neutrino.$auth.api_key}`,
        ""user-id"": `${this.neutrino.$auth.user_id}`,
      },
    })
  },
})
"
Cloudlayer,https://api.cloudlayer.io/v2/getStatus,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudlayer: {
      type: ""app"",
      app: ""cloudlayer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cloudlayer.io/v2/getStatus`,
      headers: {
        ""X-API-Key"": `${this.cloudlayer.$auth.api_key}`,
      },
    })
  },
})
"
UK gov Vehicle Enquiry API,https://driver-vehicle-licensing.api.gov.uk/vehicle-enquiry/v1/vehicles,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    uk_gov_vehecle_enquiry_api: {
      type: ""app"",
      app: ""uk_gov_vehecle_enquiry_api"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""registrationNumber"": `{enter_registration_number_here}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://driver-vehicle-licensing.api.gov.uk/vehicle-enquiry/v1/vehicles`,
      headers: {
        ""x-api-key"": `${this.uk_gov_vehecle_enquiry_api.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
FacturaDirecta,https://{{custom_fields.account_name}}.facturadirecta.com/api/products.xml,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    facturadirecta: {
      type: ""app"",
      app: ""facturadirecta"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.facturadirecta.$auth.account_name}.facturadirecta.com/api/products.xml`,
      auth: {
        username: `${this.facturadirecta.$auth.api_token}`,
        password: `x`,
      },
    })
  },
})
"
Manifestly Checklists,https://api.manifest.ly/api/v1/users/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    manifestly_checklists: {
      type: ""app"",
      app: ""manifestly_checklists"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.manifest.ly/api/v1/users/`,
      params: {
        api_key: `${this.manifestly_checklists.$auth.api_key}`,
      },
    })
  },
})
"
Danny -- Test App,https://eox0peirtu4y93m.m.pipedream.net,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    danny_test_app: {
      type: ""app"",
      app: ""danny_test_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://eox0peirtu4y93m.m.pipedream.net`,
      headers: {
        Authorization: `Bearer ${this.danny_test_app.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Chatfuel (Dashboard API),https://dashboard.chatfuel.com/api/bots,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chatfuel_dashboard_api_: {
      type: ""app"",
      app: ""chatfuel_dashboard_api_"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""title"": `YOUR_BOT_TITLE`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://dashboard.chatfuel.com/api/bots`,
      headers: {
        Authorization: `Bearer ${this.chatfuel_dashboard_api_.$auth.api_token}`,
      },
      data,
    })
  },
})
"
Twelve Data,https://api.twelvedata.com/quote?symbol=AAPL&apikey=demo&source=docs,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twelve_data: {
      type: ""app"",
      app: ""twelve_data"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.twelvedata.com/quote?symbol=AAPL&apikey=demo&source=docs`,
      headers: {
        ""Authorization"": `apikey ${this.twelve_data.$auth.api_key}`,
      },
    })
  },
})
"
Sendblue,https://api.sendblue.co/api/send-message,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendblue: {
      type: ""app"",
      app: ""sendblue"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""number"": `+19998887777`,
      ""content"": `Hello world`,
      ""send_style"": `Invisible`,
      ""media_url"": `https://source.unsplash.com/random.png`,
      ""statusCallback"": `https://example.com/message-status/1234abcd`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.sendblue.co/api/send-message`,
      headers: {
        ""sb-api-key-id"": `${this.sendblue.$auth.api_key}`,
        ""sb-api-secret-key"": `${this.sendblue.$auth.api_secret}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
CDC - National Environmental Public Health Tracking,https://ephtracking.cdc.gov/apigateway/api/v1/contentareas/json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cdc_national_environmental_public_health_tracking: {
      type: ""app"",
      app: ""cdc_national_environmental_public_health_tracking"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ephtracking.cdc.gov/apigateway/api/v1/contentareas/json`,
      params: {
        apiToken: `${this.cdc_national_environmental_public_health_tracking.$auth.api_token}`,
      },
    })
  },
})
"
Enigma,https://api.enigma.com/businesses/{your_enigma_id},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    enigma: {
      type: ""app"",
      app: ""enigma"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.enigma.com/businesses/{your_enigma_id}`,
      headers: {
        ""x-api-key"": `${this.enigma.$auth.api_key}`,
        ""accept"": `application/json`,
      },
      params: {
        lookback_months: `1`,
      },
    })
  },
})
"
CloudTalk,https://my.cloudtalk.io/api/calls/index.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudtalk: {
      type: ""app"",
      app: ""cloudtalk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://my.cloudtalk.io/api/calls/index.json`,
      auth: {
        username: `${this.cloudtalk.$auth.api_key}`,
        password: `${this.cloudtalk.$auth.api_secret}`,
      },
    })
  },
})
"
Printful (OAuth),https://api.printful.com/oauth/scopes,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    printful_oauth: {
      type: ""app"",
      app: ""printful_oauth"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.printful.com/oauth/scopes`,
      headers: {
        Authorization: `Bearer ${this.printful_oauth.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Easyship,https://api.easyship.com/v2/couriers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    easyship: {
      type: ""app"",
      app: ""easyship"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.easyship.com/v2/couriers`,
      headers: {
        Authorization: `Bearer ${this.easyship.$auth.api_token}`,
      },
    })
  },
})
"
Avochato,https://www.avochato.com/v1/accounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    avochato: {
      type: ""app"",
      app: ""avochato"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.avochato.com/v1/accounts`,
      params: {
        auth_id: `${this.avochato.$auth.auth_id}`,
        auth_secret: `${this.avochato.$auth.auth_secret}`,
      },
    })
  },
})
"
GraphHopper,https://graphhopper.com/api/1/isochrone,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    graphhopper: {
      type: ""app"",
      app: ""graphhopper"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graphhopper.com/api/1/isochrone`,
      params: {
        key: `${this.graphhopper.$auth.api_key}`,
        point: `{enter_coordinates_here}`,
      },
    })
  },
})
"
Humanitix,https://api.humanitix.com/v1/tags,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    humanitix: {
      type: ""app"",
      app: ""humanitix"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.humanitix.com/v1/tags`,
      headers: {
        ""x-api-key"": `${this.humanitix.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      params: {
        page: `1`,
      },
    })
  },
})
"
DialMyCalls,https://api.dialmycalls.com/2.0/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dialmycalls: {
      type: ""app"",
      app: ""dialmycalls"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.dialmycalls.com/2.0/account`,
      auth: {
        username: `${this.dialmycalls.$auth.api_key}`,
        password: `x`,
      },
    })
  },
})
"
Wishpond,https://api.wishpond.com/api/v1/leads/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    wishpond: {
      type: ""app"",
      app: ""wishpond"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.wishpond.com/api/v1/leads/`,
      headers: {
        ""X-Api-Token"": `${this.wishpond.$auth.api_key}`,
      },
    })
  },
})
"
DeployHQ,https://{{custom_fields.account_name}}.deployhq.com/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    deployhq: {
      type: ""app"",
      app: ""deployhq"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.deployhq.$auth.account_name}.deployhq.com/projects`,
      headers: {
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.deployhq.$auth.email}`,
        password: `${this.deployhq.$auth.api_key}`,
      },
    })
  },
})
"
IdealPostcodes,https://api.ideal-postcodes.co.uk/v1/keys/{{custom_fields.api_key}}/details,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    idealpostcodes: {
      type: ""app"",
      app: ""idealpostcodes"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ideal-postcodes.co.uk/v1/keys/${this.idealpostcodes.$auth.api_key}/details`,
      params: {
        user_token: `${this.idealpostcodes.$auth.user_token}`,
      },
    })
  },
})
"
Nusii Proposals,https://app.nusii.com/api/v2/proposals,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nusii_proposals: {
      type: ""app"",
      app: ""nusii_proposals"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.nusii.com/api/v2/proposals`,
      headers: {
        ""Authorization"": `Token token=${this.nusii_proposals.$auth.api_token}`,
        ""User-Agent"": `@PipedreamHQ/pipedream v0.1`,
      },
    })
  },
})
"
The Blue Alliance (Read API),https://www.thebluealliance.com/api/v3/event/2017cthar,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    the_blue_alliance_read_api_: {
      type: ""app"",
      app: ""the_blue_alliance_read_api_"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.thebluealliance.com/api/v3/event/2017cthar`,
      headers: {
        ""X-TBA-Auth-Key"": `${this.the_blue_alliance_read_api_.$auth.api_key}`,
      },
    })
  },
})
"
Datumbox,http://api.datumbox.com/1.0/SentimentAnalysis.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    datumbox: {
      type: ""app"",
      app: ""datumbox"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.datumbox.com/1.0/SentimentAnalysis.json`,
      params: {
        api_key: `${this.datumbox.$auth.api_key}`,
        text: `YOUR_TEXT`,
      },
    })
  },
})
"
CommCare,https://www.commcarehq.org/api/v0.5/identity/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    commcare: {
      type: ""app"",
      app: ""commcare"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.commcarehq.org/api/v0.5/identity/`,
      headers: {
        ""Authorization"": `ApiKey ${this.commcare.$auth.email}:${this.commcare.$auth.api_key} `,
      },
    })
  },
})
"
Trainual,https://api.trainual.com/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    trainual: {
      type: ""app"",
      app: ""trainual"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.trainual.com/v1/users`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.trainual.$auth.email}&${this.trainual.$auth.account_id}`,
        password: `${this.trainual.$auth.password}`,
      },
    })
  },
})
"
Callingly,https://api.callingly.com/v1/clients,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    callingly: {
      type: ""app"",
      app: ""callingly"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.callingly.com/v1/clients`,
      headers: {
        Authorization: `Bearer ${this.callingly.$auth.api_token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
StealthSeminar,https://api.joinnow.live/webinars/Tdtrkb/registration-information,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    stealthseminar: {
      type: ""app"",
      app: ""stealthseminar"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.joinnow.live/webinars/Tdtrkb/registration-information`,
    })
  },
})
"
Chatrace,https://api.chatrace.com/page/tags,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    chatrace: {
      type: ""app"",
      app: ""chatrace"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.chatrace.com/page/tags`,
      headers: {
        ""X-ACCESS-TOKEN"": `${this.chatrace.$auth.api_token}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Amentum Aerospace,https://{{custom_fields.subdomain}}.amentum.io/gebco,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amentum_aerospace: {
      type: ""app"",
      app: ""amentum_aerospace"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.amentum_aerospace.$auth.subdomain}.amentum.io/gebco`,
      headers: {
        ""Accept"": `application/json`,
        ""API-Key"": `${this.amentum_aerospace.$auth.api_key}`,
      },
      params: {
        latitude: `-45`,
        longitude: `45`,
      },
    })
  },
})
"
Nozbe Teams,https://api4.nozbe.com/v1/api/teams,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nozbe_teams: {
      type: ""app"",
      app: ""nozbe_teams"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api4.nozbe.com/v1/api/teams`,
      headers: {
        ""Accept"": `application/json`,
        ""Authorization"": `${this.nozbe_teams.$auth.api_token}`,
      },
    })
  },
})
"
CoderPad,https://app.coderpad.io/api/pads,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    coderpad: {
      type: ""app"",
      app: ""coderpad"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.coderpad.io/api/pads`,
      headers: {
        ""Authorization"": `Token token=${this.coderpad.$auth.api_key}`,
      },
    })
  },
})
"
elopage,https://api.elopage.com/api/funnels/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    elopage: {
      type: ""app"",
      app: ""elopage"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.elopage.com/api/funnels/`,
      params: {
        key: `${this.elopage.$auth.api_key}`,
        secret: `${this.elopage.$auth.api_secret}`,
      },
    })
  },
})
"
Razorpay,https://api.razorpay.com/v1/items,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    razorpay: {
      type: ""app"",
      app: ""razorpay"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.razorpay.com/v1/items`,
      auth: {
        username: `${this.razorpay.$auth.key_id}`,
        password: `${this.razorpay.$auth.key_secret}`,
      },
    })
  },
})
"
Zoho Catalyst,https://api.catalyst.zoho.com/baas/v1/project,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_catalyst: {
      type: ""app"",
      app: ""zoho_catalyst"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.catalyst.zoho.com/baas/v1/project`,
      headers: {
        Authorization: `Bearer ${this.zoho_catalyst.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Burst SMS,https://api.transmitsms.com/get-balance.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    burst_sms: {
      type: ""app"",
      app: ""burst_sms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.transmitsms.com/get-balance.json`,
      auth: {
        username: `${this.burst_sms.$auth.api_key}`,
        password: `${this.burst_sms.$auth.api_secret}`,
      },
    })
  },
})
"
SimpleTexting,https://api-app2.simpletexting.com/v2/api/campaigns,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    simpletexting: {
      type: ""app"",
      app: ""simpletexting"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api-app2.simpletexting.com/v2/api/campaigns`,
      headers: {
        Authorization: `Bearer ${this.simpletexting.$auth.api_token}`,
      },
    })
  },
})
"
Quaderno,https://quadernoapp.com/api/authorization,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    quaderno: {
      type: ""app"",
      app: ""quaderno"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://quadernoapp.com/api/authorization`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.quaderno.$auth.api_key}`,
        password: `x`,
      },
    })
  },
})
"
Pilvio,https://api.pilw.io/v1/user-resource/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pilvio: {
      type: ""app"",
      app: ""pilvio"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.pilw.io/v1/user-resource/user`,
      headers: {
        ""apikey"": `${this.pilvio.$auth.api_token}`,
      },
    })
  },
})
"
Cloud RF,https://api.cloudrf.com/my-metrics,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloud_rf: {
      type: ""app"",
      app: ""cloud_rf"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.cloudrf.com/my-metrics`,
      headers: {
        ""key"": `${this.cloud_rf.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
WebScraping.AI,https://api.webscraping.ai/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    webscraping_ai: {
      type: ""app"",
      app: ""webscraping_ai"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.webscraping.ai/account`,
      params: {
        api_key: `${this.webscraping_ai.$auth.api_key}`,
      },
    })
  },
})
"
Corrently,https://api.corrently.io/v2.0/stromkonto/balances,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    corrently: {
      type: ""app"",
      app: ""corrently"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.corrently.io/v2.0/stromkonto/balances`,
      params: {
        account: `${this.corrently.$auth.account}`,
      },
    })
  },
})
"
Logoraisr,https://api.logoraisr.com/rest-v1/processes/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    logoraisr: {
      type: ""app"",
      app: ""logoraisr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.logoraisr.com/rest-v1/processes/`,
      headers: {
        ""Authorization"": `Token ${this.logoraisr.$auth.api_key}`,
      },
    })
  },
})
"
Firmalyzer IoTVAS API,https://iotvas-api.firmalyzer.com/api/v1/device/detect,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    firmalyzer_iotvas: {
      type: ""app"",
      app: ""firmalyzer_iotvas"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""snmp_sysdescr"": ``,
      ""ftp_banner"": `AXIS P3346 Fixed Dome Network Camera 5.20 (2017) ready.`,
      ""telnet_banner"": ``,
      ""hostname"": ``,
      ""http_response"": ``,
      ""https_response"": ``,
      ""upnp_response"": ``,
      ""nic_mac"": ``,
    }
    return await axios($, {
      method: ""post"",
      url: `https://iotvas-api.firmalyzer.com/api/v1/device/detect`,
      headers: {
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
        ""x-api-key"": `${this.firmalyzer_iotvas.$auth.api_key}`,
      },
      data,
    })
  },
})
"
Rat Genome Database,https://rest.rgd.mcw.edu/rgdws/lookup/geneTypes,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rat_genome_database: {
      type: ""app"",
      app: ""rat_genome_database"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.rgd.mcw.edu/rgdws/lookup/geneTypes`,
      headers: {
        ""Accept"": `*/*`,
      },
    })
  },
})
"
SamCart,https://api.samcart.com/v1/customers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    samcart: {
      type: ""app"",
      app: ""samcart"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.samcart.com/v1/customers`,
      headers: {
        ""sc-api"": `${this.samcart.$auth.api_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Karbon,https://api.karbonhq.com/v3/Users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    karbon: {
      type: ""app"",
      app: ""karbon"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.karbonhq.com/v3/Users`,
      headers: {
        Authorization: `Bearer ${this.karbon.$auth.application_access_key}`,
        ""AccessKey"": `${this.karbon.$auth.tenant_access_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Zulip,https://{{custom_fields.domain}}.zulipchat.com/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zulip: {
      type: ""app"",
      app: ""zulip"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.zulip.$auth.domain}.zulipchat.com/api/v1/users/me`,
      auth: {
        username: `${this.zulip.$auth.email}`,
        password: `${this.zulip.$auth.api_key}`,
      },
    })
  },
})
"
Aircall,https://api.aircall.io/v1/integrations/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    aircall: {
      type: ""app"",
      app: ""aircall"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.aircall.io/v1/integrations/me`,
      headers: {
        Authorization: `Bearer ${this.aircall.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SlickText,https://api.slicktext.com/v1/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    slicktext: {
      type: ""app"",
      app: ""slicktext"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.slicktext.com/v1/account`,
      auth: {
        username: `${this.slicktext.$auth.public_api_key}`,
        password: `${this.slicktext.$auth.private_api_key}`,
      },
    })
  },
})
"
TextMagic,https://rest.textmagic.com/api/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    textmagic: {
      type: ""app"",
      app: ""textmagic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.textmagic.com/api/v2/user`,
      headers: {
        ""X-TM-Username"": `${this.textmagic.$auth.username}`,
        ""X-TM-Key"": `${this.textmagic.$auth.api_key}`,
      },
    })
  },
})
"
TalentLMS,https://{{custom_fields.domain}}.talentlms.com/api/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    talentlms: {
      type: ""app"",
      app: ""talentlms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.talentlms.$auth.domain}.talentlms.com/api/v1/users`,
      auth: {
        username: `${this.talentlms.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
AbuselPDB,https://api.abuseipdb.com/api/v2/check,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    abuselpdb: {
      type: ""app"",
      app: ""abuselpdb"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.abuseipdb.com/api/v2/check`,
      headers: {
        ""Key"": `${this.abuselpdb.$auth.api_key}`,
      },
      params: {
        ipAddress: `{enter_ip_here}`,
        maxAgeInDays: `90`,
      },
    })
  },
})
"
ByBit,https://api.bybit.com/v2/public/time,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bybit: {
      type: ""app"",
      app: ""bybit"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bybit.com/v2/public/time`,
    })
  },
})
"
Airship,https://go.urbanairship.com/api/segments,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    airship: {
      type: ""app"",
      app: ""airship"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://go.urbanairship.com/api/segments`,
      auth: {
        username: `${this.airship.$auth.app_key}`,
        password: `${this.airship.$auth.master_secret}`,
      },
    })
  },
})
"
AMcards,https://amcards.com/.api/v1/user/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amcards: {
      type: ""app"",
      app: ""amcards"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://amcards.com/.api/v1/user/`,
      headers: {
        Authorization: `Bearer ${this.amcards.$auth.access_token}`,
        ""Content-Type"": `${this.amcards.$auth.access_token}`,
      },
    })
  },
})
"
AnonyFlow,https://api.anonyflow.com/anony-value,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    anyflow: {
      type: ""app"",
      app: ""anyflow"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""data"": `YOUR_DATA`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.anonyflow.com/anony-value`,
      headers: {
        ""x-api-key"": `${this.anyflow.$auth.api_key}`,
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Api Void,https://endpoint.apivoid.com/iprep/v1/pay-as-you-go/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    api_void: {
      type: ""app"",
      app: ""api_void"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://endpoint.apivoid.com/iprep/v1/pay-as-you-go/`,
      params: {
        key: `${this.api_void.$auth.api_key}`,
        ip: `{enter_ip_here}`,
      },
    })
  },
})
"
Beaconstac,https://api.beaconstac.com/api/2.0/qrcodes/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    beaconstac: {
      type: ""app"",
      app: ""beaconstac"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.beaconstac.com/api/2.0/qrcodes/`,
      headers: {
        ""Authorization"": `Token ${this.beaconstac.$auth.api_key}`,
      },
    })
  },
})
"
Enedis Data-Connect,test,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    enedis: {
      type: ""app"",
      app: ""enedis"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ext.hml.api.enedis.fr/metering_data_dcmp/v5/daily_consumption_max_power`,
      headers: {
        Authorization: `Bearer ${this.enedis.$auth.oauth_access_token}`,
      },
      params: {
        start: `  `,
        end: ``,
        usage_points_id: ``,
      },
    })
  },
})
"
Data247,https://api.data247.com/v3.0,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    data247: {
      type: ""app"",
      app: ""data247"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.data247.com/v3.0`,
      params: {
        key: `${this.data247.$auth.api_key}`,
        api: `MT`,
        phone: `{your_phone_number_here}`,
      },
    })
  },
})
"
DeepL,https://api-free.deepl.com/v2/usage,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    deepl: {
      type: ""app"",
      app: ""deepl"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api-free.deepl.com/v2/usage`,
      headers: {
        ""Authorization"": `DeepL-Auth-Key ${this.deepl.$auth.api_key}`,
      },
    })
  },
})
"
Kucoin Futures,https://api-futures.kucoin.com/api/v1/timestamp,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    kucoin_futures: {
      type: ""app"",
      app: ""kucoin_futures"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api-futures.kucoin.com/api/v1/timestamp`,
      headers: {
        ""api_key"": `${this.kucoin_futures.$auth.api_key}`,
        ""secret_key"": `${this.kucoin_futures.$auth.secret_key}`,
        ""passphrase"": `${this.kucoin_futures.$auth.passphrase}`,
      },
    })
  },
})
"
Dispatch,https://app.dispatchit.com/api/external/v1/organizations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dispatch: {
      type: ""app"",
      app: ""dispatch"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.dispatchit.com/api/external/v1/organizations`,
      headers: {
        ""Accept"": `*/*`,
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.dispatch.$auth.api_key}`,
        password: `${this.dispatch.$auth.api_token}`,
      },
    })
  },
})
"
Dynatrace API,https://{{custom_fields.environment_id}}.live.dynatrace.com/api/v2/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dynatrace_api: {
      type: ""app"",
      app: ""dynatrace_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.dynatrace_api.$auth.environment_id}.live.dynatrace.com/api/v2/events`,
      headers: {
        ""Accept"": `application/json`,
        ""Authorization"": `Api-Token ${this.dynatrace_api.$auth.access_token}`,
      },
    })
  },
})
"
EdApp,https://rest.edapp.com/v2/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    edapp: {
      type: ""app"",
      app: ""edapp"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://rest.edapp.com/v2/users`,
      headers: {
        Authorization: `Bearer ${this.edapp.$auth.api_token}`,
      },
    })
  },
})
"
Freshsales,https://{{custom_fields.domain}}.freshsales.io/api/leads/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freshsales: {
      type: ""app"",
      app: ""freshsales"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.freshsales.$auth.domain}.freshsales.io/api/leads/`,
      headers: {
        ""Content-Type"": `application/json`,
        ""Authorization"": `Token token=${this.freshsales.$auth.api_key}`,
      },
    })
  },
})
"
Gender API,https://gender-api.com/v2/gender,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    gender_api: {
      type: ""app"",
      app: ""gender_api"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""first_name"": `YOUR_FIRST_NAME`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://gender-api.com/v2/gender`,
      headers: {
        Authorization: `Bearer ${this.gender_api.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Habitica,https://habitica.com/api/v3/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    habitica: {
      type: ""app"",
      app: ""habitica"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://habitica.com/api/v3/user`,
      headers: {
        ""x-client"": `3a326108-1895-4c23-874e-37668c75f2ad-Pipedream`,
        ""x-api-user"": `${this.habitica.$auth.user_id}`,
        ""x-api-key"": `${this.habitica.$auth.api_token}`,
      },
    })
  },
})
"
FreshBooks,https://api.freshbooks.com/auth/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    freshbooks: {
      type: ""app"",
      app: ""freshbooks"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.freshbooks.com/auth/api/v1/users/me`,
      headers: {
        Authorization: `Bearer ${this.freshbooks.$auth.oauth_access_token}`,
      },
    })
  },
})
"
SMS Magic,https://api.sms-magic.com/v1/api_key/validate,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sms_magic: {
      type: ""app"",
      app: ""sms_magic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.sms-magic.com/v1/api_key/validate`,
      headers: {
        ""Content-Type"": `application/json`,
        ""apiKey"": `${this.sms_magic.$auth.api_key}`,
      },
    })
  },
})
"
ExpoFP,https://app.expofp.com/api/v1/list-events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    expofp: {
      type: ""app"",
      app: ""expofp"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""token"": `${this.expofp.$auth.api_token}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://app.expofp.com/api/v1/list-events`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Mailcoach,https://{{custom_fields.domain}}.mailcoach.app/api/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailcoach: {
      type: ""app"",
      app: ""mailcoach"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.mailcoach.$auth.domain}.mailcoach.app/api/user`,
      headers: {
        Authorization: `Bearer ${this.mailcoach.$auth.api_token}`,
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Mozilla Observatory,https://http-observatory.security.mozilla.org/api/v1/analyze,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mozilla_observatory: {
      type: ""app"",
      app: ""mozilla_observatory"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: ""post"",
      url: `https://http-observatory.security.mozilla.org/api/v1/analyze`,
      params: {
        host: `{enter_domain_here}`,
      },
    })
  },
})
"
Mx Toolbox,https://mxtoolbox.com/api/v1/lookup/dns/{YOUR_HOSTNAME},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mx_toolbox: {
      type: ""app"",
      app: ""mx_toolbox"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://mxtoolbox.com/api/v1/lookup/dns/{YOUR_HOSTNAME}`,
      headers: {
        ""Authorization"": `${this.mx_toolbox.$auth.api_key}`,
      },
    })
  },
})
"
Nano Nets,https://app.nanonets.com/api/v2/OCR/Model/{your_model_id_here},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nano_nets: {
      type: ""app"",
      app: ""nano_nets"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.nanonets.com/api/v2/OCR/Model/{your_model_id_here}`,
      auth: {
        username: `${this.nano_nets.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
miro mistake app do not use,https://api.miro.com/v1/oauth-token,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    miro_developer_app: {
      type: ""app"",
      app: ""miro_developer_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.miro.com/v1/oauth-token`,
      headers: {
        Authorization: `Bearer ${this.miro_developer_app.$auth.access_token}`,
      },
    })
  },
})
"
Miro Developer App,https://api.miro.com/v1/oauth-token,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    miro_custom_app: {
      type: ""app"",
      app: ""miro_custom_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.miro.com/v2/boards`,
      headers: {
        Authorization: `Bearer ${this.miro_custom_app.$auth.access_token}`,
      },
    })
  },
})
"
Octopus Deploy,https://{{custom_fields.domain}}.octopus.app/api/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    octopus_deploy: {
      type: ""app"",
      app: ""octopus_deploy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.octopus_deploy.$auth.domain}.octopus.app/api/users`,
      headers: {
        ""X-Octopus-ApiKey"": `${this.octopus_deploy.$auth.api_key}`,
      },
    })
  },
})
"
Patreon,"https://www.patreon.com/api/oauth2/v2/identity?fields%5Buser%5D=email,full_name","import axios from ""axios""

export default defineComponent({
  props: {
    patreon: {
      type: ""app"",
      app: ""patreon"",
    }
  },
  async run({steps, $}) {
    const resp = await axios({
      url: `https://www.patreon.com/api/oauth2/v2/identity?fields%5Buser%5D=email,full_name`,
      headers: {
        Authorization: `Bearer ${this.patreon.$auth.oauth_access_token}`,
        ""Content-Type"": `application/x-www-form-urlencoded`,
      },
    })
    return resp.data
  },
})
"
Buy Me a Coffee,https://developers.buymeacoffee.com/api/v1/subscriptions?status=active,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    buy_me_a_coffee: {
      type: ""app"",
      app: ""buy_me_a_coffee"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://developers.buymeacoffee.com/api/v1/subscriptions?status=active`,
      headers: {
        Authorization: `Bearer ${this.buy_me_a_coffee.$auth.access_token}`,
      },
    })
  },
})
"
Rev Ops,https://vault.revops.io/v1/usage/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rev_ops: {
      type: ""app"",
      app: ""rev_ops"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://vault.revops.io/v1/usage/events`,
      headers: {
        Authorization: `Bearer ${this.rev_ops.$auth.api_key}`,
        ""Content-type"": `application/json`,
      },
    })
  },
})
"
Rollbar,https://api.rollbar.com/api/1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rollbar: {
      type: ""app"",
      app: ""rollbar"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rollbar.com/api/1/users`,
      headers: {
        ""Accept"": `application/json`,
        ""X-Rollbar-Access-Token"": `${this.rollbar.$auth.access_token}`,
      },
    })
  },
})
"
DataSet,https://app.scalyr.com/api/listUsers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dataset: {
      type: ""app"",
      app: ""dataset"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""token"": `${this.dataset.$auth.access_key}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://app.scalyr.com/api/listUsers`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
SSL Labs,https://api.ssllabs.com/api/v3/analyze,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ssl_labs: {
      type: ""app"",
      app: ""ssl_labs"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.ssllabs.com/api/v3/analyze`,
      params: {
        host: `YOUR_HOSTNAME`,
      },
    })
  },
})
"
Talenox,https://api.talenox.com/api/v2/employees,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    talenox: {
      type: ""app"",
      app: ""talenox"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.talenox.com/api/v2/employees`,
      headers: {
        Authorization: `Bearer ${this.talenox.$auth.api_token}`,
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Terminus App,https://api.terminusapp.com/v1/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    terminus_app: {
      type: ""app"",
      app: ""terminus_app"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.terminusapp.com/v1/projects`,
      auth: {
        username: `${this.terminus_app.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Threat Miner,https://api.threatminer.org/v2/domain.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    threat_miner: {
      type: ""app"",
      app: ""threat_miner"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.threatminer.org/v2/domain.php`,
      params: {
        ""q"": `vwrm.com`,
        rt: `1`,
      },
    })
  },
})
"
Unshorten.Me,https://unshorten.me/s/YOUR_SHORT_URL,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    unshorten_me: {
      type: ""app"",
      app: ""unshorten_me"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://unshorten.me/s/YOUR_SHORT_URL`,
    })
  },
})
"
Urlscan.io,https://urlscan.io/api/v1/search/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    urlscan_io: {
      type: ""app"",
      app: ""urlscan_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://urlscan.io/api/v1/search/`,
      headers: {
        ""Content-Type"": `application/json`,
        ""API-Key"": `${this.urlscan_io.$auth.api_key}`,
      },
      params: {
        ""q"": `YOUR_QUERY`,
      },
    })
  },
})
"
Xverify,https://api.xverify.com/v2/ev,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    xverify: {
      type: ""app"",
      app: ""xverify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.xverify.com/v2/ev`,
      params: {
        email: `YOUR_EMAIL_ADDRESS`,
        api_key: `${this.xverify.$auth.api_key}`,
        domain: `YOUR_DOMAIN`,
      },
    })
  },
})
"
You Can Book Me,https://api.youcanbook.me/v1/{{custom_fields.account_id}}/remoteaccounts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    you_can_book_me: {
      type: ""app"",
      app: ""you_can_book_me"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.youcanbook.me/v1/${this.you_can_book_me.$auth.account_id}/remoteaccounts`,
      auth: {
        username: `${this.you_can_book_me.$auth.email}`,
        password: `${this.you_can_book_me.$auth.api_key}`,
      },
    })
  },
})
"
GivingFuel,https://api.webconnex.com/v2/public/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    givingfuel: {
      type: ""app"",
      app: ""givingfuel"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.webconnex.com/v2/public/ping`,
      params: {
        apiKey: `${this.givingfuel.$auth.api_key}`,
      },
    })
  },
})
"
Mobile Text Alerts,https://api.mobile-text-alerts.com/v3/subscribers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mobile_text_alerts: {
      type: ""app"",
      app: ""mobile_text_alerts"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mobile-text-alerts.com/v3/subscribers`,
      headers: {
        Authorization: `Bearer ${this.mobile_text_alerts.$auth.api_key}`,
      },
    })
  },
})
"
Xata,https://api.xata.io/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    xata: {
      type: ""app"",
      app: ""xata"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.xata.io/user`,
      headers: {
        Authorization: `Bearer ${this.xata.$auth.api_key}`,
      },
    })
  },
})
"
IPinfo.io,https://ipinfo.io/8.8.8.8,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ipinfo_io: {
      type: ""app"",
      app: ""ipinfo_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ipinfo.io/8.8.8.8`,
      headers: {
        Authorization: `Bearer ${this.ipinfo_io.$auth.api_token}`,
      },
    })
  },
})
"
Plasmic,https://codegen.plasmic.app/api/v1/loader/html/preview/{{custom_fields.project_id}}/{your_component_name},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    plasmic: {
      type: ""app"",
      app: ""plasmic"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://codegen.plasmic.app/api/v1/loader/html/preview/${this.plasmic.$auth.project_id}/{your_component_name}`,
      headers: {
        ""x-plasmic-api-project-tokens"": `${this.plasmic.$auth.project_id}:${this.plasmic.$auth.project_token}`,
      },
    })
  },
})
"
Amazon Selling Partner,https://sellingpartnerapi-na.amazon.com/sellers/v1/marketplaceParticipations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amazon_selling_partner: {
      type: ""app"",
      app: ""amazon_selling_partner"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://sellingpartnerapi-na.amazon.com/sellers/v1/marketplaceParticipations`,
      headers: {
        Authorization: `Bearer ${this.amazon_selling_partner.$auth.oauth_access_token}`,
      },
    })
  },
})
"
1S2U,https://api.1s2u.io/checkbalance,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ones2u: {
      type: ""app"",
      app: ""ones2u"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.1s2u.io/checkbalance`,
      params: {
        user: `${this.ones2u.$auth.username}`,
        pass: `${this.ones2u.$auth.password}`,
      },
    })
  },
})
"
OrbisX,https://orbisx.ca/app/api/VSVlj,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    orbisx: {
      type: ""app"",
      app: ""orbisx"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://orbisx.ca/app/api/VSVlj`,
      params: {
        key: `${this.orbisx.$auth.api_key}`,
        dothis: `saveLead`,
        company: `YOUR_COMPANY`,
      },
    })
  },
})
"
Amplitude,https://amplitude.com/api/2/sessions/average,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    amplitude: {
      type: ""app"",
      app: ""amplitude"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://amplitude.com/api/2/sessions/average`,
      auth: {
        username: `${this.amplitude.$auth.api_key}`,
        password: `${this.amplitude.$auth.api_secret}`,
      },
      params: {
        ""p"": `platform`,
        start: `20210601`,
        end: `20210630`,
      },
    })
  },
})
"
pravin-adolfo-test,test,"export default defineComponent({
  props: {
    http: {
      type: ""http_request"",
      default: {
        method: ""GET"",
        url: ""http://api.open-notify.org/iss-now.json"",
      }
    }
  },
  async run({ steps, $ }) {
    return await this.http.execute()
  },
})"
SimpleHash,https://api.simplehash.com/api/v0/nfts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    simplehash: {
      type: ""app"",
      app: ""simplehash"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.simplehash.com/api/v0/nfts`,
      headers: {
        ""X-API-KEY"": `${this.simplehash.$auth.api_key}`,
      },
      params: {
        chains: `optimism,ethereum,solana`,
      },
    })
  },
})
"
Hygraph,{replace_with_your_content_api_url},"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hygraph: {
      type: ""app"",
      app: ""hygraph"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""query"": `{ 
        posts {
          id
          author {
            id
            name
          }
          publishedAt
        }
      }`,
    }
    return await axios($, {
      method: ""post"",
      url: `{replace_with_your_content_api_url}`,
      headers: {
        Authorization: `Bearer ${this.hygraph.$auth.permanent_auth_token}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Mailstand,https://api.mailstand.com/workspaces,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mailstand: {
      type: ""app"",
      app: ""mailstand"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.mailstand.com/workspaces`,
      auth: {
        username: `${this.mailstand.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
TD Ameritrade,https://api.tdameritrade.com/v1/userprincipals,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    td_ameritrade: {
      type: ""app"",
      app: ""td_ameritrade"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.tdameritrade.com/v1/userprincipals`,
      headers: {
        Authorization: `Bearer ${this.td_ameritrade.$auth.oauth_access_token}`,
      },
    })
  },
})
"
LightSpeed VT,https://webservices.lightspeedvt.net/REST/V1/users/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    lightspeed_vt: {
      type: ""app"",
      app: ""lightspeed_vt"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://webservices.lightspeedvt.net/REST/V1/users/`,
      auth: {
        username: `${this.lightspeed_vt.$auth.api_key}`,
        password: `${this.lightspeed_vt.$auth.api_secret}`,
      },
    })
  },
})
"
Svix,https://api.svix.com/api/v1/app/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    svix: {
      type: ""app"",
      app: ""svix"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.svix.com/api/v1/app/`,
      headers: {
        Authorization: `Bearer ${this.svix.$auth.api_key}`,
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Covalent,https://api.covalenthq.com/v1/1/block_v2/5000000/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    covalent: {
      type: ""app"",
      app: ""covalent"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.covalenthq.com/v1/1/block_v2/5000000/`,
      auth: {
        username: `${this.covalent.$auth.api_key}`,
        password: ``,
      },
    })
  },
})
"
Pathfix,https://labs.pathfix.com/oauth/method/mailchimp/call,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    pathfix: {
      type: ""app"",
      app: ""pathfix"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""url"": `{{usr_meta.api_endpoint}}/3.0/lists`,
      ""method"": `GET`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://labs.pathfix.com/oauth/method/mailchimp/call`,
      params: {
        public_key: `${this.pathfix.$auth.public_key}`,
        private_key: `${this.pathfix.$auth.private_key}`,
        userId: `${this.pathfix.$auth.user_id}`,
      },
      data,
    })
  },
})
"
Rapid7 InsightConnect,https://{{custom_fields.region}}.api.insight.rapid7.com/validate,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rapid7_insightconnect: {
      type: ""app"",
      app: ""rapid7_insightconnect"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.rapid7_insightconnect.$auth.region}.api.insight.rapid7.com/validate`,
      headers: {
        ""Content-Type"": `application/json`,
        ""X-Api-Key"": `${this.rapid7_insightconnect.$auth.api_key}`,
      },
    })
  },
})
"
Tines,https://{{custom_fields.domain}}.tines.com/api/v1/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    tines: {
      type: ""app"",
      app: ""tines"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.tines.$auth.domain}.tines.com/api/v1/events`,
      headers: {
        ""Content-Type"": `application/json`,
        ""x-user-email"": `${this.tines.$auth.email}`,
        ""x-user-token"": `${this.tines.$auth.api_key}`,
      },
    })
  },
})
"
n8n.io,https://{{custom_fields.domain}}.app.n8n.cloud/api/v1/workflows,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    n8n_io: {
      type: ""app"",
      app: ""n8n_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.n8n_io.$auth.domain}.app.n8n.cloud/api/v1/workflows`,
      headers: {
        ""Accept"": `application/json`,
        ""X-N8N-API-KEY"": `${this.n8n_io.$auth.api_key}`,
      },
    })
  },
})
"
AlienVault OTX DirectConnect API,https://otx.alienvault.com/api/v1/users/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    alienvault_otx_directconnect_api: {
      type: ""app"",
      app: ""alienvault_otx_directconnect_api"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://otx.alienvault.com/api/v1/users/me`,
      headers: {
        ""X-OTX-API-KEY"": `${this.alienvault_otx_directconnect_api.$auth.api_key}`,
      },
    })
  },
})
"
ARIN Whois,https://whois.arin.net/rest/cidr/8.8.8.8/24,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    arin_whois: {
      type: ""app"",
      app: ""arin_whois"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://whois.arin.net/rest/cidr/8.8.8.8/24`,
      headers: {
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Censys Search,https://search.censys.io/api/v2/hosts/search,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    censys_search: {
      type: ""app"",
      app: ""censys_search"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://search.censys.io/api/v2/hosts/search`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.censys_search.$auth.api_id}`,
        password: `${this.censys_search.$auth.api_secret}`,
      },
      params: {
        ""q"": `YOUR_QUERY`,
      },
    })
  },
})
"
Checkphish AI,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    checkphish_ai: {
      type: ""app"",
      app: ""checkphish_ai"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Kartra,https://app.kartra.com/api,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    kartra: {
      type: ""app"",
      app: ""kartra"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""app_id"": `${this.kartra.$auth.app_id}`,
      ""api_key"": `${this.kartra.$auth.api_key}`,
      ""api_password"": `${this.kartra.$auth.api_password}`,
      ""lead"": {
        ""email"": ""enter_an_email_here""
      },
      ""actions"": [
        {
          ""cmd"": ""search_lead""
        }
      ],
    }
    return await axios($, {
      method: ""post"",
      url: `https://app.kartra.com/api`,
      headers: {
        ""Content-Type"": `application/x-www-form-urlencoded`,
      },
      data,
    })
  },
})
"
CIRL CVE Search,http://cve.circl.lu/api/browse,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cirl_cve_search: {
      type: ""app"",
      app: ""cirl_cve_search"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://cve.circl.lu/api/browse`,
    })
  },
})
"
Hybrid Analysis,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hybrid_analysis: {
      type: ""app"",
      app: ""hybrid_analysis"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        ""Content-Type"": `application/x-www-form-urlencoded`,
        ""User-Agent"": `@PipedreamHQ/pipedream v0.1`,
        ""api-key"": `${this.hybrid_analysis.$auth.api_key}`,
      },
    })
  },
})
"
Snyk,https://api.snyk.io/api/v1/user/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    snyk: {
      type: ""app"",
      app: ""snyk"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.snyk.io/api/v1/user/me`,
      headers: {
        ""Content-Type"": `application/json; charset=utf-8`,
        ""Authorization"": `token ${this.snyk.$auth.auth_token}`,
      },
    })
  },
})
"
Facebook Groups,https://graph.facebook.com/v9.0/me/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    facebook_groups: {
      type: ""app"",
      app: ""facebook_groups"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.facebook.com/v9.0/me/`,
      headers: {
        Authorization: `Bearer ${this.facebook_groups.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Zoho SalesIQ,{{custom_fields.api_domain}}/api/v2/portals,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_salesiq: {
      type: ""app"",
      app: ""zoho_salesiq"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.zoho_salesiq.$auth.api_domain}/api/v2/portals`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_salesiq.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Draftbit Example Data Service,https://example-data.draftbit.com/products,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    draftbit_example_data_service: {
      type: ""app"",
      app: ""draftbit_example_data_service"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://example-data.draftbit.com/products`,
    })
  },
})
"
Hugging Face,https://huggingface.co/api/whoami-v2,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    hugging_face: {
      type: ""app"",
      app: ""hugging_face"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://huggingface.co/api/whoami-v2`,
      headers: {
        Authorization: `Bearer ${this.hugging_face.$auth.access_token}`,
      },
    })
  },
})
"
Google Safebrowsing,https://safebrowsing.googleapis.com/v4/threatLists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    google_safebrowsing: {
      type: ""app"",
      app: ""google_safebrowsing"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://safebrowsing.googleapis.com/v4/threatLists`,
      params: {
        key: `${this.google_safebrowsing.$auth.api_key}`,
      },
    })
  },
})
"
Facebook Conversions,https://graph.facebook.com/v9.0/me/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    facebook_conversions: {
      type: ""app"",
      app: ""facebook_conversions"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.facebook.com/v9.0/me/`,
      headers: {
        Authorization: `Bearer ${this.facebook_conversions.$auth.oauth_access_token}`,
      },
    })
  },
})
"
WhatsApp Business,https://graph.facebook.com/v15.0/{{custom_fields.business_account_id}}/phone_numbers,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    whatsapp_business: {
      type: ""app"",
      app: ""whatsapp_business"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://graph.facebook.com/v15.0/${this.whatsapp_business.$auth.business_account_id}/phone_numbers`,
      headers: {
        Authorization: `Bearer ${this.whatsapp_business.$auth.permanent_access_token}`,
      },
    })
  },
})
"
IBM X-Force Exchange,https://api.xforce.ibmcloud.com/api/user/profile,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ibm_x_force_exchange: {
      type: ""app"",
      app: ""ibm_x_force_exchange"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.xforce.ibmcloud.com/api/user/profile`,
      auth: {
        username: `${this.ibm_x_force_exchange.$auth.api_key}`,
        password: `${this.ibm_x_force_exchange.$auth.api_password}`,
      },
    })
  },
})
"
IPQualityScore Fraud Prevention,https://ipqualityscore.com/api/json/url/{{custom_fields.api_key}}/pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ip_quality_score_fraud_prevention: {
      type: ""app"",
      app: ""ip_quality_score_fraud_prevention"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://ipqualityscore.com/api/json/url/${this.ip_quality_score_fraud_prevention.$auth.api_key}/pipedream.com`,
    })
  },
})
"
ipstack,http://api.ipstack.com/8.8.8.8,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ipstack: {
      type: ""app"",
      app: ""ipstack"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `http://api.ipstack.com/8.8.8.8`,
      params: {
        access_key: `${this.ipstack.$auth.api_key}`,
      },
    })
  },
})
"
MalShare,https://malshare.com/api.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    malshare: {
      type: ""app"",
      app: ""malshare"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://malshare.com/api.php`,
      params: {
        api_key: `${this.malshare.$auth.api_key}`,
        action: `getlist`,
      },
    })
  },
})
"
MaxMind GeoIP2,https://geoip.maxmind.com/geoip/v2.1/country/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    maxmind_geoip2: {
      type: ""app"",
      app: ""maxmind_geoip2"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://geoip.maxmind.com/geoip/v2.1/country/me`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.maxmind_geoip2.$auth.account_id}`,
        password: `${this.maxmind_geoip2.$auth.license_key}`,
      },
    })
  },
})
"
MaxMind minFraud,https://minfraud.maxmind.com/minfraud/disposition/v1.0/updates,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    maxmind_minfraud: {
      type: ""app"",
      app: ""maxmind_minfraud"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://minfraud.maxmind.com/minfraud/disposition/v1.0/updates`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.maxmind_minfraud.$auth.account_id}`,
        password: `${this.maxmind_minfraud.$auth.license_key}`,
      },
      params: {
        updates_after: `2021-03-15T09:00:00.00000Z`,
      },
    })
  },
})
"
CDR Platform,https://api.cdrplatform.com/v1/cdr/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cdr_platform: {
      type: ""app"",
      app: ""cdr_platform"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""weight_unit"": `g`,
      ""currency"": `chf`,
      ""items"": [
        {
          ""method_type"": ""forestation"",
          ""cdr_amount"": 1
        }
      ],
      ""client_reference_id"": `string`,
      ""certificate_display_name"": `string`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.cdrplatform.com/v1/cdr/`,
      headers: {
        ""Authorization"": `Api-Key ${this.cdr_platform.$auth.api_key}`,
      },
      data,
    })
  },
})
"
2IP.me,https://api.2ip.me/geo.json,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    twoip_me: {
      type: ""app"",
      app: ""twoip_me"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.2ip.me/geo.json`,
      params: {
        ip: `8.8.8.8`,
      },
    })
  },
})
"
Screenshot Machine,https://api.screenshotmachine.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    screenshot_machine: {
      type: ""app"",
      app: ""screenshot_machine"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.screenshotmachine.com`,
      params: {
        key: `${this.screenshot_machine.$auth.api_key}`,
        dimension: `1024x768`,
        url: `https://pipedream.com/`,
      },
    })
  },
})
"
Shodan,https://api.shodan.io/shodan/host/8.8.8.8,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    shodan: {
      type: ""app"",
      app: ""shodan"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.shodan.io/shodan/host/8.8.8.8`,
      params: {
        key: `${this.shodan.$auth.api_key}`,
      },
    })
  },
})
"
1sec MAIL,https://www.1secmail.com/api/v1/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    onesec_mail: {
      type: ""app"",
      app: ""onesec_mail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.1secmail.com/api/v1/`,
      params: {
        action: `getDomainList`,
      },
    })
  },
})
"
Threatminer,https://api.threatminer.org/v2/domain.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    threatminer: {
      type: ""app"",
      app: ""threatminer"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.threatminer.org/v2/domain.php`,
      params: {
        ""q"": `vwrm.com`,
        rt: `1`,
      },
    })
  },
})
"
Builder.io,https://cdn.builder.io/api/v2/content/page,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    builder_io: {
      type: ""app"",
      app: ""builder_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://cdn.builder.io/api/v2/content/page`,
      params: {
        apiKey: `${this.builder_io.$auth.api_key}`,
      },
    })
  },
})
"
Nightfall.ai,https://api.nightfall.ai/v3/upload,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nightfall_ai: {
      type: ""app"",
      app: ""nightfall_ai"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""fileSizeBytes"": `123`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.nightfall.ai/v3/upload`,
      headers: {
        Authorization: `Bearer ${this.nightfall_ai.$auth.api_key}`,
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Digital River,https://api.digitalriver.com/orders,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    digital_river: {
      type: ""app"",
      app: ""digital_river"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.digitalriver.com/orders`,
      headers: {
        Authorization: `Bearer ${this.digital_river.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
imgix,https://api.imgix.com/api/v1/sources,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    imgix: {
      type: ""app"",
      app: ""imgix"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.imgix.com/api/v1/sources`,
      headers: {
        Authorization: `Bearer ${this.imgix.$auth.api_key}`,
        ""Accept"": `application/json`,
        ""Content-Type"": `application/vnd.api+json`,
      },
    })
  },
})
"
Dotdigital,https://{{custom_fields.region}}-api.dotdigital.com/v2/account-info,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dotdigital: {
      type: ""app"",
      app: ""dotdigital"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.dotdigital.$auth.region}-api.dotdigital.com/v2/account-info`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.dotdigital.$auth.api_username}`,
        password: `${this.dotdigital.$auth.api_password}`,
      },
    })
  },
})
"
Envoy,https://api.envoy.com/v1/employees/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    envoy: {
      type: ""app"",
      app: ""envoy"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.envoy.com/v1/employees/`,
      headers: {
        Authorization: `Bearer ${this.envoy.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Loqate,https://api.addressy.com/EmailValidation/Batch/Validate/v1.20/json.ws,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    loqate: {
      type: ""app"",
      app: ""loqate"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.addressy.com/EmailValidation/Batch/Validate/v1.20/json.ws`,
      params: {
        Key: `${this.loqate.$auth.service_key}`,
        Emails: `{enter_email_here}`,
      },
    })
  },
})
"
ScrapeNinja,https://scrapeninja.p.rapidapi.com/scrape,"import { axios } from '@pipedream/platform';

export default defineComponent({
  props: {
    scrapeninja: {
      type: ""app"",
      app: ""scrapeninja"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      method: 'POST',
      url: 'https://scrapeninja.p.rapidapi.com/scrape',
      headers: {
        'content-type': 'application/json',
        'X-RapidAPI-Key': this.scrapeninja.$auth.rapid_api_key,
        'X-RapidAPI-Host': 'scrapeninja.p.rapidapi.com'
      },
      data: {
        url:""https://news.ycombinator.com/""
      }
    })
  },
})
"
Partnerize,https://api.partnerize.com/network,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    partnerize: {
      type: ""app"",
      app: ""partnerize"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.partnerize.com/network`,
      auth: {
        username: `${this.partnerize.$auth.user_app_key}`,
        password: `${this.partnerize.$auth.user_api_key}`,
      },
    })
  },
})
"
Sendcloud,https://panel.sendcloud.sc/api/v2/parcels,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sendcloud: {
      type: ""app"",
      app: ""sendcloud"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://panel.sendcloud.sc/api/v2/parcels`,
      auth: {
        username: `${this.sendcloud.$auth.public_key}`,
        password: `${this.sendcloud.$auth.secret_key}`,
      },
    })
  },
})
"
TaxJar,https://api.taxjar.com/v2/categories,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    taxjar: {
      type: ""app"",
      app: ""taxjar"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.taxjar.com/v2/categories`,
      headers: {
        Authorization: `Bearer ${this.taxjar.$auth.api_key}`,
      },
    })
  },
})
"
Clientary,https://{{custom_fields.domain}}.clientary.com/api/v2/staff,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clientary: {
      type: ""app"",
      app: ""clientary"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.clientary.$auth.domain}.clientary.com/api/v2/staff`,
      headers: {
        ""accept"": `application/json`,
      },
      auth: {
        username: `${this.clientary.$auth.api_token}`,
        password: `${this.clientary.$auth.api_token}`,
      },
    })
  },
})
"
Zenkraft,https://api.zenkraft.com/shippingaccount,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zenkraft: {
      type: ""app"",
      app: ""zenkraft"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.zenkraft.com/shippingaccount`,
      headers: {
        ""Accept"": `application/json`,
        ""zkkey"": `${this.zenkraft.$auth.api_key}`,
      },
    })
  },
})
"
Azure DevOps,https://app.vssps.visualstudio.com/_apis/profile/profiles/Me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    azure_devops: {
      type: ""app"",
      app: ""azure_devops"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.vssps.visualstudio.com/_apis/profile/profiles/Me`,
      headers: {
        Authorization: `Bearer ${this.azure_devops.$auth.oauth_access_token}`,
      },
      params: {
        ""api-version"": `5.0`,
      },
    })
  },
})
"
Faire,https://www.faire.com/api/v1/products,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    faire: {
      type: ""app"",
      app: ""faire"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://www.faire.com/api/v1/products`,
      headers: {
        ""X-FAIRE-ACCESS-TOKEN"": `${this.faire.$auth.access_token}`,
      },
    })
  },
})
"
Bugsnag,https://api.bugsnag.com/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bugsnag: {
      type: ""app"",
      app: ""bugsnag"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.bugsnag.com/user`,
      headers: {
        ""Authorization"": `token ${this.bugsnag.$auth.api_token}`,
      },
    })
  },
})
"
Databricks,https://{{custom_fields.domain}}.cloud.databricks.com/api/2.0/clusters/list,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    databricks: {
      type: ""app"",
      app: ""databricks"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.databricks.$auth.domain}.cloud.databricks.com/api/2.0/clusters/list`,
      headers: {
        Authorization: `Bearer ${this.databricks.$auth.access_token}`,
      },
    })
  },
})
"
DocRaptor,https://api.docraptor.com/docs,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    docraptor: {
      type: ""app"",
      app: ""docraptor"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""type"": `pdf`,
      ""document_content"": `<html><body>Hello World!</body></html>`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.docraptor.com/docs`,
      auth: {
        username: `${this.docraptor.$auth.api_key}`,
        password: ``,
      },
      data,
    })
  },
})
"
Fixer.io,https://data.fixer.io/api/latest,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    fixer_io: {
      type: ""app"",
      app: ""fixer_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://data.fixer.io/api/latest`,
      headers: {
        ""Accept"": `application/json`,
      },
      params: {
        access_key: `${this.fixer_io.$auth.api_key}`,
      },
    })
  },
})
"
RudderStack Transformation,https://api.rudderstack.com/transformations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rudderstack_transformation: {
      type: ""app"",
      app: ""rudderstack_transformation"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rudderstack.com/transformations`,
      auth: {
        username: `${this.rudderstack_transformation.$auth.email_address}`,
        password: `${this.rudderstack_transformation.$auth.personal_access_token}`,
      },
    })
  },
})
"
Keen.io,https://api.keen.io/3.0/projects/{{custom_fields.project_id}}/events,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    keen_io: {
      type: ""app"",
      app: ""keen_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.keen.io/3.0/projects/${this.keen_io.$auth.project_id}/events`,
      params: {
        api_key: `${this.keen_io.$auth.read_key}`,
      },
    })
  },
})
"
Levity,https://api.levity.ai/v1/classifiers/{your_classifier_id}/classify/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    levity: {
      type: ""app"",
      app: ""levity"",
    }
  },
  async run({steps, $}) {
    const data = {
      ""url"": `{replace_with_image_url}`,
    }
    return await axios($, {
      method: ""post"",
      url: `https://api.levity.ai/v1/classifiers/{your_classifier_id}/classify/`,
      headers: {
        ""Authorization"": `Token ${this.levity.$auth.api_key}`,
        ""Content-Type"": `application/json`,
      },
      data,
    })
  },
})
"
Mode,https://app.mode.com/api/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mode: {
      type: ""app"",
      app: ""mode"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.mode.com/api/account`,
      headers: {
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.mode.$auth.token}`,
        password: `${this.mode.$auth.password}`,
      },
    })
  },
})
"
Nasa,https://api.nasa.gov/planetary/apod,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    nasa: {
      type: ""app"",
      app: ""nasa"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.nasa.gov/planetary/apod`,
      params: {
        api_key: `${this.nasa.$auth.api_key}`,
      },
    })
  },
})
"
OptimoRoute,https://api.optimoroute.com/v1/get_scheduling_info,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    optimoroute: {
      type: ""app"",
      app: ""optimoroute"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.optimoroute.com/v1/get_scheduling_info`,
      params: {
        key: `${this.optimoroute.$auth.api_key}`,
        orderNo: `ORD001`,
      },
    })
  },
})
"
Oxford Dictionaries,https://od-api.oxforddictionaries.com/api/v2/languages,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    oxford_dictionaries: {
      type: ""app"",
      app: ""oxford_dictionaries"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://od-api.oxforddictionaries.com/api/v2/languages`,
      headers: {
        ""app_id"": `${this.oxford_dictionaries.$auth.app_id}`,
        ""app_key"": `${this.oxford_dictionaries.$auth.api_key}`,
      },
    })
  },
})
"
Sapling,https://go.smartrmail.com/api/v1/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    sapling: {
      type: ""app"",
      app: ""sapling"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://go.smartrmail.com/api/v1/lists`,
      headers: {
        ""Authorization"": `token ${this.sapling.$auth.api_token}`,
      },
    })
  },
})
"
SmartrMail,https://go.smartrmail.com/api/v1/lists,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    smartrmail: {
      type: ""app"",
      app: ""smartrmail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://go.smartrmail.com/api/v1/lists`,
      headers: {
        ""Authorization"": `token ${this.smartrmail.$auth.api_token}`,
      },
    })
  },
})
"
Transport For London,https://api.tfl.gov.uk/AirQuality,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    transport_for_london: {
      type: ""app"",
      app: ""transport_for_london"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.tfl.gov.uk/AirQuality`,
    })
  },
})
"
F5 Distributed Cloud Services,https://console.ves.volterra.io/api/web/namespaces,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    f5_distributed_cloud_services: {
      type: ""app"",
      app: ""f5_distributed_cloud_services"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://console.ves.volterra.io/api/web/namespaces`,
      headers: {
        ""Authorization"": `APIToken ${this.f5_distributed_cloud_services.$auth.api_token}`,
      },
    })
  },
})
"
Rapid7 Insight Platform,https://us.api.insight.rapid7.com/validate,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    rapid7_insight_platform: {
      type: ""app"",
      app: ""rapid7_insight_platform"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://us.api.insight.rapid7.com/validate`,
      headers: {
        ""X-Api-Key"": `${this.rapid7_insight_platform.$auth.api_key}`,
      },
    })
  },
})
"
Drata,https://public-api.drata.com/public/controls,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    drata: {
      type: ""app"",
      app: ""drata"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://public-api.drata.com/public/controls`,
      headers: {
        Authorization: `Bearer ${this.drata.$auth.api_key}`,
      },
    })
  },
})
"
Damstra Forms,https://{{custom_fields.domain}}.au.damstraforms.com/public_api/v2/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    damstra_forms: {
      type: ""app"",
      app: ""damstra_forms"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.damstra_forms.$auth.domain}.au.damstraforms.com/public_api/v2/projects`,
      headers: {
        ""Authorization"": `Token token=${this.damstra_forms.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Mav,https://hiremav.com/api/v2/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mav: {
      type: ""app"",
      app: ""mav"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://hiremav.com/api/v2/me`,
      headers: {
        ""Authorization"": `${this.mav.$auth.api_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
Mastodon,https://{{custom_fields.site_domain}}/api/v1/apps/verify_credentials,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    mastodon: {
      type: ""app"",
      app: ""mastodon"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.mastodon.$auth.site_domain}/api/v1/apps/verify_credentials`,
      headers: {
        Authorization: `Bearer ${this.mastodon.$auth.access_token}`,
      },
    })
  },
})
"
BigML,https://bigml.io/andromeda/source,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    bigml: {
      type: ""app"",
      app: ""bigml"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://bigml.io/andromeda/source`,
      params: {
        username: `${this.bigml.$auth.username}`,
        api_key: `${this.bigml.$auth.api_key}`,
      },
    })
  },
})
"
CallFire,https://api.callfire.com/v2/me/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    call_fire: {
      type: ""app"",
      app: ""call_fire"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.callfire.com/v2/me/account`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.call_fire.$auth.api_login}`,
        password: `${this.call_fire.$auth.api_password}`,
      },
    })
  },
})
"
GlobalGiving,https://api.globalgiving.org/api/public/projectservice/all/projects,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    globalgiving: {
      type: ""app"",
      app: ""globalgiving"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.globalgiving.org/api/public/projectservice/all/projects`,
      headers: {
        ""Accept"": `application/json`,
      },
      params: {
        api_key: `${this.globalgiving.$auth.api_key}`,
      },
    })
  },
})
"
Cheddar,https://getcheddar.com/xml/plans/get/productCode/DELUXROOM,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cheddar: {
      type: ""app"",
      app: ""cheddar"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://getcheddar.com/xml/plans/get/productCode/DELUXROOM`,
      auth: {
        username: `${this.cheddar.$auth.email}`,
        password: `${this.cheddar.$auth.password}`,
      },
    })
  },
})
"
Aimtell,https://api.aimtell.com/prod/sites/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    aimtell: {
      type: ""app"",
      app: ""aimtell"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.aimtell.com/prod/sites/`,
      headers: {
        ""X-Authorization-Api-Key"": `${this.aimtell.$auth.api_key}`,
      },
    })
  },
})
"
Click2Mail,https://{{custom_fields.subdomain}}.click2mail.com/molpro/credit,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    click2mail2: {
      type: ""app"",
      app: ""click2mail2"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.click2mail2.$auth.subdomain}.click2mail.com/molpro/credit`,
      headers: {
        ""Accept"": `application/json`,
      },
      auth: {
        username: `${this.click2mail2.$auth.username}`,
        password: `${this.click2mail2.$auth.password}`,
      },
    })
  },
})
"
Coherent.sh,https://api.coherent.sh/v1/address/coherentapi.eth,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    coherent_sh: {
      type: ""app"",
      app: ""coherent_sh"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.coherent.sh/v1/address/coherentapi.eth`,
      headers: {
        ""x-api-key"": `${this.coherent_sh.$auth.api_key}`,
      },
      params: {
        Accept: `application/json`,
      },
    })
  },
})
"
Clubworx,https://app.clubworx.com/api/v2/prospect_statuses,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    clubworx: {
      type: ""app"",
      app: ""clubworx"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.clubworx.com/api/v2/prospect_statuses`,
      headers: {
        ""Accept"": `application/json`,
      },
      params: {
        account_key: `${this.clubworx.$auth.api_key}`,
      },
    })
  },
})
"
CallHub,https://api.callhub.io/v1/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    callhub: {
      type: ""app"",
      app: ""callhub"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.callhub.io/v1/users`,
      headers: {
        ""Authorization"": `Token ${this.callhub.$auth.api_key}`,
      },
    })
  },
})
"
Respond.io,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    respond_io: {
      type: ""app"",
      app: ""respond_io"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        Authorization: `Bearer ${this.respond_io.$auth.access_token}`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Customer.guru,https://customer.guru/export/ratings,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    customer_guru: {
      type: ""app"",
      app: ""customer_guru"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://customer.guru/export/ratings`,
      headers: {
        ""Content-Type"": `application/json`,
      },
      params: {
        api_token: `${this.customer_guru.$auth.api_token}`,
        api_secret: `${this.customer_guru.$auth.api_secret}`,
      },
    })
  },
})
"
Reward Sciences,https://api.rewardsciences.com/reward_categories,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    reward_sciences: {
      type: ""app"",
      app: ""reward_sciences"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.rewardsciences.com/reward_categories`,
      headers: {
        Authorization: `Bearer ${this.reward_sciences.$auth.api_token}`,
        ""Accept"": `application/vnd.rewardsciences.v1+json`,
        ""Content-Type"": `application/json`,
      },
    })
  },
})
"
Route4Me,https://api.route4me.com/api.v4/address_book.php,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    route4me: {
      type: ""app"",
      app: ""route4me"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.route4me.com/api.v4/address_book.php`,
      params: {
        api_key: `${this.route4me.$auth.api_key}`,
        addr_id: ``,
      },
    })
  },
})
"
Ryver,https://{{custom_fields.domain}}.ryver.com/api/1/odata.svc/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    ryver: {
      type: ""app"",
      app: ""ryver"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.ryver.$auth.domain}.ryver.com/api/1/odata.svc/users`,
      headers: {
        ""Accept"": `application/json`,
        ""Content-Type"": `application/json`,
      },
      auth: {
        username: `${this.ryver.$auth.email}`,
        password: `${this.ryver.$auth.password}`,
      },
    })
  },
})
"
Kakao,https://kapi.kakao.com/v2/user/me,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    kakao: {
      type: ""app"",
      app: ""kakao"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://kapi.kakao.com/v2/user/me`,
      headers: {
        Authorization: `Bearer ${this.kakao.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Successeve,https://api.salesmachine.io/v1/ping,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    successeve: {
      type: ""app"",
      app: ""successeve"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.salesmachine.io/v1/ping`,
      params: {
        api_token: `${this.successeve.$auth.api_token}`,
      },
    })
  },
})
"
Zoho Sign,{{custom_fields.api_domain}}/api/v1/folders,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    zoho_sign: {
      type: ""app"",
      app: ""zoho_sign"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `${this.zoho_sign.$auth.api_domain}/api/v1/folders`,
      headers: {
        ""Authorization"": `Zoho-oauthtoken ${this.zoho_sign.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Scalr,https://apidirectories.scalr.io/api/iacp/v3/users,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    scalr: {
      type: ""app"",
      app: ""scalr"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://apidirectories.scalr.io/api/iacp/v3/users`,
      headers: {
        Authorization: `Bearer ${this.scalr.$auth.api_token}`,
        ""Prefer"": `profile=preview`,
        ""Accept"": `application/vnd.api+json`,
      },
    })
  },
})
"
Revamp CRM,https://app.revampcrm.com/api/1.0/User/WhoAmI,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    revamp_crm: {
      type: ""app"",
      app: ""revamp_crm"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://app.revampcrm.com/api/1.0/User/WhoAmI`,
      auth: {
        username: `${this.revamp_crm.$auth.email}`,
        password: `${this.revamp_crm.$auth.api_key}`,
      },
    })
  },
})
"
CloudCart,https://{{custom_fields.domain}}.cloudcart.net/api/v2/products,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    cloudcart: {
      type: ""app"",
      app: ""cloudcart"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.cloudcart.$auth.domain}.cloudcart.net/api/v2/products`,
      headers: {
        ""X-CloudCart-ApiKey"": `${this.cloudcart.$auth.api_key}`,
      },
    })
  },
})
"
Detectify,https://api.detectify.com/rest/v2/assets/,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    detectify: {
      type: ""app"",
      app: ""detectify"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.detectify.com/rest/v2/assets/`,
      headers: {
        ""Content-Type"": `application/json`,
        ""X-Detectify-Key"": `${this.detectify.$auth.api_key}`,
      },
    })
  },
})
"
Diffbot,https://api.diffbot.com/v4/account,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    diffbot: {
      type: ""app"",
      app: ""diffbot"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.diffbot.com/v4/account`,
      headers: {
        ""Accept"": `application/json`,
      },
      params: {
        token: `${this.diffbot.$auth.api_token}`,
      },
    })
  },
})
"
DPD,https://api.getdpd.com/v2/storefronts,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    dpd2: {
      type: ""app"",
      app: ""dpd2"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.getdpd.com/v2/storefronts`,
      auth: {
        username: `${this.dpd2.$auth.api_username}`,
        password: `${this.dpd2.$auth.api_password}`,
      },
    })
  },
})
"
Easy Projects,https://{{custom_fields.domain}}.go.easyprojects.net/api/v1/users/current,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    easy_projects: {
      type: ""app"",
      app: ""easy_projects"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.easy_projects.$auth.domain}.go.easyprojects.net/api/v1/users/current`,
      auth: {
        username: `${this.easy_projects.$auth.email}`,
        password: `${this.easy_projects.$auth.password}`,
      },
    })
  },
})
"
Easy Project,https://pipedream.com,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    easy_project: {
      type: ""app"",
      app: ""easy_project"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://pipedream.com`,
      headers: {
        ""X-Redmine-API-Key"": `${this.easy_project.$auth.api_access_key}`,
        ""Accept"": `application/json`,
      },
    })
  },
})
"
ElasticEmail,https://api.elasticemail.com/v2/account/profileoverview,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    elasticemail: {
      type: ""app"",
      app: ""elasticemail"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.elasticemail.com/v2/account/profileoverview`,
      params: {
        apikey: `${this.elasticemail.$auth.api_key}`,
      },
    })
  },
})
"
Upstash Redis,https://{{custom_fields.domain}}.upstash.io/get/YOUR_REDIS_KEY,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    upstash_redis: {
      type: ""app"",
      app: ""upstash_redis"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.upstash_redis.$auth.domain}.upstash.io/get/YOUR_REDIS_KEY`,
      headers: {
        Authorization: `Bearer ${this.upstash_redis.$auth.uptash_redis_rest_token}`,
      },
    })
  },
})
"
Esendex.,https://{{custom_fields.subdomain}}.esendex.com/v1.0/credits,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    esendex_: {
      type: ""app"",
      app: ""esendex_"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://${this.esendex_.$auth.subdomain}.esendex.com/v1.0/credits`,
      headers: {
        ""Content-Type"": `application/xml`,
      },
      auth: {
        username: `${this.esendex_.$auth.username}`,
        password: `${this.esendex_.$auth.password}`,
      },
    })
  },
})
"
Crowdin,https://api.crowdin.com/api/v2/user,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    crowdin: {
      type: ""app"",
      app: ""crowdin"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://api.crowdin.com/api/v2/user`,
      headers: {
        Authorization: `Bearer ${this.crowdin.$auth.oauth_access_token}`,
      },
    })
  },
})
"
Favro.,https://favro.com/api/v1/organizations,"import { axios } from ""@pipedream/platform""
export default defineComponent({
  props: {
    favro_: {
      type: ""app"",
      app: ""favro_"",
    }
  },
  async run({steps, $}) {
    return await axios($, {
      url: `https://favro.com/api/v1/organizations`,
      auth: {
        username: `{{custom_fields.username}}`,
        password: `${this.favro_.$auth.api_token}`,
      },
    })
  },
})
"
